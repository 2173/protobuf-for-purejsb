
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by CSGenerator.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;

using jsval = JSApi.jsval;

public class JSB_UnityEngine_Texture2D
{

////////////////////// Texture2D ///////////////////////////////////////
// constructors

static bool Texture2D_Texture2D1(JSVCall vc, int argc)
{
    int _this = JSApi.getObject((int)JSApi.GetType.Arg);
    JSApi.attachFinalizerObject(_this);
    --argc;

    int len = argc;
    if (len == 2)
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        JSMgr.addJSCSRel(_this, new UnityEngine.Texture2D(arg0, arg1));
    }

    return true;
}

static bool Texture2D_Texture2D2(JSVCall vc, int argc)
{
    int _this = JSApi.getObject((int)JSApi.GetType.Arg);
    JSApi.attachFinalizerObject(_this);
    --argc;

    int len = argc;
    if (len == 4)
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        UnityEngine.TextureFormat arg2 = (UnityEngine.TextureFormat)JSApi.getEnum((int)JSApi.GetType.Arg);
        System.Boolean arg3 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        JSMgr.addJSCSRel(_this, new UnityEngine.Texture2D(arg0, arg1, arg2, arg3));
    }

    return true;
}

static bool Texture2D_Texture2D3(JSVCall vc, int argc)
{
    int _this = JSApi.getObject((int)JSApi.GetType.Arg);
    JSApi.attachFinalizerObject(_this);
    --argc;

    int len = argc;
    if (len == 5)
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        UnityEngine.TextureFormat arg2 = (UnityEngine.TextureFormat)JSApi.getEnum((int)JSApi.GetType.Arg);
        System.Boolean arg3 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        System.Boolean arg4 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        JSMgr.addJSCSRel(_this, new UnityEngine.Texture2D(arg0, arg1, arg2, arg3, arg4));
    }

    return true;
}

// fields

// properties
static void Texture2D_mipmapCount(JSVCall vc)
{
        UnityEngine.Texture2D _this = (UnityEngine.Texture2D)vc.csObj;
        var result = _this.mipmapCount;
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(result));
}
static void Texture2D_format(JSVCall vc)
{
        UnityEngine.Texture2D _this = (UnityEngine.Texture2D)vc.csObj;
        var result = _this.format;
                JSApi.setEnum((int)JSApi.SetType.Rval, (int)result);
}
static void Texture2D_whiteTexture(JSVCall vc)
{
        var result = UnityEngine.Texture2D.whiteTexture;
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, result);
}
static void Texture2D_blackTexture(JSVCall vc)
{
        var result = UnityEngine.Texture2D.blackTexture;
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, result);
}

// methods

static bool Texture2D_Apply__Boolean__Boolean(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Boolean arg0 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        System.Boolean arg1 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        ((UnityEngine.Texture2D)vc.csObj).Apply(arg0, arg1);
    }

    return true;
}

static bool Texture2D_Apply__Boolean(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Boolean arg0 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        ((UnityEngine.Texture2D)vc.csObj).Apply(arg0);
    }

    return true;
}

static bool Texture2D_Apply(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
        ((UnityEngine.Texture2D)vc.csObj).Apply();
    }

    return true;
}

static bool Texture2D_Compress__Boolean(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Boolean arg0 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        ((UnityEngine.Texture2D)vc.csObj).Compress(arg0);
    }

    return true;
}

static bool Texture2D_EncodeToJPG__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                var arrRet = ((UnityEngine.Texture2D)vc.csObj).EncodeToJPG(arg0);
        for (int i = 0; arrRet != null && i < arrRet.Length; i++)
        {
            JSApi.setByte((int)JSApi.SetType.SaveAndTempTrace, arrRet[i]);
            JSApi.moveSaveID2Arr(i);
        }
        JSApi.setArrayS((int)JSApi.SetType.Rval, (arrRet != null ? arrRet.Length : 0), true);
    }

    return true;
}

static bool Texture2D_EncodeToJPG(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
                var arrRet = ((UnityEngine.Texture2D)vc.csObj).EncodeToJPG();
        for (int i = 0; arrRet != null && i < arrRet.Length; i++)
        {
            JSApi.setByte((int)JSApi.SetType.SaveAndTempTrace, arrRet[i]);
            JSApi.moveSaveID2Arr(i);
        }
        JSApi.setArrayS((int)JSApi.SetType.Rval, (arrRet != null ? arrRet.Length : 0), true);
    }

    return true;
}

static bool Texture2D_EncodeToPNG(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
                var arrRet = ((UnityEngine.Texture2D)vc.csObj).EncodeToPNG();
        for (int i = 0; arrRet != null && i < arrRet.Length; i++)
        {
            JSApi.setByte((int)JSApi.SetType.SaveAndTempTrace, arrRet[i]);
            JSApi.moveSaveID2Arr(i);
        }
        JSApi.setArrayS((int)JSApi.SetType.Rval, (arrRet != null ? arrRet.Length : 0), true);
    }

    return true;
}

static bool Texture2D_GetPixel__Int32__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, ((UnityEngine.Texture2D)vc.csObj).GetPixel(arg0, arg1));
    }

    return true;
}

static bool Texture2D_GetPixelBilinear__Single__Single(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        System.Single arg1 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, ((UnityEngine.Texture2D)vc.csObj).GetPixelBilinear(arg0, arg1));
    }

    return true;
}

static bool Texture2D_GetPixels__Int32__Int32__Int32__Int32__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 5) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg2 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg3 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg4 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                var arrRet = ((UnityEngine.Texture2D)vc.csObj).GetPixels(arg0, arg1, arg2, arg3, arg4);
        for (int i = 0; arrRet != null && i < arrRet.Length; i++)
        {
            JSMgr.datax.setObject((int)JSApi.SetType.SaveAndTempTrace, arrRet[i]);
            JSApi.moveSaveID2Arr(i);
        }
        JSApi.setArrayS((int)JSApi.SetType.Rval, (arrRet != null ? arrRet.Length : 0), true);
    }

    return true;
}

static bool Texture2D_GetPixels__Int32__Int32__Int32__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 4) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg2 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg3 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                var arrRet = ((UnityEngine.Texture2D)vc.csObj).GetPixels(arg0, arg1, arg2, arg3);
        for (int i = 0; arrRet != null && i < arrRet.Length; i++)
        {
            JSMgr.datax.setObject((int)JSApi.SetType.SaveAndTempTrace, arrRet[i]);
            JSApi.moveSaveID2Arr(i);
        }
        JSApi.setArrayS((int)JSApi.SetType.Rval, (arrRet != null ? arrRet.Length : 0), true);
    }

    return true;
}

static bool Texture2D_GetPixels__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                var arrRet = ((UnityEngine.Texture2D)vc.csObj).GetPixels(arg0);
        for (int i = 0; arrRet != null && i < arrRet.Length; i++)
        {
            JSMgr.datax.setObject((int)JSApi.SetType.SaveAndTempTrace, arrRet[i]);
            JSApi.moveSaveID2Arr(i);
        }
        JSApi.setArrayS((int)JSApi.SetType.Rval, (arrRet != null ? arrRet.Length : 0), true);
    }

    return true;
}

static bool Texture2D_GetPixels(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
                var arrRet = ((UnityEngine.Texture2D)vc.csObj).GetPixels();
        for (int i = 0; arrRet != null && i < arrRet.Length; i++)
        {
            JSMgr.datax.setObject((int)JSApi.SetType.SaveAndTempTrace, arrRet[i]);
            JSApi.moveSaveID2Arr(i);
        }
        JSApi.setArrayS((int)JSApi.SetType.Rval, (arrRet != null ? arrRet.Length : 0), true);
    }

    return true;
}

static bool Texture2D_GetPixels32__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                var arrRet = ((UnityEngine.Texture2D)vc.csObj).GetPixels32(arg0);
        for (int i = 0; arrRet != null && i < arrRet.Length; i++)
        {
            JSMgr.datax.setObject((int)JSApi.SetType.SaveAndTempTrace, arrRet[i]);
            JSApi.moveSaveID2Arr(i);
        }
        JSApi.setArrayS((int)JSApi.SetType.Rval, (arrRet != null ? arrRet.Length : 0), true);
    }

    return true;
}

static bool Texture2D_GetPixels32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
                var arrRet = ((UnityEngine.Texture2D)vc.csObj).GetPixels32();
        for (int i = 0; arrRet != null && i < arrRet.Length; i++)
        {
            JSMgr.datax.setObject((int)JSApi.SetType.SaveAndTempTrace, arrRet[i]);
            JSApi.moveSaveID2Arr(i);
        }
        JSApi.setArrayS((int)JSApi.SetType.Rval, (arrRet != null ? arrRet.Length : 0), true);
    }

    return true;
}

static bool Texture2D_GetRawTextureData(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
                var arrRet = ((UnityEngine.Texture2D)vc.csObj).GetRawTextureData();
        for (int i = 0; arrRet != null && i < arrRet.Length; i++)
        {
            JSApi.setByte((int)JSApi.SetType.SaveAndTempTrace, arrRet[i]);
            JSApi.moveSaveID2Arr(i);
        }
        JSApi.setArrayS((int)JSApi.SetType.Rval, (arrRet != null ? arrRet.Length : 0), true);
    }

    return true;
}

static bool Texture2D_LoadImage__Byte_Array__Boolean(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Byte[] arg0 = JSDataExchangeMgr.GetJSArg<System.Byte[]>(() =>
        {
            int jsObjID = JSApi.getObject((int)JSApi.GetType.Arg);
            int length = JSApi.getArrayLength(jsObjID);
            var ret = new System.Byte[length];
            for (var i = 0; i < length; i++) {
                JSApi.getElement(jsObjID, i);
                ret[i] = (System.Byte)JSApi.getByte((int)JSApi.GetType.SaveAndRemove);
            }
            return ret;
        });
        System.Boolean arg1 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(((UnityEngine.Texture2D)vc.csObj).LoadImage(arg0, arg1)));
    }

    return true;
}

static bool Texture2D_LoadImage__Byte_Array(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Byte[] arg0 = JSDataExchangeMgr.GetJSArg<System.Byte[]>(() =>
        {
            int jsObjID = JSApi.getObject((int)JSApi.GetType.Arg);
            int length = JSApi.getArrayLength(jsObjID);
            var ret = new System.Byte[length];
            for (var i = 0; i < length; i++) {
                JSApi.getElement(jsObjID, i);
                ret[i] = (System.Byte)JSApi.getByte((int)JSApi.GetType.SaveAndRemove);
            }
            return ret;
        });
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(((UnityEngine.Texture2D)vc.csObj).LoadImage(arg0)));
    }

    return true;
}

static bool Texture2D_LoadRawTextureData__IntPtr__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.IntPtr arg0 = (System.IntPtr)JSApi.getIntPtr((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        ((UnityEngine.Texture2D)vc.csObj).LoadRawTextureData(arg0, arg1);
    }

    return true;
}

static bool Texture2D_LoadRawTextureData__Byte_Array(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Byte[] arg0 = JSDataExchangeMgr.GetJSArg<System.Byte[]>(() =>
        {
            int jsObjID = JSApi.getObject((int)JSApi.GetType.Arg);
            int length = JSApi.getArrayLength(jsObjID);
            var ret = new System.Byte[length];
            for (var i = 0; i < length; i++) {
                JSApi.getElement(jsObjID, i);
                ret[i] = (System.Byte)JSApi.getByte((int)JSApi.GetType.SaveAndRemove);
            }
            return ret;
        });
        ((UnityEngine.Texture2D)vc.csObj).LoadRawTextureData(arg0);
    }

    return true;
}

static bool Texture2D_PackTextures__Texture2D_Array__Int32__Int32__Boolean(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 4) 
    {
        UnityEngine.Texture2D[] arg0 = JSDataExchangeMgr.GetJSArg<UnityEngine.Texture2D[]>(() =>
        {
            int jsObjID = JSApi.getObject((int)JSApi.GetType.Arg);
            int length = JSApi.getArrayLength(jsObjID);
            var ret = new UnityEngine.Texture2D[length];
            for (var i = 0; i < length; i++) {
                JSApi.getElement(jsObjID, i);
                ret[i] = (UnityEngine.Texture2D)JSMgr.datax.getObject((int)JSApi.GetType.SaveAndRemove);
            }
            return ret;
        });
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg2 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Boolean arg3 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
                var arrRet = ((UnityEngine.Texture2D)vc.csObj).PackTextures(arg0, arg1, arg2, arg3);
        for (int i = 0; arrRet != null && i < arrRet.Length; i++)
        {
            JSMgr.datax.setObject((int)JSApi.SetType.SaveAndTempTrace, arrRet[i]);
            JSApi.moveSaveID2Arr(i);
        }
        JSApi.setArrayS((int)JSApi.SetType.Rval, (arrRet != null ? arrRet.Length : 0), true);
    }

    return true;
}

static bool Texture2D_PackTextures__Texture2D_Array__Int32__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 3) 
    {
        UnityEngine.Texture2D[] arg0 = JSDataExchangeMgr.GetJSArg<UnityEngine.Texture2D[]>(() =>
        {
            int jsObjID = JSApi.getObject((int)JSApi.GetType.Arg);
            int length = JSApi.getArrayLength(jsObjID);
            var ret = new UnityEngine.Texture2D[length];
            for (var i = 0; i < length; i++) {
                JSApi.getElement(jsObjID, i);
                ret[i] = (UnityEngine.Texture2D)JSMgr.datax.getObject((int)JSApi.GetType.SaveAndRemove);
            }
            return ret;
        });
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg2 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                var arrRet = ((UnityEngine.Texture2D)vc.csObj).PackTextures(arg0, arg1, arg2);
        for (int i = 0; arrRet != null && i < arrRet.Length; i++)
        {
            JSMgr.datax.setObject((int)JSApi.SetType.SaveAndTempTrace, arrRet[i]);
            JSApi.moveSaveID2Arr(i);
        }
        JSApi.setArrayS((int)JSApi.SetType.Rval, (arrRet != null ? arrRet.Length : 0), true);
    }

    return true;
}

static bool Texture2D_PackTextures__Texture2D_Array__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        UnityEngine.Texture2D[] arg0 = JSDataExchangeMgr.GetJSArg<UnityEngine.Texture2D[]>(() =>
        {
            int jsObjID = JSApi.getObject((int)JSApi.GetType.Arg);
            int length = JSApi.getArrayLength(jsObjID);
            var ret = new UnityEngine.Texture2D[length];
            for (var i = 0; i < length; i++) {
                JSApi.getElement(jsObjID, i);
                ret[i] = (UnityEngine.Texture2D)JSMgr.datax.getObject((int)JSApi.GetType.SaveAndRemove);
            }
            return ret;
        });
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                var arrRet = ((UnityEngine.Texture2D)vc.csObj).PackTextures(arg0, arg1);
        for (int i = 0; arrRet != null && i < arrRet.Length; i++)
        {
            JSMgr.datax.setObject((int)JSApi.SetType.SaveAndTempTrace, arrRet[i]);
            JSApi.moveSaveID2Arr(i);
        }
        JSApi.setArrayS((int)JSApi.SetType.Rval, (arrRet != null ? arrRet.Length : 0), true);
    }

    return true;
}

static bool Texture2D_ReadPixels__Rect__Int32__Int32__Boolean(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 4) 
    {
        UnityEngine.Rect arg0 = (UnityEngine.Rect)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg2 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Boolean arg3 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        ((UnityEngine.Texture2D)vc.csObj).ReadPixels(arg0, arg1, arg2, arg3);
    }

    return true;
}

static bool Texture2D_ReadPixels__Rect__Int32__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 3) 
    {
        UnityEngine.Rect arg0 = (UnityEngine.Rect)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg2 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        ((UnityEngine.Texture2D)vc.csObj).ReadPixels(arg0, arg1, arg2);
    }

    return true;
}

static bool Texture2D_Resize__Int32__Int32__TextureFormat__Boolean(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 4) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        UnityEngine.TextureFormat arg2 = (UnityEngine.TextureFormat)JSApi.getEnum((int)JSApi.GetType.Arg);
        System.Boolean arg3 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(((UnityEngine.Texture2D)vc.csObj).Resize(arg0, arg1, arg2, arg3)));
    }

    return true;
}

static bool Texture2D_Resize__Int32__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(((UnityEngine.Texture2D)vc.csObj).Resize(arg0, arg1)));
    }

    return true;
}

static bool Texture2D_SetPixel__Int32__Int32__Color(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 3) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        UnityEngine.Color arg2 = (UnityEngine.Color)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        ((UnityEngine.Texture2D)vc.csObj).SetPixel(arg0, arg1, arg2);
    }

    return true;
}

static bool Texture2D_SetPixels__Int32__Int32__Int32__Int32__Color_Array__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 6) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg2 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg3 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        UnityEngine.Color[] arg4 = JSDataExchangeMgr.GetJSArg<UnityEngine.Color[]>(() =>
        {
            int jsObjID = JSApi.getObject((int)JSApi.GetType.Arg);
            int length = JSApi.getArrayLength(jsObjID);
            var ret = new UnityEngine.Color[length];
            for (var i = 0; i < length; i++) {
                JSApi.getElement(jsObjID, i);
                ret[i] = (UnityEngine.Color)JSMgr.datax.getObject((int)JSApi.GetType.SaveAndRemove);
            }
            return ret;
        });
        System.Int32 arg5 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        ((UnityEngine.Texture2D)vc.csObj).SetPixels(arg0, arg1, arg2, arg3, arg4, arg5);
    }

    return true;
}

static bool Texture2D_SetPixels__Int32__Int32__Int32__Int32__Color_Array(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 5) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg2 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg3 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        UnityEngine.Color[] arg4 = JSDataExchangeMgr.GetJSArg<UnityEngine.Color[]>(() =>
        {
            int jsObjID = JSApi.getObject((int)JSApi.GetType.Arg);
            int length = JSApi.getArrayLength(jsObjID);
            var ret = new UnityEngine.Color[length];
            for (var i = 0; i < length; i++) {
                JSApi.getElement(jsObjID, i);
                ret[i] = (UnityEngine.Color)JSMgr.datax.getObject((int)JSApi.GetType.SaveAndRemove);
            }
            return ret;
        });
        ((UnityEngine.Texture2D)vc.csObj).SetPixels(arg0, arg1, arg2, arg3, arg4);
    }

    return true;
}

static bool Texture2D_SetPixels__Color_Array__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        UnityEngine.Color[] arg0 = JSDataExchangeMgr.GetJSArg<UnityEngine.Color[]>(() =>
        {
            int jsObjID = JSApi.getObject((int)JSApi.GetType.Arg);
            int length = JSApi.getArrayLength(jsObjID);
            var ret = new UnityEngine.Color[length];
            for (var i = 0; i < length; i++) {
                JSApi.getElement(jsObjID, i);
                ret[i] = (UnityEngine.Color)JSMgr.datax.getObject((int)JSApi.GetType.SaveAndRemove);
            }
            return ret;
        });
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        ((UnityEngine.Texture2D)vc.csObj).SetPixels(arg0, arg1);
    }

    return true;
}

static bool Texture2D_SetPixels__Color_Array(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        UnityEngine.Color[] arg0 = JSDataExchangeMgr.GetJSArg<UnityEngine.Color[]>(() =>
        {
            int jsObjID = JSApi.getObject((int)JSApi.GetType.Arg);
            int length = JSApi.getArrayLength(jsObjID);
            var ret = new UnityEngine.Color[length];
            for (var i = 0; i < length; i++) {
                JSApi.getElement(jsObjID, i);
                ret[i] = (UnityEngine.Color)JSMgr.datax.getObject((int)JSApi.GetType.SaveAndRemove);
            }
            return ret;
        });
        ((UnityEngine.Texture2D)vc.csObj).SetPixels(arg0);
    }

    return true;
}

static bool Texture2D_SetPixels32__Int32__Int32__Int32__Int32__Color32_Array__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 6) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg2 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg3 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        UnityEngine.Color32[] arg4 = JSDataExchangeMgr.GetJSArg<UnityEngine.Color32[]>(() =>
        {
            int jsObjID = JSApi.getObject((int)JSApi.GetType.Arg);
            int length = JSApi.getArrayLength(jsObjID);
            var ret = new UnityEngine.Color32[length];
            for (var i = 0; i < length; i++) {
                JSApi.getElement(jsObjID, i);
                ret[i] = (UnityEngine.Color32)JSMgr.datax.getObject((int)JSApi.GetType.SaveAndRemove);
            }
            return ret;
        });
        System.Int32 arg5 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        ((UnityEngine.Texture2D)vc.csObj).SetPixels32(arg0, arg1, arg2, arg3, arg4, arg5);
    }

    return true;
}

static bool Texture2D_SetPixels32__Int32__Int32__Int32__Int32__Color32_Array(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 5) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg2 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg3 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        UnityEngine.Color32[] arg4 = JSDataExchangeMgr.GetJSArg<UnityEngine.Color32[]>(() =>
        {
            int jsObjID = JSApi.getObject((int)JSApi.GetType.Arg);
            int length = JSApi.getArrayLength(jsObjID);
            var ret = new UnityEngine.Color32[length];
            for (var i = 0; i < length; i++) {
                JSApi.getElement(jsObjID, i);
                ret[i] = (UnityEngine.Color32)JSMgr.datax.getObject((int)JSApi.GetType.SaveAndRemove);
            }
            return ret;
        });
        ((UnityEngine.Texture2D)vc.csObj).SetPixels32(arg0, arg1, arg2, arg3, arg4);
    }

    return true;
}

static bool Texture2D_SetPixels32__Color32_Array__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        UnityEngine.Color32[] arg0 = JSDataExchangeMgr.GetJSArg<UnityEngine.Color32[]>(() =>
        {
            int jsObjID = JSApi.getObject((int)JSApi.GetType.Arg);
            int length = JSApi.getArrayLength(jsObjID);
            var ret = new UnityEngine.Color32[length];
            for (var i = 0; i < length; i++) {
                JSApi.getElement(jsObjID, i);
                ret[i] = (UnityEngine.Color32)JSMgr.datax.getObject((int)JSApi.GetType.SaveAndRemove);
            }
            return ret;
        });
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        ((UnityEngine.Texture2D)vc.csObj).SetPixels32(arg0, arg1);
    }

    return true;
}

static bool Texture2D_SetPixels32__Color32_Array(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        UnityEngine.Color32[] arg0 = JSDataExchangeMgr.GetJSArg<UnityEngine.Color32[]>(() =>
        {
            int jsObjID = JSApi.getObject((int)JSApi.GetType.Arg);
            int length = JSApi.getArrayLength(jsObjID);
            var ret = new UnityEngine.Color32[length];
            for (var i = 0; i < length; i++) {
                JSApi.getElement(jsObjID, i);
                ret[i] = (UnityEngine.Color32)JSMgr.datax.getObject((int)JSApi.GetType.SaveAndRemove);
            }
            return ret;
        });
        ((UnityEngine.Texture2D)vc.csObj).SetPixels32(arg0);
    }

    return true;
}

static bool Texture2D_UpdateExternalTexture__IntPtr(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.IntPtr arg0 = (System.IntPtr)JSApi.getIntPtr((int)JSApi.GetType.Arg);
        ((UnityEngine.Texture2D)vc.csObj).UpdateExternalTexture(arg0);
    }

    return true;
}

static bool Texture2D_CreateExternalTexture__Int32__Int32__TextureFormat__Boolean__Boolean__IntPtr(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 6) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        UnityEngine.TextureFormat arg2 = (UnityEngine.TextureFormat)JSApi.getEnum((int)JSApi.GetType.Arg);
        System.Boolean arg3 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        System.Boolean arg4 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        System.IntPtr arg5 = (System.IntPtr)JSApi.getIntPtr((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, UnityEngine.Texture2D.CreateExternalTexture(arg0, arg1, arg2, arg3, arg4, arg5));
    }

    return true;
}


//register

public static void __Register()
{
    JSMgr.CallbackInfo ci = new JSMgr.CallbackInfo();
    ci.type = typeof(UnityEngine.Texture2D);
    ci.fields = new JSMgr.CSCallbackField[]
    {

    };
    ci.properties = new JSMgr.CSCallbackProperty[]
    {
        Texture2D_mipmapCount,
        Texture2D_format,
        Texture2D_whiteTexture,
        Texture2D_blackTexture,

    };
    ci.constructors = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(Texture2D_Texture2D1, ".ctor"),
        new JSMgr.MethodCallBackInfo(Texture2D_Texture2D2, ".ctor"),
        new JSMgr.MethodCallBackInfo(Texture2D_Texture2D3, ".ctor"),

    };
    ci.methods = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(Texture2D_Apply__Boolean__Boolean, "Apply"),
        new JSMgr.MethodCallBackInfo(Texture2D_Apply__Boolean, "Apply"),
        new JSMgr.MethodCallBackInfo(Texture2D_Apply, "Apply"),
        new JSMgr.MethodCallBackInfo(Texture2D_Compress__Boolean, "Compress"),
        new JSMgr.MethodCallBackInfo(Texture2D_EncodeToJPG__Int32, "EncodeToJPG"),
        new JSMgr.MethodCallBackInfo(Texture2D_EncodeToJPG, "EncodeToJPG"),
        new JSMgr.MethodCallBackInfo(Texture2D_EncodeToPNG, "EncodeToPNG"),
        new JSMgr.MethodCallBackInfo(Texture2D_GetPixel__Int32__Int32, "GetPixel"),
        new JSMgr.MethodCallBackInfo(Texture2D_GetPixelBilinear__Single__Single, "GetPixelBilinear"),
        new JSMgr.MethodCallBackInfo(Texture2D_GetPixels__Int32__Int32__Int32__Int32__Int32, "GetPixels"),
        new JSMgr.MethodCallBackInfo(Texture2D_GetPixels__Int32__Int32__Int32__Int32, "GetPixels"),
        new JSMgr.MethodCallBackInfo(Texture2D_GetPixels__Int32, "GetPixels"),
        new JSMgr.MethodCallBackInfo(Texture2D_GetPixels, "GetPixels"),
        new JSMgr.MethodCallBackInfo(Texture2D_GetPixels32__Int32, "GetPixels32"),
        new JSMgr.MethodCallBackInfo(Texture2D_GetPixels32, "GetPixels32"),
        new JSMgr.MethodCallBackInfo(Texture2D_GetRawTextureData, "GetRawTextureData"),
        new JSMgr.MethodCallBackInfo(Texture2D_LoadImage__Byte_Array__Boolean, "LoadImage"),
        new JSMgr.MethodCallBackInfo(Texture2D_LoadImage__Byte_Array, "LoadImage"),
        new JSMgr.MethodCallBackInfo(Texture2D_LoadRawTextureData__IntPtr__Int32, "LoadRawTextureData"),
        new JSMgr.MethodCallBackInfo(Texture2D_LoadRawTextureData__Byte_Array, "LoadRawTextureData"),
        new JSMgr.MethodCallBackInfo(Texture2D_PackTextures__Texture2D_Array__Int32__Int32__Boolean, "PackTextures"),
        new JSMgr.MethodCallBackInfo(Texture2D_PackTextures__Texture2D_Array__Int32__Int32, "PackTextures"),
        new JSMgr.MethodCallBackInfo(Texture2D_PackTextures__Texture2D_Array__Int32, "PackTextures"),
        new JSMgr.MethodCallBackInfo(Texture2D_ReadPixels__Rect__Int32__Int32__Boolean, "ReadPixels"),
        new JSMgr.MethodCallBackInfo(Texture2D_ReadPixels__Rect__Int32__Int32, "ReadPixels"),
        new JSMgr.MethodCallBackInfo(Texture2D_Resize__Int32__Int32__TextureFormat__Boolean, "Resize"),
        new JSMgr.MethodCallBackInfo(Texture2D_Resize__Int32__Int32, "Resize"),
        new JSMgr.MethodCallBackInfo(Texture2D_SetPixel__Int32__Int32__Color, "SetPixel"),
        new JSMgr.MethodCallBackInfo(Texture2D_SetPixels__Int32__Int32__Int32__Int32__Color_Array__Int32, "SetPixels"),
        new JSMgr.MethodCallBackInfo(Texture2D_SetPixels__Int32__Int32__Int32__Int32__Color_Array, "SetPixels"),
        new JSMgr.MethodCallBackInfo(Texture2D_SetPixels__Color_Array__Int32, "SetPixels"),
        new JSMgr.MethodCallBackInfo(Texture2D_SetPixels__Color_Array, "SetPixels"),
        new JSMgr.MethodCallBackInfo(Texture2D_SetPixels32__Int32__Int32__Int32__Int32__Color32_Array__Int32, "SetPixels32"),
        new JSMgr.MethodCallBackInfo(Texture2D_SetPixels32__Int32__Int32__Int32__Int32__Color32_Array, "SetPixels32"),
        new JSMgr.MethodCallBackInfo(Texture2D_SetPixels32__Color32_Array__Int32, "SetPixels32"),
        new JSMgr.MethodCallBackInfo(Texture2D_SetPixels32__Color32_Array, "SetPixels32"),
        new JSMgr.MethodCallBackInfo(Texture2D_UpdateExternalTexture__IntPtr, "UpdateExternalTexture"),
        new JSMgr.MethodCallBackInfo(Texture2D_CreateExternalTexture__Int32__Int32__TextureFormat__Boolean__Boolean__IntPtr, "CreateExternalTexture"),

    };
    JSMgr.allCallbackInfo.Add(ci);
}


}
