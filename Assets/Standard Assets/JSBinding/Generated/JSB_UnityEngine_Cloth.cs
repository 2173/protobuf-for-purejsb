
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by CSGenerator.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;

using jsval = JSApi.jsval;

public class JSB_UnityEngine_Cloth
{

////////////////////// Cloth ///////////////////////////////////////
// constructors

static bool Cloth_Cloth1(JSVCall vc, int argc)
{
    int _this = JSApi.getObject((int)JSApi.GetType.Arg);
    JSApi.attachFinalizerObject(_this);
    --argc;

    int len = argc;
    if (len == 0)
    {
        JSMgr.addJSCSRel(_this, new UnityEngine.Cloth());
    }

    return true;
}

// fields

// properties
static void Cloth_sleepThreshold(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.Cloth _this = (UnityEngine.Cloth)vc.csObj;
        var result = _this.sleepThreshold;
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(result));
    }
    else
    { 
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.Cloth _this = (UnityEngine.Cloth)vc.csObj;
        _this.sleepThreshold = arg0;
    }
}
static void Cloth_bendingStiffness(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.Cloth _this = (UnityEngine.Cloth)vc.csObj;
        var result = _this.bendingStiffness;
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(result));
    }
    else
    { 
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.Cloth _this = (UnityEngine.Cloth)vc.csObj;
        _this.bendingStiffness = arg0;
    }
}
static void Cloth_stretchingStiffness(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.Cloth _this = (UnityEngine.Cloth)vc.csObj;
        var result = _this.stretchingStiffness;
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(result));
    }
    else
    { 
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.Cloth _this = (UnityEngine.Cloth)vc.csObj;
        _this.stretchingStiffness = arg0;
    }
}
static void Cloth_damping(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.Cloth _this = (UnityEngine.Cloth)vc.csObj;
        var result = _this.damping;
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(result));
    }
    else
    { 
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.Cloth _this = (UnityEngine.Cloth)vc.csObj;
        _this.damping = arg0;
    }
}
static void Cloth_externalAcceleration(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.Cloth _this = (UnityEngine.Cloth)vc.csObj;
        var result = _this.externalAcceleration;
                JSApi.setVector3S((int)JSApi.SetType.Rval, result);
    }
    else
    { 
        UnityEngine.Vector3 arg0 = (UnityEngine.Vector3)JSApi.getVector3S((int)JSApi.GetType.Arg);
        UnityEngine.Cloth _this = (UnityEngine.Cloth)vc.csObj;
        _this.externalAcceleration = arg0;
    }
}
static void Cloth_randomAcceleration(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.Cloth _this = (UnityEngine.Cloth)vc.csObj;
        var result = _this.randomAcceleration;
                JSApi.setVector3S((int)JSApi.SetType.Rval, result);
    }
    else
    { 
        UnityEngine.Vector3 arg0 = (UnityEngine.Vector3)JSApi.getVector3S((int)JSApi.GetType.Arg);
        UnityEngine.Cloth _this = (UnityEngine.Cloth)vc.csObj;
        _this.randomAcceleration = arg0;
    }
}
static void Cloth_useGravity(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.Cloth _this = (UnityEngine.Cloth)vc.csObj;
        var result = _this.useGravity;
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(result));
    }
    else
    { 
        System.Boolean arg0 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        UnityEngine.Cloth _this = (UnityEngine.Cloth)vc.csObj;
        _this.useGravity = arg0;
    }
}
static void Cloth_enabled(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.Cloth _this = (UnityEngine.Cloth)vc.csObj;
        var result = _this.enabled;
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(result));
    }
    else
    { 
        System.Boolean arg0 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        UnityEngine.Cloth _this = (UnityEngine.Cloth)vc.csObj;
        _this.enabled = arg0;
    }
}
static void Cloth_vertices(JSVCall vc)
{
        UnityEngine.Cloth _this = (UnityEngine.Cloth)vc.csObj;
        var result = _this.vertices;
                var arrRet = result;
        for (int i = 0; arrRet != null && i < arrRet.Length; i++)
        {
            JSApi.setVector3S((int)JSApi.SetType.SaveAndTempTrace, arrRet[i]);
            JSApi.moveSaveID2Arr(i);
        }
        JSApi.setArrayS((int)JSApi.SetType.Rval, (arrRet != null ? arrRet.Length : 0), true);
}
static void Cloth_normals(JSVCall vc)
{
        UnityEngine.Cloth _this = (UnityEngine.Cloth)vc.csObj;
        var result = _this.normals;
                var arrRet = result;
        for (int i = 0; arrRet != null && i < arrRet.Length; i++)
        {
            JSApi.setVector3S((int)JSApi.SetType.SaveAndTempTrace, arrRet[i]);
            JSApi.moveSaveID2Arr(i);
        }
        JSApi.setArrayS((int)JSApi.SetType.Rval, (arrRet != null ? arrRet.Length : 0), true);
}
static void Cloth_friction(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.Cloth _this = (UnityEngine.Cloth)vc.csObj;
        var result = _this.friction;
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(result));
    }
    else
    { 
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.Cloth _this = (UnityEngine.Cloth)vc.csObj;
        _this.friction = arg0;
    }
}
static void Cloth_collisionMassScale(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.Cloth _this = (UnityEngine.Cloth)vc.csObj;
        var result = _this.collisionMassScale;
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(result));
    }
    else
    { 
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.Cloth _this = (UnityEngine.Cloth)vc.csObj;
        _this.collisionMassScale = arg0;
    }
}
static void Cloth_useContinuousCollision(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.Cloth _this = (UnityEngine.Cloth)vc.csObj;
        var result = _this.useContinuousCollision;
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(result));
    }
    else
    { 
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.Cloth _this = (UnityEngine.Cloth)vc.csObj;
        _this.useContinuousCollision = arg0;
    }
}
static void Cloth_useVirtualParticles(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.Cloth _this = (UnityEngine.Cloth)vc.csObj;
        var result = _this.useVirtualParticles;
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(result));
    }
    else
    { 
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.Cloth _this = (UnityEngine.Cloth)vc.csObj;
        _this.useVirtualParticles = arg0;
    }
}
static void Cloth_coefficients(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.Cloth _this = (UnityEngine.Cloth)vc.csObj;
        var result = _this.coefficients;
                var arrRet = result;
        for (int i = 0; arrRet != null && i < arrRet.Length; i++)
        {
            JSMgr.datax.setObject((int)JSApi.SetType.SaveAndTempTrace, arrRet[i]);
            JSApi.moveSaveID2Arr(i);
        }
        JSApi.setArrayS((int)JSApi.SetType.Rval, (arrRet != null ? arrRet.Length : 0), true);
    }
    else
    { 
        UnityEngine.ClothSkinningCoefficient[] arg0 = JSDataExchangeMgr.GetJSArg<UnityEngine.ClothSkinningCoefficient[]>(() =>
        {
            int jsObjID = JSApi.getObject((int)JSApi.GetType.Arg);
            int length = JSApi.getArrayLength(jsObjID);
            var ret = new UnityEngine.ClothSkinningCoefficient[length];
            for (var i = 0; i < length; i++) {
                JSApi.getElement(jsObjID, i);
                ret[i] = (UnityEngine.ClothSkinningCoefficient)JSMgr.datax.getObject((int)JSApi.GetType.SaveAndRemove);
            }
            return ret;
        });
        UnityEngine.Cloth _this = (UnityEngine.Cloth)vc.csObj;
        _this.coefficients = arg0;
    }
}
static void Cloth_worldVelocityScale(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.Cloth _this = (UnityEngine.Cloth)vc.csObj;
        var result = _this.worldVelocityScale;
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(result));
    }
    else
    { 
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.Cloth _this = (UnityEngine.Cloth)vc.csObj;
        _this.worldVelocityScale = arg0;
    }
}
static void Cloth_worldAccelerationScale(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.Cloth _this = (UnityEngine.Cloth)vc.csObj;
        var result = _this.worldAccelerationScale;
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(result));
    }
    else
    { 
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.Cloth _this = (UnityEngine.Cloth)vc.csObj;
        _this.worldAccelerationScale = arg0;
    }
}
static void Cloth_solverFrequency(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.Cloth _this = (UnityEngine.Cloth)vc.csObj;
        var result = _this.solverFrequency;
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(result));
    }
    else
    { 
        System.Boolean arg0 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        UnityEngine.Cloth _this = (UnityEngine.Cloth)vc.csObj;
        _this.solverFrequency = arg0;
    }
}
static void Cloth_capsuleColliders(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.Cloth _this = (UnityEngine.Cloth)vc.csObj;
        var result = _this.capsuleColliders;
                var arrRet = result;
        for (int i = 0; arrRet != null && i < arrRet.Length; i++)
        {
            JSMgr.datax.setObject((int)JSApi.SetType.SaveAndTempTrace, arrRet[i]);
            JSApi.moveSaveID2Arr(i);
        }
        JSApi.setArrayS((int)JSApi.SetType.Rval, (arrRet != null ? arrRet.Length : 0), true);
    }
    else
    { 
        UnityEngine.CapsuleCollider[] arg0 = JSDataExchangeMgr.GetJSArg<UnityEngine.CapsuleCollider[]>(() =>
        {
            int jsObjID = JSApi.getObject((int)JSApi.GetType.Arg);
            int length = JSApi.getArrayLength(jsObjID);
            var ret = new UnityEngine.CapsuleCollider[length];
            for (var i = 0; i < length; i++) {
                JSApi.getElement(jsObjID, i);
                ret[i] = (UnityEngine.CapsuleCollider)JSMgr.datax.getObject((int)JSApi.GetType.SaveAndRemove);
            }
            return ret;
        });
        UnityEngine.Cloth _this = (UnityEngine.Cloth)vc.csObj;
        _this.capsuleColliders = arg0;
    }
}
static void Cloth_sphereColliders(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.Cloth _this = (UnityEngine.Cloth)vc.csObj;
        var result = _this.sphereColliders;
                var arrRet = result;
        for (int i = 0; arrRet != null && i < arrRet.Length; i++)
        {
            JSMgr.datax.setObject((int)JSApi.SetType.SaveAndTempTrace, arrRet[i]);
            JSApi.moveSaveID2Arr(i);
        }
        JSApi.setArrayS((int)JSApi.SetType.Rval, (arrRet != null ? arrRet.Length : 0), true);
    }
    else
    { 
        UnityEngine.ClothSphereColliderPair[] arg0 = JSDataExchangeMgr.GetJSArg<UnityEngine.ClothSphereColliderPair[]>(() =>
        {
            int jsObjID = JSApi.getObject((int)JSApi.GetType.Arg);
            int length = JSApi.getArrayLength(jsObjID);
            var ret = new UnityEngine.ClothSphereColliderPair[length];
            for (var i = 0; i < length; i++) {
                JSApi.getElement(jsObjID, i);
                ret[i] = (UnityEngine.ClothSphereColliderPair)JSMgr.datax.getObject((int)JSApi.GetType.SaveAndRemove);
            }
            return ret;
        });
        UnityEngine.Cloth _this = (UnityEngine.Cloth)vc.csObj;
        _this.sphereColliders = arg0;
    }
}

// methods

static bool Cloth_ClearTransformMotion(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
        ((UnityEngine.Cloth)vc.csObj).ClearTransformMotion();
    }

    return true;
}

static bool Cloth_SetEnabledFading__Boolean__Single(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Boolean arg0 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        System.Single arg1 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        ((UnityEngine.Cloth)vc.csObj).SetEnabledFading(arg0, arg1);
    }

    return true;
}

static bool Cloth_SetEnabledFading__Boolean(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Boolean arg0 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        ((UnityEngine.Cloth)vc.csObj).SetEnabledFading(arg0);
    }

    return true;
}


//register

public static void __Register()
{
    JSMgr.CallbackInfo ci = new JSMgr.CallbackInfo();
    ci.type = typeof(UnityEngine.Cloth);
    ci.fields = new JSMgr.CSCallbackField[]
    {

    };
    ci.properties = new JSMgr.CSCallbackProperty[]
    {
        Cloth_sleepThreshold,
        Cloth_bendingStiffness,
        Cloth_stretchingStiffness,
        Cloth_damping,
        Cloth_externalAcceleration,
        Cloth_randomAcceleration,
        Cloth_useGravity,
        Cloth_enabled,
        Cloth_vertices,
        Cloth_normals,
        Cloth_friction,
        Cloth_collisionMassScale,
        Cloth_useContinuousCollision,
        Cloth_useVirtualParticles,
        Cloth_coefficients,
        Cloth_worldVelocityScale,
        Cloth_worldAccelerationScale,
        Cloth_solverFrequency,
        Cloth_capsuleColliders,
        Cloth_sphereColliders,

    };
    ci.constructors = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(Cloth_Cloth1, ".ctor"),

    };
    ci.methods = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(Cloth_ClearTransformMotion, "ClearTransformMotion"),
        new JSMgr.MethodCallBackInfo(Cloth_SetEnabledFading__Boolean__Single, "SetEnabledFading"),
        new JSMgr.MethodCallBackInfo(Cloth_SetEnabledFading__Boolean, "SetEnabledFading"),

    };
    JSMgr.allCallbackInfo.Add(ci);
}


}
