
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by CSGenerator.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;

using jsval = JSApi.jsval;

public class JSB_UnityEngine_Plane
{

////////////////////// Plane ///////////////////////////////////////
// constructors
public static ConstructorID constructorID0 = new ConstructorID(null, null);

static bool Plane_Plane1(JSVCall vc, int argc)
{
    int _this = JSApi.getObject((int)JSApi.GetType.Arg);
    JSApi.attachFinalizerObject(_this);
    --argc;

    int len = argc;
    if (len == 0)
    {
        JSMgr.addJSCSRel(_this, new UnityEngine.Plane());
    }

    return true;
}

static bool Plane_Plane2(JSVCall vc, int argc)
{
    int _this = JSApi.getObject((int)JSApi.GetType.Arg);
    JSApi.attachFinalizerObject(_this);
    --argc;

    int len = argc;
    if (len == 2)
    {
        UnityEngine.Vector3 arg0 = (UnityEngine.Vector3)JSApi.getVector3S((int)JSApi.GetType.Arg);
        UnityEngine.Vector3 arg1 = (UnityEngine.Vector3)JSApi.getVector3S((int)JSApi.GetType.Arg);
        JSMgr.addJSCSRel(_this, new UnityEngine.Plane(arg0, arg1));
    }

    return true;
}

static bool Plane_Plane3(JSVCall vc, int argc)
{
    int _this = JSApi.getObject((int)JSApi.GetType.Arg);
    JSApi.attachFinalizerObject(_this);
    --argc;

    int len = argc;
    if (len == 2)
    {
        UnityEngine.Vector3 arg0 = (UnityEngine.Vector3)JSApi.getVector3S((int)JSApi.GetType.Arg);
        System.Single arg1 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        JSMgr.addJSCSRel(_this, new UnityEngine.Plane(arg0, arg1));
    }

    return true;
}

static bool Plane_Plane4(JSVCall vc, int argc)
{
    int _this = JSApi.getObject((int)JSApi.GetType.Arg);
    JSApi.attachFinalizerObject(_this);
    --argc;

    int len = argc;
    if (len == 3)
    {
        UnityEngine.Vector3 arg0 = (UnityEngine.Vector3)JSApi.getVector3S((int)JSApi.GetType.Arg);
        UnityEngine.Vector3 arg1 = (UnityEngine.Vector3)JSApi.getVector3S((int)JSApi.GetType.Arg);
        UnityEngine.Vector3 arg2 = (UnityEngine.Vector3)JSApi.getVector3S((int)JSApi.GetType.Arg);
        JSMgr.addJSCSRel(_this, new UnityEngine.Plane(arg0, arg1, arg2));
    }

    return true;
}

// fields

// properties
static void Plane_normal(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.Plane _this = (UnityEngine.Plane)vc.csObj;
        var result = _this.normal;
                JSApi.setVector3S((int)JSApi.SetType.Rval, result);
    }
    else
    { 
        UnityEngine.Vector3 arg0 = (UnityEngine.Vector3)JSApi.getVector3S((int)JSApi.GetType.Arg);
        UnityEngine.Plane _this = (UnityEngine.Plane)vc.csObj;
        _this.normal = arg0;
        JSMgr.changeJSObj(vc.jsObjID, _this);
    }
}
static void Plane_distance(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.Plane _this = (UnityEngine.Plane)vc.csObj;
        var result = _this.distance;
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(result));
    }
    else
    { 
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.Plane _this = (UnityEngine.Plane)vc.csObj;
        _this.distance = arg0;
        JSMgr.changeJSObj(vc.jsObjID, _this);
    }
}

// methods

static bool Plane_GetDistanceToPoint__Vector3(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        UnityEngine.Vector3 arg0 = (UnityEngine.Vector3)JSApi.getVector3S((int)JSApi.GetType.Arg);
UnityEngine.Plane argThis = (UnityEngine.Plane)vc.csObj;                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(argThis.GetDistanceToPoint(arg0)));
        JSMgr.changeJSObj(vc.jsObjID, argThis);
    }

    return true;
}

static bool Plane_GetSide__Vector3(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        UnityEngine.Vector3 arg0 = (UnityEngine.Vector3)JSApi.getVector3S((int)JSApi.GetType.Arg);
UnityEngine.Plane argThis = (UnityEngine.Plane)vc.csObj;                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(argThis.GetSide(arg0)));
        JSMgr.changeJSObj(vc.jsObjID, argThis);
    }

    return true;
}

static bool Plane_Raycast__Ray__Single(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        UnityEngine.Ray arg0 = (UnityEngine.Ray)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        int r_arg1 = JSApi.incArgIndex();
        System.Single arg1;
UnityEngine.Plane argThis = (UnityEngine.Plane)vc.csObj;                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(argThis.Raycast(arg0, out arg1)));
        JSMgr.changeJSObj(vc.jsObjID, argThis);
        JSApi.setArgIndex(r_arg1);
        JSApi.setSingle((int)JSApi.SetType.ArgRef, arg1);
    }

    return true;
}

static bool Plane_SameSide__Vector3__Vector3(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        UnityEngine.Vector3 arg0 = (UnityEngine.Vector3)JSApi.getVector3S((int)JSApi.GetType.Arg);
        UnityEngine.Vector3 arg1 = (UnityEngine.Vector3)JSApi.getVector3S((int)JSApi.GetType.Arg);
UnityEngine.Plane argThis = (UnityEngine.Plane)vc.csObj;                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(argThis.SameSide(arg0, arg1)));
        JSMgr.changeJSObj(vc.jsObjID, argThis);
    }

    return true;
}

static bool Plane_Set3Points__Vector3__Vector3__Vector3(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 3) 
    {
        UnityEngine.Vector3 arg0 = (UnityEngine.Vector3)JSApi.getVector3S((int)JSApi.GetType.Arg);
        UnityEngine.Vector3 arg1 = (UnityEngine.Vector3)JSApi.getVector3S((int)JSApi.GetType.Arg);
        UnityEngine.Vector3 arg2 = (UnityEngine.Vector3)JSApi.getVector3S((int)JSApi.GetType.Arg);
UnityEngine.Plane argThis = (UnityEngine.Plane)vc.csObj;        argThis.Set3Points(arg0, arg1, arg2);
        JSMgr.changeJSObj(vc.jsObjID, argThis);
    }

    return true;
}

static bool Plane_SetNormalAndPosition__Vector3__Vector3(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        UnityEngine.Vector3 arg0 = (UnityEngine.Vector3)JSApi.getVector3S((int)JSApi.GetType.Arg);
        UnityEngine.Vector3 arg1 = (UnityEngine.Vector3)JSApi.getVector3S((int)JSApi.GetType.Arg);
UnityEngine.Plane argThis = (UnityEngine.Plane)vc.csObj;        argThis.SetNormalAndPosition(arg0, arg1);
        JSMgr.changeJSObj(vc.jsObjID, argThis);
    }

    return true;
}


//register

public static void __Register()
{
    JSMgr.CallbackInfo ci = new JSMgr.CallbackInfo();
    ci.type = typeof(UnityEngine.Plane);
    ci.fields = new JSMgr.CSCallbackField[]
    {

    };
    ci.properties = new JSMgr.CSCallbackProperty[]
    {
        Plane_normal,
        Plane_distance,

    };
    ci.constructors = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(Plane_Plane1, ".ctor"),
        new JSMgr.MethodCallBackInfo(Plane_Plane2, ".ctor"),
        new JSMgr.MethodCallBackInfo(Plane_Plane3, ".ctor"),
        new JSMgr.MethodCallBackInfo(Plane_Plane4, ".ctor"),

    };
    ci.methods = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(Plane_GetDistanceToPoint__Vector3, "GetDistanceToPoint"),
        new JSMgr.MethodCallBackInfo(Plane_GetSide__Vector3, "GetSide"),
        new JSMgr.MethodCallBackInfo(Plane_Raycast__Ray__Single, "Raycast"),
        new JSMgr.MethodCallBackInfo(Plane_SameSide__Vector3__Vector3, "SameSide"),
        new JSMgr.MethodCallBackInfo(Plane_Set3Points__Vector3__Vector3__Vector3, "Set3Points"),
        new JSMgr.MethodCallBackInfo(Plane_SetNormalAndPosition__Vector3__Vector3, "SetNormalAndPosition"),

    };
    JSMgr.allCallbackInfo.Add(ci);
}


}
