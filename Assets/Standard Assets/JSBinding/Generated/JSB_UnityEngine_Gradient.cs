
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by CSGenerator.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;

using jsval = JSApi.jsval;

public class JSB_UnityEngine_Gradient
{

////////////////////// Gradient ///////////////////////////////////////
// constructors

static bool Gradient_Gradient1(JSVCall vc, int argc)
{
    int _this = JSApi.getObject((int)JSApi.GetType.Arg);
    JSApi.attachFinalizerObject(_this);
    --argc;

    int len = argc;
    if (len == 0)
    {
        JSMgr.addJSCSRel(_this, new UnityEngine.Gradient());
    }

    return true;
}

// fields

// properties
static void Gradient_colorKeys(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.Gradient _this = (UnityEngine.Gradient)vc.csObj;
        var result = _this.colorKeys;
                var arrRet = result;
        for (int i = 0; arrRet != null && i < arrRet.Length; i++)
        {
            JSMgr.datax.setObject((int)JSApi.SetType.SaveAndTempTrace, arrRet[i]);
            JSApi.moveSaveID2Arr(i);
        }
        JSApi.setArrayS((int)JSApi.SetType.Rval, (arrRet != null ? arrRet.Length : 0), true);
    }
    else
    { 
        UnityEngine.GradientColorKey[] arg0 = JSDataExchangeMgr.GetJSArg<UnityEngine.GradientColorKey[]>(() =>
        {
            int jsObjID = JSApi.getObject((int)JSApi.GetType.Arg);
            int length = JSApi.getArrayLength(jsObjID);
            var ret = new UnityEngine.GradientColorKey[length];
            for (var i = 0; i < length; i++) {
                JSApi.getElement(jsObjID, i);
                ret[i] = (UnityEngine.GradientColorKey)JSMgr.datax.getObject((int)JSApi.GetType.SaveAndRemove);
            }
            return ret;
        });
        UnityEngine.Gradient _this = (UnityEngine.Gradient)vc.csObj;
        _this.colorKeys = arg0;
    }
}
static void Gradient_alphaKeys(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.Gradient _this = (UnityEngine.Gradient)vc.csObj;
        var result = _this.alphaKeys;
                var arrRet = result;
        for (int i = 0; arrRet != null && i < arrRet.Length; i++)
        {
            JSMgr.datax.setObject((int)JSApi.SetType.SaveAndTempTrace, arrRet[i]);
            JSApi.moveSaveID2Arr(i);
        }
        JSApi.setArrayS((int)JSApi.SetType.Rval, (arrRet != null ? arrRet.Length : 0), true);
    }
    else
    { 
        UnityEngine.GradientAlphaKey[] arg0 = JSDataExchangeMgr.GetJSArg<UnityEngine.GradientAlphaKey[]>(() =>
        {
            int jsObjID = JSApi.getObject((int)JSApi.GetType.Arg);
            int length = JSApi.getArrayLength(jsObjID);
            var ret = new UnityEngine.GradientAlphaKey[length];
            for (var i = 0; i < length; i++) {
                JSApi.getElement(jsObjID, i);
                ret[i] = (UnityEngine.GradientAlphaKey)JSMgr.datax.getObject((int)JSApi.GetType.SaveAndRemove);
            }
            return ret;
        });
        UnityEngine.Gradient _this = (UnityEngine.Gradient)vc.csObj;
        _this.alphaKeys = arg0;
    }
}

// methods

static bool Gradient_Evaluate__Single(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, ((UnityEngine.Gradient)vc.csObj).Evaluate(arg0));
    }

    return true;
}

static bool Gradient_SetKeys__GradientColorKey_Array__GradientAlphaKey_Array(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        UnityEngine.GradientColorKey[] arg0 = JSDataExchangeMgr.GetJSArg<UnityEngine.GradientColorKey[]>(() =>
        {
            int jsObjID = JSApi.getObject((int)JSApi.GetType.Arg);
            int length = JSApi.getArrayLength(jsObjID);
            var ret = new UnityEngine.GradientColorKey[length];
            for (var i = 0; i < length; i++) {
                JSApi.getElement(jsObjID, i);
                ret[i] = (UnityEngine.GradientColorKey)JSMgr.datax.getObject((int)JSApi.GetType.SaveAndRemove);
            }
            return ret;
        });
        UnityEngine.GradientAlphaKey[] arg1 = JSDataExchangeMgr.GetJSArg<UnityEngine.GradientAlphaKey[]>(() =>
        {
            int jsObjID = JSApi.getObject((int)JSApi.GetType.Arg);
            int length = JSApi.getArrayLength(jsObjID);
            var ret = new UnityEngine.GradientAlphaKey[length];
            for (var i = 0; i < length; i++) {
                JSApi.getElement(jsObjID, i);
                ret[i] = (UnityEngine.GradientAlphaKey)JSMgr.datax.getObject((int)JSApi.GetType.SaveAndRemove);
            }
            return ret;
        });
        ((UnityEngine.Gradient)vc.csObj).SetKeys(arg0, arg1);
    }

    return true;
}


//register

public static void __Register()
{
    JSMgr.CallbackInfo ci = new JSMgr.CallbackInfo();
    ci.type = typeof(UnityEngine.Gradient);
    ci.fields = new JSMgr.CSCallbackField[]
    {

    };
    ci.properties = new JSMgr.CSCallbackProperty[]
    {
        Gradient_colorKeys,
        Gradient_alphaKeys,

    };
    ci.constructors = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(Gradient_Gradient1, ".ctor"),

    };
    ci.methods = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(Gradient_Evaluate__Single, "Evaluate"),
        new JSMgr.MethodCallBackInfo(Gradient_SetKeys__GradientColorKey_Array__GradientAlphaKey_Array, "SetKeys"),

    };
    JSMgr.allCallbackInfo.Add(ci);
}


}
