
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by CSGenerator.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;

using jsval = JSApi.jsval;

public class JSB_UnityEngine_Texture3D
{

////////////////////// Texture3D ///////////////////////////////////////
// constructors

static bool Texture3D_Texture3D1(JSVCall vc, int argc)
{
    int _this = JSApi.getObject((int)JSApi.GetType.Arg);
    JSApi.attachFinalizerObject(_this);
    --argc;

    int len = argc;
    if (len == 5)
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg2 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        UnityEngine.TextureFormat arg3 = (UnityEngine.TextureFormat)JSApi.getEnum((int)JSApi.GetType.Arg);
        System.Boolean arg4 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        JSMgr.addJSCSRel(_this, new UnityEngine.Texture3D(arg0, arg1, arg2, arg3, arg4));
    }

    return true;
}

// fields

// properties
static void Texture3D_depth(JSVCall vc)
{
        UnityEngine.Texture3D _this = (UnityEngine.Texture3D)vc.csObj;
        var result = _this.depth;
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(result));
}
static void Texture3D_format(JSVCall vc)
{
        UnityEngine.Texture3D _this = (UnityEngine.Texture3D)vc.csObj;
        var result = _this.format;
                JSApi.setEnum((int)JSApi.SetType.Rval, (int)result);
}

// methods

static bool Texture3D_Apply__Boolean(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Boolean arg0 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        ((UnityEngine.Texture3D)vc.csObj).Apply(arg0);
    }

    return true;
}

static bool Texture3D_Apply(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
        ((UnityEngine.Texture3D)vc.csObj).Apply();
    }

    return true;
}

static bool Texture3D_GetPixels__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                var arrRet = ((UnityEngine.Texture3D)vc.csObj).GetPixels(arg0);
        for (int i = 0; arrRet != null && i < arrRet.Length; i++)
        {
            JSMgr.datax.setObject((int)JSApi.SetType.SaveAndTempTrace, arrRet[i]);
            JSApi.moveSaveID2Arr(i);
        }
        JSApi.setArrayS((int)JSApi.SetType.Rval, (arrRet != null ? arrRet.Length : 0), true);
    }

    return true;
}

static bool Texture3D_GetPixels(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
                var arrRet = ((UnityEngine.Texture3D)vc.csObj).GetPixels();
        for (int i = 0; arrRet != null && i < arrRet.Length; i++)
        {
            JSMgr.datax.setObject((int)JSApi.SetType.SaveAndTempTrace, arrRet[i]);
            JSApi.moveSaveID2Arr(i);
        }
        JSApi.setArrayS((int)JSApi.SetType.Rval, (arrRet != null ? arrRet.Length : 0), true);
    }

    return true;
}

static bool Texture3D_GetPixels32__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                var arrRet = ((UnityEngine.Texture3D)vc.csObj).GetPixels32(arg0);
        for (int i = 0; arrRet != null && i < arrRet.Length; i++)
        {
            JSMgr.datax.setObject((int)JSApi.SetType.SaveAndTempTrace, arrRet[i]);
            JSApi.moveSaveID2Arr(i);
        }
        JSApi.setArrayS((int)JSApi.SetType.Rval, (arrRet != null ? arrRet.Length : 0), true);
    }

    return true;
}

static bool Texture3D_GetPixels32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
                var arrRet = ((UnityEngine.Texture3D)vc.csObj).GetPixels32();
        for (int i = 0; arrRet != null && i < arrRet.Length; i++)
        {
            JSMgr.datax.setObject((int)JSApi.SetType.SaveAndTempTrace, arrRet[i]);
            JSApi.moveSaveID2Arr(i);
        }
        JSApi.setArrayS((int)JSApi.SetType.Rval, (arrRet != null ? arrRet.Length : 0), true);
    }

    return true;
}

static bool Texture3D_SetPixels__Color_Array__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        UnityEngine.Color[] arg0 = JSDataExchangeMgr.GetJSArg<UnityEngine.Color[]>(() =>
        {
            int jsObjID = JSApi.getObject((int)JSApi.GetType.Arg);
            int length = JSApi.getArrayLength(jsObjID);
            var ret = new UnityEngine.Color[length];
            for (var i = 0; i < length; i++) {
                JSApi.getElement(jsObjID, i);
                ret[i] = (UnityEngine.Color)JSMgr.datax.getObject((int)JSApi.GetType.SaveAndRemove);
            }
            return ret;
        });
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        ((UnityEngine.Texture3D)vc.csObj).SetPixels(arg0, arg1);
    }

    return true;
}

static bool Texture3D_SetPixels__Color_Array(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        UnityEngine.Color[] arg0 = JSDataExchangeMgr.GetJSArg<UnityEngine.Color[]>(() =>
        {
            int jsObjID = JSApi.getObject((int)JSApi.GetType.Arg);
            int length = JSApi.getArrayLength(jsObjID);
            var ret = new UnityEngine.Color[length];
            for (var i = 0; i < length; i++) {
                JSApi.getElement(jsObjID, i);
                ret[i] = (UnityEngine.Color)JSMgr.datax.getObject((int)JSApi.GetType.SaveAndRemove);
            }
            return ret;
        });
        ((UnityEngine.Texture3D)vc.csObj).SetPixels(arg0);
    }

    return true;
}

static bool Texture3D_SetPixels32__Color32_Array__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        UnityEngine.Color32[] arg0 = JSDataExchangeMgr.GetJSArg<UnityEngine.Color32[]>(() =>
        {
            int jsObjID = JSApi.getObject((int)JSApi.GetType.Arg);
            int length = JSApi.getArrayLength(jsObjID);
            var ret = new UnityEngine.Color32[length];
            for (var i = 0; i < length; i++) {
                JSApi.getElement(jsObjID, i);
                ret[i] = (UnityEngine.Color32)JSMgr.datax.getObject((int)JSApi.GetType.SaveAndRemove);
            }
            return ret;
        });
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        ((UnityEngine.Texture3D)vc.csObj).SetPixels32(arg0, arg1);
    }

    return true;
}

static bool Texture3D_SetPixels32__Color32_Array(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        UnityEngine.Color32[] arg0 = JSDataExchangeMgr.GetJSArg<UnityEngine.Color32[]>(() =>
        {
            int jsObjID = JSApi.getObject((int)JSApi.GetType.Arg);
            int length = JSApi.getArrayLength(jsObjID);
            var ret = new UnityEngine.Color32[length];
            for (var i = 0; i < length; i++) {
                JSApi.getElement(jsObjID, i);
                ret[i] = (UnityEngine.Color32)JSMgr.datax.getObject((int)JSApi.GetType.SaveAndRemove);
            }
            return ret;
        });
        ((UnityEngine.Texture3D)vc.csObj).SetPixels32(arg0);
    }

    return true;
}


//register

public static void __Register()
{
    JSMgr.CallbackInfo ci = new JSMgr.CallbackInfo();
    ci.type = typeof(UnityEngine.Texture3D);
    ci.fields = new JSMgr.CSCallbackField[]
    {

    };
    ci.properties = new JSMgr.CSCallbackProperty[]
    {
        Texture3D_depth,
        Texture3D_format,

    };
    ci.constructors = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(Texture3D_Texture3D1, ".ctor"),

    };
    ci.methods = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(Texture3D_Apply__Boolean, "Apply"),
        new JSMgr.MethodCallBackInfo(Texture3D_Apply, "Apply"),
        new JSMgr.MethodCallBackInfo(Texture3D_GetPixels__Int32, "GetPixels"),
        new JSMgr.MethodCallBackInfo(Texture3D_GetPixels, "GetPixels"),
        new JSMgr.MethodCallBackInfo(Texture3D_GetPixels32__Int32, "GetPixels32"),
        new JSMgr.MethodCallBackInfo(Texture3D_GetPixels32, "GetPixels32"),
        new JSMgr.MethodCallBackInfo(Texture3D_SetPixels__Color_Array__Int32, "SetPixels"),
        new JSMgr.MethodCallBackInfo(Texture3D_SetPixels__Color_Array, "SetPixels"),
        new JSMgr.MethodCallBackInfo(Texture3D_SetPixels32__Color32_Array__Int32, "SetPixels32"),
        new JSMgr.MethodCallBackInfo(Texture3D_SetPixels32__Color32_Array, "SetPixels32"),

    };
    JSMgr.allCallbackInfo.Add(ci);
}


}
