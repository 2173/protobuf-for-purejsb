
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by CSGenerator.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;

using jsval = JSApi.jsval;

public class JSB_UnityEngine_Ray
{

////////////////////// Ray ///////////////////////////////////////
// constructors
public static ConstructorID constructorID0 = new ConstructorID(null, null);

static bool Ray_Ray1(JSVCall vc, int argc)
{
    int _this = JSApi.getObject((int)JSApi.GetType.Arg);
    JSApi.attachFinalizerObject(_this);
    --argc;

    int len = argc;
    if (len == 0)
    {
        JSMgr.addJSCSRel(_this, new UnityEngine.Ray());
    }

    return true;
}

static bool Ray_Ray2(JSVCall vc, int argc)
{
    int _this = JSApi.getObject((int)JSApi.GetType.Arg);
    JSApi.attachFinalizerObject(_this);
    --argc;

    int len = argc;
    if (len == 2)
    {
        UnityEngine.Vector3 arg0 = (UnityEngine.Vector3)JSApi.getVector3S((int)JSApi.GetType.Arg);
        UnityEngine.Vector3 arg1 = (UnityEngine.Vector3)JSApi.getVector3S((int)JSApi.GetType.Arg);
        JSMgr.addJSCSRel(_this, new UnityEngine.Ray(arg0, arg1));
    }

    return true;
}

// fields

// properties
static void Ray_origin(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.Ray _this = (UnityEngine.Ray)vc.csObj;
        var result = _this.origin;
                JSApi.setVector3S((int)JSApi.SetType.Rval, result);
    }
    else
    { 
        UnityEngine.Vector3 arg0 = (UnityEngine.Vector3)JSApi.getVector3S((int)JSApi.GetType.Arg);
        UnityEngine.Ray _this = (UnityEngine.Ray)vc.csObj;
        _this.origin = arg0;
        JSMgr.changeJSObj(vc.jsObjID, _this);
    }
}
static void Ray_direction(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.Ray _this = (UnityEngine.Ray)vc.csObj;
        var result = _this.direction;
                JSApi.setVector3S((int)JSApi.SetType.Rval, result);
    }
    else
    { 
        UnityEngine.Vector3 arg0 = (UnityEngine.Vector3)JSApi.getVector3S((int)JSApi.GetType.Arg);
        UnityEngine.Ray _this = (UnityEngine.Ray)vc.csObj;
        _this.direction = arg0;
        JSMgr.changeJSObj(vc.jsObjID, _this);
    }
}

// methods

static bool Ray_GetPoint__Single(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
UnityEngine.Ray argThis = (UnityEngine.Ray)vc.csObj;                JSApi.setVector3S((int)JSApi.SetType.Rval, argThis.GetPoint(arg0));
        JSMgr.changeJSObj(vc.jsObjID, argThis);
    }

    return true;
}

static bool Ray_ToString__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
UnityEngine.Ray argThis = (UnityEngine.Ray)vc.csObj;                JSApi.setStringS((int)JSApi.SetType.Rval, argThis.ToString(arg0));
        JSMgr.changeJSObj(vc.jsObjID, argThis);
    }

    return true;
}

static bool Ray_ToString(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
UnityEngine.Ray argThis = (UnityEngine.Ray)vc.csObj;                JSApi.setStringS((int)JSApi.SetType.Rval, argThis.ToString());
        JSMgr.changeJSObj(vc.jsObjID, argThis);
    }

    return true;
}


//register

public static void __Register()
{
    JSMgr.CallbackInfo ci = new JSMgr.CallbackInfo();
    ci.type = typeof(UnityEngine.Ray);
    ci.fields = new JSMgr.CSCallbackField[]
    {

    };
    ci.properties = new JSMgr.CSCallbackProperty[]
    {
        Ray_origin,
        Ray_direction,

    };
    ci.constructors = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(Ray_Ray1, ".ctor"),
        new JSMgr.MethodCallBackInfo(Ray_Ray2, ".ctor"),

    };
    ci.methods = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(Ray_GetPoint__Single, "GetPoint"),
        new JSMgr.MethodCallBackInfo(Ray_ToString__String, "ToString"),
        new JSMgr.MethodCallBackInfo(Ray_ToString, "ToString"),

    };
    JSMgr.allCallbackInfo.Add(ci);
}


}
