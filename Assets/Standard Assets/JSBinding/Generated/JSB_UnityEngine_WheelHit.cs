
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by CSGenerator.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;

using jsval = JSApi.jsval;

public class JSB_UnityEngine_WheelHit
{

////////////////////// WheelHit ///////////////////////////////////////
// constructors
public static ConstructorID constructorID0 = new ConstructorID(null, null);

static bool WheelHit_WheelHit1(JSVCall vc, int argc)
{
    int _this = JSApi.getObject((int)JSApi.GetType.Arg);
    JSApi.attachFinalizerObject(_this);
    --argc;

    int len = argc;
    if (len == 0)
    {
        JSMgr.addJSCSRel(_this, new UnityEngine.WheelHit());
    }

    return true;
}

// fields

// properties
static void WheelHit_collider(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.WheelHit _this = (UnityEngine.WheelHit)vc.csObj;
        var result = _this.collider;
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, result);
    }
    else
    { 
        UnityEngine.Collider arg0 = (UnityEngine.Collider)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        UnityEngine.WheelHit _this = (UnityEngine.WheelHit)vc.csObj;
        _this.collider = arg0;
        JSMgr.changeJSObj(vc.jsObjID, _this);
    }
}
static void WheelHit_point(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.WheelHit _this = (UnityEngine.WheelHit)vc.csObj;
        var result = _this.point;
                JSApi.setVector3S((int)JSApi.SetType.Rval, result);
    }
    else
    { 
        UnityEngine.Vector3 arg0 = (UnityEngine.Vector3)JSApi.getVector3S((int)JSApi.GetType.Arg);
        UnityEngine.WheelHit _this = (UnityEngine.WheelHit)vc.csObj;
        _this.point = arg0;
        JSMgr.changeJSObj(vc.jsObjID, _this);
    }
}
static void WheelHit_normal(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.WheelHit _this = (UnityEngine.WheelHit)vc.csObj;
        var result = _this.normal;
                JSApi.setVector3S((int)JSApi.SetType.Rval, result);
    }
    else
    { 
        UnityEngine.Vector3 arg0 = (UnityEngine.Vector3)JSApi.getVector3S((int)JSApi.GetType.Arg);
        UnityEngine.WheelHit _this = (UnityEngine.WheelHit)vc.csObj;
        _this.normal = arg0;
        JSMgr.changeJSObj(vc.jsObjID, _this);
    }
}
static void WheelHit_forwardDir(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.WheelHit _this = (UnityEngine.WheelHit)vc.csObj;
        var result = _this.forwardDir;
                JSApi.setVector3S((int)JSApi.SetType.Rval, result);
    }
    else
    { 
        UnityEngine.Vector3 arg0 = (UnityEngine.Vector3)JSApi.getVector3S((int)JSApi.GetType.Arg);
        UnityEngine.WheelHit _this = (UnityEngine.WheelHit)vc.csObj;
        _this.forwardDir = arg0;
        JSMgr.changeJSObj(vc.jsObjID, _this);
    }
}
static void WheelHit_sidewaysDir(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.WheelHit _this = (UnityEngine.WheelHit)vc.csObj;
        var result = _this.sidewaysDir;
                JSApi.setVector3S((int)JSApi.SetType.Rval, result);
    }
    else
    { 
        UnityEngine.Vector3 arg0 = (UnityEngine.Vector3)JSApi.getVector3S((int)JSApi.GetType.Arg);
        UnityEngine.WheelHit _this = (UnityEngine.WheelHit)vc.csObj;
        _this.sidewaysDir = arg0;
        JSMgr.changeJSObj(vc.jsObjID, _this);
    }
}
static void WheelHit_force(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.WheelHit _this = (UnityEngine.WheelHit)vc.csObj;
        var result = _this.force;
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(result));
    }
    else
    { 
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.WheelHit _this = (UnityEngine.WheelHit)vc.csObj;
        _this.force = arg0;
        JSMgr.changeJSObj(vc.jsObjID, _this);
    }
}
static void WheelHit_forwardSlip(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.WheelHit _this = (UnityEngine.WheelHit)vc.csObj;
        var result = _this.forwardSlip;
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(result));
    }
    else
    { 
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.WheelHit _this = (UnityEngine.WheelHit)vc.csObj;
        _this.forwardSlip = arg0;
        JSMgr.changeJSObj(vc.jsObjID, _this);
    }
}
static void WheelHit_sidewaysSlip(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.WheelHit _this = (UnityEngine.WheelHit)vc.csObj;
        var result = _this.sidewaysSlip;
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(result));
    }
    else
    { 
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.WheelHit _this = (UnityEngine.WheelHit)vc.csObj;
        _this.sidewaysSlip = arg0;
        JSMgr.changeJSObj(vc.jsObjID, _this);
    }
}

// methods


//register

public static void __Register()
{
    JSMgr.CallbackInfo ci = new JSMgr.CallbackInfo();
    ci.type = typeof(UnityEngine.WheelHit);
    ci.fields = new JSMgr.CSCallbackField[]
    {

    };
    ci.properties = new JSMgr.CSCallbackProperty[]
    {
        WheelHit_collider,
        WheelHit_point,
        WheelHit_normal,
        WheelHit_forwardDir,
        WheelHit_sidewaysDir,
        WheelHit_force,
        WheelHit_forwardSlip,
        WheelHit_sidewaysSlip,

    };
    ci.constructors = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(WheelHit_WheelHit1, ".ctor"),

    };
    ci.methods = new JSMgr.MethodCallBackInfo[]
    {

    };
    JSMgr.allCallbackInfo.Add(ci);
}


}
