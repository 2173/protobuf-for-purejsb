
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by CSGenerator.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;
using System.Security.AccessControl;
using System.IO;

using jsval = JSApi.jsval;

public class JSB_System_IO_Directory
{

////////////////////// Directory ///////////////////////////////////////
// constructors

// fields

// properties

// methods

static bool Directory_CreateDirectory__String__DirectorySecurity(JSVCall vc, int argc)
{
    UnityEngine.Debug.LogError("This method is not supported by .Net 2.0 subset.");
    return true;
}

static bool Directory_CreateDirectory__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.IO.Directory.CreateDirectory(arg0));
    }

    return true;
}

static bool Directory_Delete__String__Boolean(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.Boolean arg1 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        System.IO.Directory.Delete(arg0, arg1);
    }

    return true;
}

static bool Directory_Delete__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.IO.Directory.Delete(arg0);
    }

    return true;
}

static bool Directory_Exists__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(System.IO.Directory.Exists(arg0)));
    }

    return true;
}

static bool Directory_GetAccessControl__String__AccessControlSections(JSVCall vc, int argc)
{
    UnityEngine.Debug.LogError("This method is not supported by .Net 2.0 subset.");
    return true;
}

static bool Directory_GetAccessControl__String(JSVCall vc, int argc)
{
    UnityEngine.Debug.LogError("This method is not supported by .Net 2.0 subset.");
    return true;
}

static bool Directory_GetCreationTime__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.IO.Directory.GetCreationTime(arg0));
    }

    return true;
}

static bool Directory_GetCreationTimeUtc__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.IO.Directory.GetCreationTimeUtc(arg0));
    }

    return true;
}

static bool Directory_GetCurrentDirectory(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
                JSApi.setStringS((int)JSApi.SetType.Rval, System.IO.Directory.GetCurrentDirectory());
    }

    return true;
}

static bool Directory_GetDirectories__String__String__SearchOption(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 3) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.String arg1 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.IO.SearchOption arg2 = (System.IO.SearchOption)JSApi.getEnum((int)JSApi.GetType.Arg);
                var arrRet = System.IO.Directory.GetDirectories(arg0, arg1, arg2);
        for (int i = 0; arrRet != null && i < arrRet.Length; i++)
        {
            JSApi.setStringS((int)JSApi.SetType.SaveAndTempTrace, arrRet[i]);
            JSApi.moveSaveID2Arr(i);
        }
        JSApi.setArrayS((int)JSApi.SetType.Rval, (arrRet != null ? arrRet.Length : 0), true);
    }

    return true;
}

static bool Directory_GetDirectories__String__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.String arg1 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
                var arrRet = System.IO.Directory.GetDirectories(arg0, arg1);
        for (int i = 0; arrRet != null && i < arrRet.Length; i++)
        {
            JSApi.setStringS((int)JSApi.SetType.SaveAndTempTrace, arrRet[i]);
            JSApi.moveSaveID2Arr(i);
        }
        JSApi.setArrayS((int)JSApi.SetType.Rval, (arrRet != null ? arrRet.Length : 0), true);
    }

    return true;
}

static bool Directory_GetDirectories__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
                var arrRet = System.IO.Directory.GetDirectories(arg0);
        for (int i = 0; arrRet != null && i < arrRet.Length; i++)
        {
            JSApi.setStringS((int)JSApi.SetType.SaveAndTempTrace, arrRet[i]);
            JSApi.moveSaveID2Arr(i);
        }
        JSApi.setArrayS((int)JSApi.SetType.Rval, (arrRet != null ? arrRet.Length : 0), true);
    }

    return true;
}

static bool Directory_GetDirectoryRoot__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
                JSApi.setStringS((int)JSApi.SetType.Rval, System.IO.Directory.GetDirectoryRoot(arg0));
    }

    return true;
}

static bool Directory_GetFiles__String__String__SearchOption(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 3) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.String arg1 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.IO.SearchOption arg2 = (System.IO.SearchOption)JSApi.getEnum((int)JSApi.GetType.Arg);
                var arrRet = System.IO.Directory.GetFiles(arg0, arg1, arg2);
        for (int i = 0; arrRet != null && i < arrRet.Length; i++)
        {
            JSApi.setStringS((int)JSApi.SetType.SaveAndTempTrace, arrRet[i]);
            JSApi.moveSaveID2Arr(i);
        }
        JSApi.setArrayS((int)JSApi.SetType.Rval, (arrRet != null ? arrRet.Length : 0), true);
    }

    return true;
}

static bool Directory_GetFiles__String__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.String arg1 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
                var arrRet = System.IO.Directory.GetFiles(arg0, arg1);
        for (int i = 0; arrRet != null && i < arrRet.Length; i++)
        {
            JSApi.setStringS((int)JSApi.SetType.SaveAndTempTrace, arrRet[i]);
            JSApi.moveSaveID2Arr(i);
        }
        JSApi.setArrayS((int)JSApi.SetType.Rval, (arrRet != null ? arrRet.Length : 0), true);
    }

    return true;
}

static bool Directory_GetFiles__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
                var arrRet = System.IO.Directory.GetFiles(arg0);
        for (int i = 0; arrRet != null && i < arrRet.Length; i++)
        {
            JSApi.setStringS((int)JSApi.SetType.SaveAndTempTrace, arrRet[i]);
            JSApi.moveSaveID2Arr(i);
        }
        JSApi.setArrayS((int)JSApi.SetType.Rval, (arrRet != null ? arrRet.Length : 0), true);
    }

    return true;
}

static bool Directory_GetFileSystemEntries__String__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.String arg1 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
                var arrRet = System.IO.Directory.GetFileSystemEntries(arg0, arg1);
        for (int i = 0; arrRet != null && i < arrRet.Length; i++)
        {
            JSApi.setStringS((int)JSApi.SetType.SaveAndTempTrace, arrRet[i]);
            JSApi.moveSaveID2Arr(i);
        }
        JSApi.setArrayS((int)JSApi.SetType.Rval, (arrRet != null ? arrRet.Length : 0), true);
    }

    return true;
}

static bool Directory_GetFileSystemEntries__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
                var arrRet = System.IO.Directory.GetFileSystemEntries(arg0);
        for (int i = 0; arrRet != null && i < arrRet.Length; i++)
        {
            JSApi.setStringS((int)JSApi.SetType.SaveAndTempTrace, arrRet[i]);
            JSApi.moveSaveID2Arr(i);
        }
        JSApi.setArrayS((int)JSApi.SetType.Rval, (arrRet != null ? arrRet.Length : 0), true);
    }

    return true;
}

static bool Directory_GetLastAccessTime__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.IO.Directory.GetLastAccessTime(arg0));
    }

    return true;
}

static bool Directory_GetLastAccessTimeUtc__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.IO.Directory.GetLastAccessTimeUtc(arg0));
    }

    return true;
}

static bool Directory_GetLastWriteTime__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.IO.Directory.GetLastWriteTime(arg0));
    }

    return true;
}

static bool Directory_GetLastWriteTimeUtc__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.IO.Directory.GetLastWriteTimeUtc(arg0));
    }

    return true;
}

static bool Directory_GetLogicalDrives(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
                var arrRet = System.IO.Directory.GetLogicalDrives();
        for (int i = 0; arrRet != null && i < arrRet.Length; i++)
        {
            JSApi.setStringS((int)JSApi.SetType.SaveAndTempTrace, arrRet[i]);
            JSApi.moveSaveID2Arr(i);
        }
        JSApi.setArrayS((int)JSApi.SetType.Rval, (arrRet != null ? arrRet.Length : 0), true);
    }

    return true;
}

static bool Directory_GetParent__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.IO.Directory.GetParent(arg0));
    }

    return true;
}

static bool Directory_Move__String__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.String arg1 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.IO.Directory.Move(arg0, arg1);
    }

    return true;
}

static bool Directory_SetAccessControl__String__DirectorySecurity(JSVCall vc, int argc)
{
    UnityEngine.Debug.LogError("This method is not supported by .Net 2.0 subset.");
    return true;
}

static bool Directory_SetCreationTime__String__DateTime(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.DateTime arg1 = (System.DateTime)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        System.IO.Directory.SetCreationTime(arg0, arg1);
    }

    return true;
}

static bool Directory_SetCreationTimeUtc__String__DateTime(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.DateTime arg1 = (System.DateTime)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        System.IO.Directory.SetCreationTimeUtc(arg0, arg1);
    }

    return true;
}

static bool Directory_SetCurrentDirectory__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.IO.Directory.SetCurrentDirectory(arg0);
    }

    return true;
}

static bool Directory_SetLastAccessTime__String__DateTime(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.DateTime arg1 = (System.DateTime)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        System.IO.Directory.SetLastAccessTime(arg0, arg1);
    }

    return true;
}

static bool Directory_SetLastAccessTimeUtc__String__DateTime(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.DateTime arg1 = (System.DateTime)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        System.IO.Directory.SetLastAccessTimeUtc(arg0, arg1);
    }

    return true;
}

static bool Directory_SetLastWriteTime__String__DateTime(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.DateTime arg1 = (System.DateTime)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        System.IO.Directory.SetLastWriteTime(arg0, arg1);
    }

    return true;
}

static bool Directory_SetLastWriteTimeUtc__String__DateTime(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.DateTime arg1 = (System.DateTime)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        System.IO.Directory.SetLastWriteTimeUtc(arg0, arg1);
    }

    return true;
}


//register

public static void __Register()
{
    JSMgr.CallbackInfo ci = new JSMgr.CallbackInfo();
    ci.type = typeof(System.IO.Directory);
    ci.fields = new JSMgr.CSCallbackField[]
    {

    };
    ci.properties = new JSMgr.CSCallbackProperty[]
    {

    };
    ci.constructors = new JSMgr.MethodCallBackInfo[]
    {

    };
    ci.methods = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(Directory_CreateDirectory__String__DirectorySecurity, "CreateDirectory"),
        new JSMgr.MethodCallBackInfo(Directory_CreateDirectory__String, "CreateDirectory"),
        new JSMgr.MethodCallBackInfo(Directory_Delete__String__Boolean, "Delete"),
        new JSMgr.MethodCallBackInfo(Directory_Delete__String, "Delete"),
        new JSMgr.MethodCallBackInfo(Directory_Exists__String, "Exists"),
        new JSMgr.MethodCallBackInfo(Directory_GetAccessControl__String__AccessControlSections, "GetAccessControl"),
        new JSMgr.MethodCallBackInfo(Directory_GetAccessControl__String, "GetAccessControl"),
        new JSMgr.MethodCallBackInfo(Directory_GetCreationTime__String, "GetCreationTime"),
        new JSMgr.MethodCallBackInfo(Directory_GetCreationTimeUtc__String, "GetCreationTimeUtc"),
        new JSMgr.MethodCallBackInfo(Directory_GetCurrentDirectory, "GetCurrentDirectory"),
        new JSMgr.MethodCallBackInfo(Directory_GetDirectories__String__String__SearchOption, "GetDirectories"),
        new JSMgr.MethodCallBackInfo(Directory_GetDirectories__String__String, "GetDirectories"),
        new JSMgr.MethodCallBackInfo(Directory_GetDirectories__String, "GetDirectories"),
        new JSMgr.MethodCallBackInfo(Directory_GetDirectoryRoot__String, "GetDirectoryRoot"),
        new JSMgr.MethodCallBackInfo(Directory_GetFiles__String__String__SearchOption, "GetFiles"),
        new JSMgr.MethodCallBackInfo(Directory_GetFiles__String__String, "GetFiles"),
        new JSMgr.MethodCallBackInfo(Directory_GetFiles__String, "GetFiles"),
        new JSMgr.MethodCallBackInfo(Directory_GetFileSystemEntries__String__String, "GetFileSystemEntries"),
        new JSMgr.MethodCallBackInfo(Directory_GetFileSystemEntries__String, "GetFileSystemEntries"),
        new JSMgr.MethodCallBackInfo(Directory_GetLastAccessTime__String, "GetLastAccessTime"),
        new JSMgr.MethodCallBackInfo(Directory_GetLastAccessTimeUtc__String, "GetLastAccessTimeUtc"),
        new JSMgr.MethodCallBackInfo(Directory_GetLastWriteTime__String, "GetLastWriteTime"),
        new JSMgr.MethodCallBackInfo(Directory_GetLastWriteTimeUtc__String, "GetLastWriteTimeUtc"),
        new JSMgr.MethodCallBackInfo(Directory_GetLogicalDrives, "GetLogicalDrives"),
        new JSMgr.MethodCallBackInfo(Directory_GetParent__String, "GetParent"),
        new JSMgr.MethodCallBackInfo(Directory_Move__String__String, "Move"),
        new JSMgr.MethodCallBackInfo(Directory_SetAccessControl__String__DirectorySecurity, "SetAccessControl"),
        new JSMgr.MethodCallBackInfo(Directory_SetCreationTime__String__DateTime, "SetCreationTime"),
        new JSMgr.MethodCallBackInfo(Directory_SetCreationTimeUtc__String__DateTime, "SetCreationTimeUtc"),
        new JSMgr.MethodCallBackInfo(Directory_SetCurrentDirectory__String, "SetCurrentDirectory"),
        new JSMgr.MethodCallBackInfo(Directory_SetLastAccessTime__String__DateTime, "SetLastAccessTime"),
        new JSMgr.MethodCallBackInfo(Directory_SetLastAccessTimeUtc__String__DateTime, "SetLastAccessTimeUtc"),
        new JSMgr.MethodCallBackInfo(Directory_SetLastWriteTime__String__DateTime, "SetLastWriteTime"),
        new JSMgr.MethodCallBackInfo(Directory_SetLastWriteTimeUtc__String__DateTime, "SetLastWriteTimeUtc"),

    };
    JSMgr.allCallbackInfo.Add(ci);
}


}
