
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by CSGenerator.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;

using jsval = JSApi.jsval;

public class JSB_UnityEngine_HumanLimit
{

////////////////////// HumanLimit ///////////////////////////////////////
// constructors
public static ConstructorID constructorID0 = new ConstructorID(null, null);

static bool HumanLimit_HumanLimit1(JSVCall vc, int argc)
{
    int _this = JSApi.getObject((int)JSApi.GetType.Arg);
    JSApi.attachFinalizerObject(_this);
    --argc;

    int len = argc;
    if (len == 0)
    {
        JSMgr.addJSCSRel(_this, new UnityEngine.HumanLimit());
    }

    return true;
}

// fields

// properties
static void HumanLimit_useDefaultValues(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.HumanLimit _this = (UnityEngine.HumanLimit)vc.csObj;
        var result = _this.useDefaultValues;
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(result));
    }
    else
    { 
        System.Boolean arg0 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        UnityEngine.HumanLimit _this = (UnityEngine.HumanLimit)vc.csObj;
        _this.useDefaultValues = arg0;
        JSMgr.changeJSObj(vc.jsObjID, _this);
    }
}
static void HumanLimit_min(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.HumanLimit _this = (UnityEngine.HumanLimit)vc.csObj;
        var result = _this.min;
                JSApi.setVector3S((int)JSApi.SetType.Rval, result);
    }
    else
    { 
        UnityEngine.Vector3 arg0 = (UnityEngine.Vector3)JSApi.getVector3S((int)JSApi.GetType.Arg);
        UnityEngine.HumanLimit _this = (UnityEngine.HumanLimit)vc.csObj;
        _this.min = arg0;
        JSMgr.changeJSObj(vc.jsObjID, _this);
    }
}
static void HumanLimit_max(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.HumanLimit _this = (UnityEngine.HumanLimit)vc.csObj;
        var result = _this.max;
                JSApi.setVector3S((int)JSApi.SetType.Rval, result);
    }
    else
    { 
        UnityEngine.Vector3 arg0 = (UnityEngine.Vector3)JSApi.getVector3S((int)JSApi.GetType.Arg);
        UnityEngine.HumanLimit _this = (UnityEngine.HumanLimit)vc.csObj;
        _this.max = arg0;
        JSMgr.changeJSObj(vc.jsObjID, _this);
    }
}
static void HumanLimit_center(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.HumanLimit _this = (UnityEngine.HumanLimit)vc.csObj;
        var result = _this.center;
                JSApi.setVector3S((int)JSApi.SetType.Rval, result);
    }
    else
    { 
        UnityEngine.Vector3 arg0 = (UnityEngine.Vector3)JSApi.getVector3S((int)JSApi.GetType.Arg);
        UnityEngine.HumanLimit _this = (UnityEngine.HumanLimit)vc.csObj;
        _this.center = arg0;
        JSMgr.changeJSObj(vc.jsObjID, _this);
    }
}
static void HumanLimit_axisLength(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.HumanLimit _this = (UnityEngine.HumanLimit)vc.csObj;
        var result = _this.axisLength;
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(result));
    }
    else
    { 
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.HumanLimit _this = (UnityEngine.HumanLimit)vc.csObj;
        _this.axisLength = arg0;
        JSMgr.changeJSObj(vc.jsObjID, _this);
    }
}

// methods


//register

public static void __Register()
{
    JSMgr.CallbackInfo ci = new JSMgr.CallbackInfo();
    ci.type = typeof(UnityEngine.HumanLimit);
    ci.fields = new JSMgr.CSCallbackField[]
    {

    };
    ci.properties = new JSMgr.CSCallbackProperty[]
    {
        HumanLimit_useDefaultValues,
        HumanLimit_min,
        HumanLimit_max,
        HumanLimit_center,
        HumanLimit_axisLength,

    };
    ci.constructors = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(HumanLimit_HumanLimit1, ".ctor"),

    };
    ci.methods = new JSMgr.MethodCallBackInfo[]
    {

    };
    JSMgr.allCallbackInfo.Add(ci);
}


}
