
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by CSGenerator.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;

using jsval = JSApi.jsval;

public class JSB_UnityEngine_Collider2D
{

////////////////////// Collider2D ///////////////////////////////////////
// constructors

static bool Collider2D_Collider2D1(JSVCall vc, int argc)
{
    int _this = JSApi.getObject((int)JSApi.GetType.Arg);
    JSApi.attachFinalizerObject(_this);
    --argc;

    int len = argc;
    if (len == 0)
    {
        JSMgr.addJSCSRel(_this, new UnityEngine.Collider2D());
    }

    return true;
}

// fields

// properties
static void Collider2D_density(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.Collider2D _this = (UnityEngine.Collider2D)vc.csObj;
        var result = _this.density;
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(result));
    }
    else
    { 
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.Collider2D _this = (UnityEngine.Collider2D)vc.csObj;
        _this.density = arg0;
    }
}
static void Collider2D_isTrigger(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.Collider2D _this = (UnityEngine.Collider2D)vc.csObj;
        var result = _this.isTrigger;
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(result));
    }
    else
    { 
        System.Boolean arg0 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        UnityEngine.Collider2D _this = (UnityEngine.Collider2D)vc.csObj;
        _this.isTrigger = arg0;
    }
}
static void Collider2D_usedByEffector(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.Collider2D _this = (UnityEngine.Collider2D)vc.csObj;
        var result = _this.usedByEffector;
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(result));
    }
    else
    { 
        System.Boolean arg0 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        UnityEngine.Collider2D _this = (UnityEngine.Collider2D)vc.csObj;
        _this.usedByEffector = arg0;
    }
}
static void Collider2D_offset(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.Collider2D _this = (UnityEngine.Collider2D)vc.csObj;
        var result = _this.offset;
                JSApi.setVector2S((int)JSApi.SetType.Rval, result);
    }
    else
    { 
        UnityEngine.Vector2 arg0 = (UnityEngine.Vector2)JSApi.getVector2S((int)JSApi.GetType.Arg);
        UnityEngine.Collider2D _this = (UnityEngine.Collider2D)vc.csObj;
        _this.offset = arg0;
    }
}
static void Collider2D_attachedRigidbody(JSVCall vc)
{
        UnityEngine.Collider2D _this = (UnityEngine.Collider2D)vc.csObj;
        var result = _this.attachedRigidbody;
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, result);
}
static void Collider2D_shapeCount(JSVCall vc)
{
        UnityEngine.Collider2D _this = (UnityEngine.Collider2D)vc.csObj;
        var result = _this.shapeCount;
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(result));
}
static void Collider2D_bounds(JSVCall vc)
{
        UnityEngine.Collider2D _this = (UnityEngine.Collider2D)vc.csObj;
        var result = _this.bounds;
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, result);
}
static void Collider2D_sharedMaterial(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.Collider2D _this = (UnityEngine.Collider2D)vc.csObj;
        var result = _this.sharedMaterial;
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, result);
    }
    else
    { 
        UnityEngine.PhysicsMaterial2D arg0 = (UnityEngine.PhysicsMaterial2D)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        UnityEngine.Collider2D _this = (UnityEngine.Collider2D)vc.csObj;
        _this.sharedMaterial = arg0;
    }
}

// methods

static bool Collider2D_IsTouching__Collider2D(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        UnityEngine.Collider2D arg0 = (UnityEngine.Collider2D)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(((UnityEngine.Collider2D)vc.csObj).IsTouching(arg0)));
    }

    return true;
}

static bool Collider2D_IsTouchingLayers__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(((UnityEngine.Collider2D)vc.csObj).IsTouchingLayers(arg0)));
    }

    return true;
}

static bool Collider2D_IsTouchingLayers(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(((UnityEngine.Collider2D)vc.csObj).IsTouchingLayers()));
    }

    return true;
}

static bool Collider2D_OverlapPoint__Vector2(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        UnityEngine.Vector2 arg0 = (UnityEngine.Vector2)JSApi.getVector2S((int)JSApi.GetType.Arg);
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(((UnityEngine.Collider2D)vc.csObj).OverlapPoint(arg0)));
    }

    return true;
}


//register

public static void __Register()
{
    JSMgr.CallbackInfo ci = new JSMgr.CallbackInfo();
    ci.type = typeof(UnityEngine.Collider2D);
    ci.fields = new JSMgr.CSCallbackField[]
    {

    };
    ci.properties = new JSMgr.CSCallbackProperty[]
    {
        Collider2D_density,
        Collider2D_isTrigger,
        Collider2D_usedByEffector,
        Collider2D_offset,
        Collider2D_attachedRigidbody,
        Collider2D_shapeCount,
        Collider2D_bounds,
        Collider2D_sharedMaterial,

    };
    ci.constructors = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(Collider2D_Collider2D1, ".ctor"),

    };
    ci.methods = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(Collider2D_IsTouching__Collider2D, "IsTouching"),
        new JSMgr.MethodCallBackInfo(Collider2D_IsTouchingLayers__Int32, "IsTouchingLayers"),
        new JSMgr.MethodCallBackInfo(Collider2D_IsTouchingLayers, "IsTouchingLayers"),
        new JSMgr.MethodCallBackInfo(Collider2D_OverlapPoint__Vector2, "OverlapPoint"),

    };
    JSMgr.allCallbackInfo.Add(ci);
}


}
