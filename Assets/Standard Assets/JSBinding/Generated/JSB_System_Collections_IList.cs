
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by CSGenerator.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;

using jsval = JSApi.jsval;

public class JSB_System_Collections_IList
{

////////////////////// IList ///////////////////////////////////////
// constructors

// fields

// properties
static void IList_IsFixedSize(JSVCall vc)
{
        System.Collections.IList _this = (System.Collections.IList)vc.csObj;
        var result = _this.IsFixedSize;
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(result));
}
static void IList_IsReadOnly(JSVCall vc)
{
        System.Collections.IList _this = (System.Collections.IList)vc.csObj;
        var result = _this.IsReadOnly;
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(result));
}
static void IList_Item_Int32(JSVCall vc)
{
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
    if (vc.bGet)
    { 
        System.Collections.IList _this = (System.Collections.IList)vc.csObj;
        var result = _this[arg0];
                JSMgr.datax.setWhatever((int)JSApi.SetType.Rval, result);
    }
    else
    { 
        System.Object arg1 = (System.Object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        System.Collections.IList _this = (System.Collections.IList)vc.csObj;
        _this[arg0] = arg1;
    }
}

// methods

static bool IList_Add__Object(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Object arg0 = (System.Object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(((System.Collections.IList)vc.csObj).Add(arg0)));
    }

    return true;
}

static bool IList_Clear(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
        ((System.Collections.IList)vc.csObj).Clear();
    }

    return true;
}

static bool IList_Contains__Object(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Object arg0 = (System.Object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(((System.Collections.IList)vc.csObj).Contains(arg0)));
    }

    return true;
}

static bool IList_IndexOf__Object(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Object arg0 = (System.Object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(((System.Collections.IList)vc.csObj).IndexOf(arg0)));
    }

    return true;
}

static bool IList_Insert__Int32__Object(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Object arg1 = (System.Object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        ((System.Collections.IList)vc.csObj).Insert(arg0, arg1);
    }

    return true;
}

static bool IList_Remove__Object(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Object arg0 = (System.Object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        ((System.Collections.IList)vc.csObj).Remove(arg0);
    }

    return true;
}

static bool IList_RemoveAt__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        ((System.Collections.IList)vc.csObj).RemoveAt(arg0);
    }

    return true;
}


//register

public static void __Register()
{
    JSMgr.CallbackInfo ci = new JSMgr.CallbackInfo();
    ci.type = typeof(System.Collections.IList);
    ci.fields = new JSMgr.CSCallbackField[]
    {

    };
    ci.properties = new JSMgr.CSCallbackProperty[]
    {
        IList_IsFixedSize,
        IList_IsReadOnly,
        IList_Item_Int32,

    };
    ci.constructors = new JSMgr.MethodCallBackInfo[]
    {

    };
    ci.methods = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(IList_Add__Object, "Add"),
        new JSMgr.MethodCallBackInfo(IList_Clear, "Clear"),
        new JSMgr.MethodCallBackInfo(IList_Contains__Object, "Contains"),
        new JSMgr.MethodCallBackInfo(IList_IndexOf__Object, "IndexOf"),
        new JSMgr.MethodCallBackInfo(IList_Insert__Int32__Object, "Insert"),
        new JSMgr.MethodCallBackInfo(IList_Remove__Object, "Remove"),
        new JSMgr.MethodCallBackInfo(IList_RemoveAt__Int32, "RemoveAt"),

    };
    JSMgr.allCallbackInfo.Add(ci);
}


}
