
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by CSGenerator.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;

using jsval = JSApi.jsval;

public class JSB_UnityEngine_AudioReverbZone
{

////////////////////// AudioReverbZone ///////////////////////////////////////
// constructors

static bool AudioReverbZone_AudioReverbZone1(JSVCall vc, int argc)
{
    int _this = JSApi.getObject((int)JSApi.GetType.Arg);
    JSApi.attachFinalizerObject(_this);
    --argc;

    int len = argc;
    if (len == 0)
    {
        JSMgr.addJSCSRel(_this, new UnityEngine.AudioReverbZone());
    }

    return true;
}

// fields

// properties
static void AudioReverbZone_minDistance(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.AudioReverbZone _this = (UnityEngine.AudioReverbZone)vc.csObj;
        var result = _this.minDistance;
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(result));
    }
    else
    { 
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.AudioReverbZone _this = (UnityEngine.AudioReverbZone)vc.csObj;
        _this.minDistance = arg0;
    }
}
static void AudioReverbZone_maxDistance(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.AudioReverbZone _this = (UnityEngine.AudioReverbZone)vc.csObj;
        var result = _this.maxDistance;
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(result));
    }
    else
    { 
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.AudioReverbZone _this = (UnityEngine.AudioReverbZone)vc.csObj;
        _this.maxDistance = arg0;
    }
}
static void AudioReverbZone_reverbPreset(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.AudioReverbZone _this = (UnityEngine.AudioReverbZone)vc.csObj;
        var result = _this.reverbPreset;
                JSApi.setEnum((int)JSApi.SetType.Rval, (int)result);
    }
    else
    { 
        UnityEngine.AudioReverbPreset arg0 = (UnityEngine.AudioReverbPreset)JSApi.getEnum((int)JSApi.GetType.Arg);
        UnityEngine.AudioReverbZone _this = (UnityEngine.AudioReverbZone)vc.csObj;
        _this.reverbPreset = arg0;
    }
}
static void AudioReverbZone_room(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.AudioReverbZone _this = (UnityEngine.AudioReverbZone)vc.csObj;
        var result = _this.room;
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(result));
    }
    else
    { 
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        UnityEngine.AudioReverbZone _this = (UnityEngine.AudioReverbZone)vc.csObj;
        _this.room = arg0;
    }
}
static void AudioReverbZone_roomHF(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.AudioReverbZone _this = (UnityEngine.AudioReverbZone)vc.csObj;
        var result = _this.roomHF;
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(result));
    }
    else
    { 
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        UnityEngine.AudioReverbZone _this = (UnityEngine.AudioReverbZone)vc.csObj;
        _this.roomHF = arg0;
    }
}
static void AudioReverbZone_roomLF(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.AudioReverbZone _this = (UnityEngine.AudioReverbZone)vc.csObj;
        var result = _this.roomLF;
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(result));
    }
    else
    { 
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        UnityEngine.AudioReverbZone _this = (UnityEngine.AudioReverbZone)vc.csObj;
        _this.roomLF = arg0;
    }
}
static void AudioReverbZone_decayTime(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.AudioReverbZone _this = (UnityEngine.AudioReverbZone)vc.csObj;
        var result = _this.decayTime;
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(result));
    }
    else
    { 
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.AudioReverbZone _this = (UnityEngine.AudioReverbZone)vc.csObj;
        _this.decayTime = arg0;
    }
}
static void AudioReverbZone_decayHFRatio(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.AudioReverbZone _this = (UnityEngine.AudioReverbZone)vc.csObj;
        var result = _this.decayHFRatio;
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(result));
    }
    else
    { 
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.AudioReverbZone _this = (UnityEngine.AudioReverbZone)vc.csObj;
        _this.decayHFRatio = arg0;
    }
}
static void AudioReverbZone_reflections(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.AudioReverbZone _this = (UnityEngine.AudioReverbZone)vc.csObj;
        var result = _this.reflections;
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(result));
    }
    else
    { 
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        UnityEngine.AudioReverbZone _this = (UnityEngine.AudioReverbZone)vc.csObj;
        _this.reflections = arg0;
    }
}
static void AudioReverbZone_reflectionsDelay(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.AudioReverbZone _this = (UnityEngine.AudioReverbZone)vc.csObj;
        var result = _this.reflectionsDelay;
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(result));
    }
    else
    { 
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.AudioReverbZone _this = (UnityEngine.AudioReverbZone)vc.csObj;
        _this.reflectionsDelay = arg0;
    }
}
static void AudioReverbZone_reverb(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.AudioReverbZone _this = (UnityEngine.AudioReverbZone)vc.csObj;
        var result = _this.reverb;
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(result));
    }
    else
    { 
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        UnityEngine.AudioReverbZone _this = (UnityEngine.AudioReverbZone)vc.csObj;
        _this.reverb = arg0;
    }
}
static void AudioReverbZone_reverbDelay(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.AudioReverbZone _this = (UnityEngine.AudioReverbZone)vc.csObj;
        var result = _this.reverbDelay;
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(result));
    }
    else
    { 
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.AudioReverbZone _this = (UnityEngine.AudioReverbZone)vc.csObj;
        _this.reverbDelay = arg0;
    }
}
static void AudioReverbZone_HFReference(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.AudioReverbZone _this = (UnityEngine.AudioReverbZone)vc.csObj;
        var result = _this.HFReference;
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(result));
    }
    else
    { 
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.AudioReverbZone _this = (UnityEngine.AudioReverbZone)vc.csObj;
        _this.HFReference = arg0;
    }
}
static void AudioReverbZone_LFReference(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.AudioReverbZone _this = (UnityEngine.AudioReverbZone)vc.csObj;
        var result = _this.LFReference;
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(result));
    }
    else
    { 
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.AudioReverbZone _this = (UnityEngine.AudioReverbZone)vc.csObj;
        _this.LFReference = arg0;
    }
}
static void AudioReverbZone_roomRolloffFactor(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.AudioReverbZone _this = (UnityEngine.AudioReverbZone)vc.csObj;
        var result = _this.roomRolloffFactor;
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(result));
    }
    else
    { 
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.AudioReverbZone _this = (UnityEngine.AudioReverbZone)vc.csObj;
        _this.roomRolloffFactor = arg0;
    }
}
static void AudioReverbZone_diffusion(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.AudioReverbZone _this = (UnityEngine.AudioReverbZone)vc.csObj;
        var result = _this.diffusion;
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(result));
    }
    else
    { 
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.AudioReverbZone _this = (UnityEngine.AudioReverbZone)vc.csObj;
        _this.diffusion = arg0;
    }
}
static void AudioReverbZone_density(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.AudioReverbZone _this = (UnityEngine.AudioReverbZone)vc.csObj;
        var result = _this.density;
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(result));
    }
    else
    { 
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.AudioReverbZone _this = (UnityEngine.AudioReverbZone)vc.csObj;
        _this.density = arg0;
    }
}

// methods


//register

public static void __Register()
{
    JSMgr.CallbackInfo ci = new JSMgr.CallbackInfo();
    ci.type = typeof(UnityEngine.AudioReverbZone);
    ci.fields = new JSMgr.CSCallbackField[]
    {

    };
    ci.properties = new JSMgr.CSCallbackProperty[]
    {
        AudioReverbZone_minDistance,
        AudioReverbZone_maxDistance,
        AudioReverbZone_reverbPreset,
        AudioReverbZone_room,
        AudioReverbZone_roomHF,
        AudioReverbZone_roomLF,
        AudioReverbZone_decayTime,
        AudioReverbZone_decayHFRatio,
        AudioReverbZone_reflections,
        AudioReverbZone_reflectionsDelay,
        AudioReverbZone_reverb,
        AudioReverbZone_reverbDelay,
        AudioReverbZone_HFReference,
        AudioReverbZone_LFReference,
        AudioReverbZone_roomRolloffFactor,
        AudioReverbZone_diffusion,
        AudioReverbZone_density,

    };
    ci.constructors = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(AudioReverbZone_AudioReverbZone1, ".ctor"),

    };
    ci.methods = new JSMgr.MethodCallBackInfo[]
    {

    };
    JSMgr.allCallbackInfo.Add(ci);
}


}
