
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by CSGenerator.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;

using jsval = JSApi.jsval;

public class JSB_UnityEngine_SparseTexture
{

////////////////////// SparseTexture ///////////////////////////////////////
// constructors

static bool SparseTexture_SparseTexture1(JSVCall vc, int argc)
{
    int _this = JSApi.getObject((int)JSApi.GetType.Arg);
    JSApi.attachFinalizerObject(_this);
    --argc;

    int len = argc;
    if (len == 4)
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        UnityEngine.TextureFormat arg2 = (UnityEngine.TextureFormat)JSApi.getEnum((int)JSApi.GetType.Arg);
        System.Int32 arg3 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        JSMgr.addJSCSRel(_this, new UnityEngine.SparseTexture(arg0, arg1, arg2, arg3));
    }

    return true;
}

static bool SparseTexture_SparseTexture2(JSVCall vc, int argc)
{
    int _this = JSApi.getObject((int)JSApi.GetType.Arg);
    JSApi.attachFinalizerObject(_this);
    --argc;

    int len = argc;
    if (len == 5)
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        UnityEngine.TextureFormat arg2 = (UnityEngine.TextureFormat)JSApi.getEnum((int)JSApi.GetType.Arg);
        System.Int32 arg3 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Boolean arg4 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        JSMgr.addJSCSRel(_this, new UnityEngine.SparseTexture(arg0, arg1, arg2, arg3, arg4));
    }

    return true;
}

// fields

// properties
static void SparseTexture_tileWidth(JSVCall vc)
{
        UnityEngine.SparseTexture _this = (UnityEngine.SparseTexture)vc.csObj;
        var result = _this.tileWidth;
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(result));
}
static void SparseTexture_tileHeight(JSVCall vc)
{
        UnityEngine.SparseTexture _this = (UnityEngine.SparseTexture)vc.csObj;
        var result = _this.tileHeight;
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(result));
}
static void SparseTexture_isCreated(JSVCall vc)
{
        UnityEngine.SparseTexture _this = (UnityEngine.SparseTexture)vc.csObj;
        var result = _this.isCreated;
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(result));
}

// methods

static bool SparseTexture_UnloadTile__Int32__Int32__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 3) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg2 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        ((UnityEngine.SparseTexture)vc.csObj).UnloadTile(arg0, arg1, arg2);
    }

    return true;
}

static bool SparseTexture_UpdateTile__Int32__Int32__Int32__Color32_Array(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 4) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg2 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        UnityEngine.Color32[] arg3 = JSDataExchangeMgr.GetJSArg<UnityEngine.Color32[]>(() =>
        {
            int jsObjID = JSApi.getObject((int)JSApi.GetType.Arg);
            int length = JSApi.getArrayLength(jsObjID);
            var ret = new UnityEngine.Color32[length];
            for (var i = 0; i < length; i++) {
                JSApi.getElement(jsObjID, i);
                ret[i] = (UnityEngine.Color32)JSMgr.datax.getObject((int)JSApi.GetType.SaveAndRemove);
            }
            return ret;
        });
        ((UnityEngine.SparseTexture)vc.csObj).UpdateTile(arg0, arg1, arg2, arg3);
    }

    return true;
}

static bool SparseTexture_UpdateTileRaw__Int32__Int32__Int32__Byte_Array(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 4) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg2 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Byte[] arg3 = JSDataExchangeMgr.GetJSArg<System.Byte[]>(() =>
        {
            int jsObjID = JSApi.getObject((int)JSApi.GetType.Arg);
            int length = JSApi.getArrayLength(jsObjID);
            var ret = new System.Byte[length];
            for (var i = 0; i < length; i++) {
                JSApi.getElement(jsObjID, i);
                ret[i] = (System.Byte)JSApi.getByte((int)JSApi.GetType.SaveAndRemove);
            }
            return ret;
        });
        ((UnityEngine.SparseTexture)vc.csObj).UpdateTileRaw(arg0, arg1, arg2, arg3);
    }

    return true;
}


//register

public static void __Register()
{
    JSMgr.CallbackInfo ci = new JSMgr.CallbackInfo();
    ci.type = typeof(UnityEngine.SparseTexture);
    ci.fields = new JSMgr.CSCallbackField[]
    {

    };
    ci.properties = new JSMgr.CSCallbackProperty[]
    {
        SparseTexture_tileWidth,
        SparseTexture_tileHeight,
        SparseTexture_isCreated,

    };
    ci.constructors = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(SparseTexture_SparseTexture1, ".ctor"),
        new JSMgr.MethodCallBackInfo(SparseTexture_SparseTexture2, ".ctor"),

    };
    ci.methods = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(SparseTexture_UnloadTile__Int32__Int32__Int32, "UnloadTile"),
        new JSMgr.MethodCallBackInfo(SparseTexture_UpdateTile__Int32__Int32__Int32__Color32_Array, "UpdateTile"),
        new JSMgr.MethodCallBackInfo(SparseTexture_UpdateTileRaw__Int32__Int32__Int32__Byte_Array, "UpdateTileRaw"),

    };
    JSMgr.allCallbackInfo.Add(ci);
}


}
