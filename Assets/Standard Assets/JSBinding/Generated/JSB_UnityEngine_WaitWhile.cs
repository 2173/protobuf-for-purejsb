
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by CSGenerator.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;

using jsval = JSApi.jsval;

public class JSB_UnityEngine_WaitWhile
{

////////////////////// WaitWhile ///////////////////////////////////////
// constructors
public static Func<System.Boolean> WaitWhile__ctor_GetDelegate_member0_arg0(CSRepresentedObject objFunction)
{
    if (objFunction == null || objFunction.jsObjID == 0)
    {
        return null;
    }
    var action = JSMgr.getJSFunCSDelegateRel<Func<System.Boolean>>(objFunction.jsObjID);
    if (action == null)
    {
        action = () => 
        {
            JSMgr.vCall.CallJSFunctionValue(0, objFunction.jsObjID);
            return (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.JSFunRet);
        };
        JSMgr.addJSFunCSDelegateRel(objFunction.jsObjID, action);
    }
    return action;
}

static bool WaitWhile_WaitWhile1(JSVCall vc, int argc)
{
    int _this = JSApi.getObject((int)JSApi.GetType.Arg);
    JSApi.attachFinalizerObject(_this);
    --argc;

    int len = argc;
    if (len == 1)
    {
        Func<System.Boolean> arg0 = JSDataExchangeMgr.GetJSArg<Func<System.Boolean>>(()=>
        {
            if (JSApi.isFunctionS((int)JSApi.GetType.Arg))
                return WaitWhile__ctor_GetDelegate_member0_arg0(JSApi.getFunctionS((int)JSApi.GetType.Arg));
            else
                return (Func<System.Boolean>)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        });
        JSMgr.addJSCSRel(_this, new UnityEngine.WaitWhile(arg0));
    }

    return true;
}

// fields

// properties
static void WaitWhile_keepWaiting(JSVCall vc)
{
        UnityEngine.WaitWhile _this = (UnityEngine.WaitWhile)vc.csObj;
        var result = _this.keepWaiting;
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(result));
}

// methods


//register

public static void __Register()
{
    JSMgr.CallbackInfo ci = new JSMgr.CallbackInfo();
    ci.type = typeof(UnityEngine.WaitWhile);
    ci.fields = new JSMgr.CSCallbackField[]
    {

    };
    ci.properties = new JSMgr.CSCallbackProperty[]
    {
        WaitWhile_keepWaiting,

    };
    ci.constructors = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(WaitWhile_WaitWhile1, ".ctor"),

    };
    ci.methods = new JSMgr.MethodCallBackInfo[]
    {

    };
    JSMgr.allCallbackInfo.Add(ci);
}


}
