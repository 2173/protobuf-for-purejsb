
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by CSGenerator.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;
using System.Diagnostics;

using jsval = JSApi.jsval;

public class JSB_System_Diagnostics_Stopwatch
{

////////////////////// Stopwatch ///////////////////////////////////////
// constructors

static bool Stopwatch_Stopwatch1(JSVCall vc, int argc)
{
    int _this = JSApi.getObject((int)JSApi.GetType.Arg);
    JSApi.attachFinalizerObject(_this);
    --argc;

    int len = argc;
    if (len == 0)
    {
        JSMgr.addJSCSRel(_this, new System.Diagnostics.Stopwatch());
    }

    return true;
}

// fields
static void Stopwatch_Frequency(JSVCall vc)
{
        var result = System.Diagnostics.Stopwatch.Frequency;
                JSApi.setInt64((int)JSApi.SetType.Rval, (System.Int64)(result));
}
static void Stopwatch_IsHighResolution(JSVCall vc)
{
        var result = System.Diagnostics.Stopwatch.IsHighResolution;
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(result));
}

// properties
static void Stopwatch_Elapsed(JSVCall vc)
{
        System.Diagnostics.Stopwatch _this = (System.Diagnostics.Stopwatch)vc.csObj;
        var result = _this.Elapsed;
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, result);
}
static void Stopwatch_ElapsedMilliseconds(JSVCall vc)
{
        System.Diagnostics.Stopwatch _this = (System.Diagnostics.Stopwatch)vc.csObj;
        var result = _this.ElapsedMilliseconds;
                JSApi.setInt64((int)JSApi.SetType.Rval, (System.Int64)(result));
}
static void Stopwatch_ElapsedTicks(JSVCall vc)
{
        System.Diagnostics.Stopwatch _this = (System.Diagnostics.Stopwatch)vc.csObj;
        var result = _this.ElapsedTicks;
                JSApi.setInt64((int)JSApi.SetType.Rval, (System.Int64)(result));
}
static void Stopwatch_IsRunning(JSVCall vc)
{
        System.Diagnostics.Stopwatch _this = (System.Diagnostics.Stopwatch)vc.csObj;
        var result = _this.IsRunning;
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(result));
}

// methods

static bool Stopwatch_Reset(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
        ((System.Diagnostics.Stopwatch)vc.csObj).Reset();
    }

    return true;
}

static bool Stopwatch_Start(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
        ((System.Diagnostics.Stopwatch)vc.csObj).Start();
    }

    return true;
}

static bool Stopwatch_Stop(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
        ((System.Diagnostics.Stopwatch)vc.csObj).Stop();
    }

    return true;
}

static bool Stopwatch_GetTimestamp(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
                JSApi.setInt64((int)JSApi.SetType.Rval, (System.Int64)(System.Diagnostics.Stopwatch.GetTimestamp()));
    }

    return true;
}

static bool Stopwatch_StartNew(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.Diagnostics.Stopwatch.StartNew());
    }

    return true;
}


//register

public static void __Register()
{
    JSMgr.CallbackInfo ci = new JSMgr.CallbackInfo();
    ci.type = typeof(System.Diagnostics.Stopwatch);
    ci.fields = new JSMgr.CSCallbackField[]
    {
        Stopwatch_Frequency,
        Stopwatch_IsHighResolution,

    };
    ci.properties = new JSMgr.CSCallbackProperty[]
    {
        Stopwatch_Elapsed,
        Stopwatch_ElapsedMilliseconds,
        Stopwatch_ElapsedTicks,
        Stopwatch_IsRunning,

    };
    ci.constructors = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(Stopwatch_Stopwatch1, ".ctor"),

    };
    ci.methods = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(Stopwatch_Reset, "Reset"),
        new JSMgr.MethodCallBackInfo(Stopwatch_Start, "Start"),
        new JSMgr.MethodCallBackInfo(Stopwatch_Stop, "Stop"),
        new JSMgr.MethodCallBackInfo(Stopwatch_GetTimestamp, "GetTimestamp"),
        new JSMgr.MethodCallBackInfo(Stopwatch_StartNew, "StartNew"),

    };
    JSMgr.allCallbackInfo.Add(ci);
}


}
