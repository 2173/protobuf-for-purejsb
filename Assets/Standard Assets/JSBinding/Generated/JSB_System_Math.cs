
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by CSGenerator.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;

using jsval = JSApi.jsval;

public class JSB_System_Math
{

////////////////////// Math ///////////////////////////////////////
// constructors

// fields
static void Math_E(JSVCall vc)
{
        var result = System.Math.E;
                JSApi.setDouble((int)JSApi.SetType.Rval, (System.Double)(result));
}
static void Math_PI(JSVCall vc)
{
        var result = System.Math.PI;
                JSApi.setDouble((int)JSApi.SetType.Rval, (System.Double)(result));
}

// properties

// methods

static bool Math_Abs__Int64(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int64 arg0 = (System.Int64)JSApi.getInt64((int)JSApi.GetType.Arg);
                JSApi.setInt64((int)JSApi.SetType.Rval, (System.Int64)(System.Math.Abs(arg0)));
    }

    return true;
}

static bool Math_Abs__SByte(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.SByte arg0 = (System.SByte)JSApi.getSByte((int)JSApi.GetType.Arg);
                JSApi.setSByte((int)JSApi.SetType.Rval, (System.SByte)(System.Math.Abs(arg0)));
    }

    return true;
}

static bool Math_Abs__Int16(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int16 arg0 = (System.Int16)JSApi.getInt16((int)JSApi.GetType.Arg);
                JSApi.setInt16((int)JSApi.SetType.Rval, (System.Int16)(System.Math.Abs(arg0)));
    }

    return true;
}

static bool Math_Abs__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(System.Math.Abs(arg0)));
    }

    return true;
}

static bool Math_Abs__Decimal(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Decimal arg0 = (System.Decimal)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.Math.Abs(arg0));
    }

    return true;
}

static bool Math_Abs__Double(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Double arg0 = (System.Double)JSApi.getDouble((int)JSApi.GetType.Arg);
                JSApi.setDouble((int)JSApi.SetType.Rval, (System.Double)(System.Math.Abs(arg0)));
    }

    return true;
}

static bool Math_Abs__Single(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(System.Math.Abs(arg0)));
    }

    return true;
}

static bool Math_Acos__Double(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Double arg0 = (System.Double)JSApi.getDouble((int)JSApi.GetType.Arg);
                JSApi.setDouble((int)JSApi.SetType.Rval, (System.Double)(System.Math.Acos(arg0)));
    }

    return true;
}

static bool Math_Asin__Double(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Double arg0 = (System.Double)JSApi.getDouble((int)JSApi.GetType.Arg);
                JSApi.setDouble((int)JSApi.SetType.Rval, (System.Double)(System.Math.Asin(arg0)));
    }

    return true;
}

static bool Math_Atan__Double(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Double arg0 = (System.Double)JSApi.getDouble((int)JSApi.GetType.Arg);
                JSApi.setDouble((int)JSApi.SetType.Rval, (System.Double)(System.Math.Atan(arg0)));
    }

    return true;
}

static bool Math_Atan2__Double__Double(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Double arg0 = (System.Double)JSApi.getDouble((int)JSApi.GetType.Arg);
        System.Double arg1 = (System.Double)JSApi.getDouble((int)JSApi.GetType.Arg);
                JSApi.setDouble((int)JSApi.SetType.Rval, (System.Double)(System.Math.Atan2(arg0, arg1)));
    }

    return true;
}

static bool Math_BigMul__Int32__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                JSApi.setInt64((int)JSApi.SetType.Rval, (System.Int64)(System.Math.BigMul(arg0, arg1)));
    }

    return true;
}

static bool Math_Ceiling__Double(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Double arg0 = (System.Double)JSApi.getDouble((int)JSApi.GetType.Arg);
                JSApi.setDouble((int)JSApi.SetType.Rval, (System.Double)(System.Math.Ceiling(arg0)));
    }

    return true;
}

static bool Math_Ceiling__Decimal(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Decimal arg0 = (System.Decimal)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.Math.Ceiling(arg0));
    }

    return true;
}

static bool Math_Cos__Double(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Double arg0 = (System.Double)JSApi.getDouble((int)JSApi.GetType.Arg);
                JSApi.setDouble((int)JSApi.SetType.Rval, (System.Double)(System.Math.Cos(arg0)));
    }

    return true;
}

static bool Math_Cosh__Double(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Double arg0 = (System.Double)JSApi.getDouble((int)JSApi.GetType.Arg);
                JSApi.setDouble((int)JSApi.SetType.Rval, (System.Double)(System.Math.Cosh(arg0)));
    }

    return true;
}

static bool Math_DivRem__Int64__Int64__Int64(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 3) 
    {
        System.Int64 arg0 = (System.Int64)JSApi.getInt64((int)JSApi.GetType.Arg);
        System.Int64 arg1 = (System.Int64)JSApi.getInt64((int)JSApi.GetType.Arg);
        int r_arg2 = JSApi.incArgIndex();
        System.Int64 arg2;
                JSApi.setInt64((int)JSApi.SetType.Rval, (System.Int64)(System.Math.DivRem(arg0, arg1, out arg2)));
        JSApi.setArgIndex(r_arg2);
        JSApi.setInt64((int)JSApi.SetType.ArgRef, arg2);
    }

    return true;
}

static bool Math_DivRem__Int32__Int32__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 3) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        int r_arg2 = JSApi.incArgIndex();
        System.Int32 arg2;
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(System.Math.DivRem(arg0, arg1, out arg2)));
        JSApi.setArgIndex(r_arg2);
        JSApi.setInt32((int)JSApi.SetType.ArgRef, arg2);
    }

    return true;
}

static bool Math_Exp__Double(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Double arg0 = (System.Double)JSApi.getDouble((int)JSApi.GetType.Arg);
                JSApi.setDouble((int)JSApi.SetType.Rval, (System.Double)(System.Math.Exp(arg0)));
    }

    return true;
}

static bool Math_Floor__Double(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Double arg0 = (System.Double)JSApi.getDouble((int)JSApi.GetType.Arg);
                JSApi.setDouble((int)JSApi.SetType.Rval, (System.Double)(System.Math.Floor(arg0)));
    }

    return true;
}

static bool Math_Floor__Decimal(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Decimal arg0 = (System.Decimal)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.Math.Floor(arg0));
    }

    return true;
}

static bool Math_IEEERemainder__Double__Double(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Double arg0 = (System.Double)JSApi.getDouble((int)JSApi.GetType.Arg);
        System.Double arg1 = (System.Double)JSApi.getDouble((int)JSApi.GetType.Arg);
                JSApi.setDouble((int)JSApi.SetType.Rval, (System.Double)(System.Math.IEEERemainder(arg0, arg1)));
    }

    return true;
}

static bool Math_Log__Double__Double(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Double arg0 = (System.Double)JSApi.getDouble((int)JSApi.GetType.Arg);
        System.Double arg1 = (System.Double)JSApi.getDouble((int)JSApi.GetType.Arg);
                JSApi.setDouble((int)JSApi.SetType.Rval, (System.Double)(System.Math.Log(arg0, arg1)));
    }

    return true;
}

static bool Math_Log__Double(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Double arg0 = (System.Double)JSApi.getDouble((int)JSApi.GetType.Arg);
                JSApi.setDouble((int)JSApi.SetType.Rval, (System.Double)(System.Math.Log(arg0)));
    }

    return true;
}

static bool Math_Log10__Double(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Double arg0 = (System.Double)JSApi.getDouble((int)JSApi.GetType.Arg);
                JSApi.setDouble((int)JSApi.SetType.Rval, (System.Double)(System.Math.Log10(arg0)));
    }

    return true;
}

static bool Math_Max__UInt16__UInt16(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.UInt16 arg0 = (System.UInt16)JSApi.getUInt16((int)JSApi.GetType.Arg);
        System.UInt16 arg1 = (System.UInt16)JSApi.getUInt16((int)JSApi.GetType.Arg);
                JSApi.setUInt16((int)JSApi.SetType.Rval, (System.UInt16)(System.Math.Max(arg0, arg1)));
    }

    return true;
}

static bool Math_Max__Single__Single(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        System.Single arg1 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(System.Math.Max(arg0, arg1)));
    }

    return true;
}

static bool Math_Max__Int32__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(System.Math.Max(arg0, arg1)));
    }

    return true;
}

static bool Math_Max__Double__Double(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Double arg0 = (System.Double)JSApi.getDouble((int)JSApi.GetType.Arg);
        System.Double arg1 = (System.Double)JSApi.getDouble((int)JSApi.GetType.Arg);
                JSApi.setDouble((int)JSApi.SetType.Rval, (System.Double)(System.Math.Max(arg0, arg1)));
    }

    return true;
}

static bool Math_Max__Byte__Byte(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Byte arg0 = (System.Byte)JSApi.getByte((int)JSApi.GetType.Arg);
        System.Byte arg1 = (System.Byte)JSApi.getByte((int)JSApi.GetType.Arg);
                JSApi.setByte((int)JSApi.SetType.Rval, (System.Byte)(System.Math.Max(arg0, arg1)));
    }

    return true;
}

static bool Math_Max__Decimal__Decimal(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Decimal arg0 = (System.Decimal)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        System.Decimal arg1 = (System.Decimal)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.Math.Max(arg0, arg1));
    }

    return true;
}

static bool Math_Max__UInt32__UInt32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.UInt32 arg0 = (System.UInt32)JSApi.getUInt32((int)JSApi.GetType.Arg);
        System.UInt32 arg1 = (System.UInt32)JSApi.getUInt32((int)JSApi.GetType.Arg);
                JSApi.setUInt32((int)JSApi.SetType.Rval, (System.UInt32)(System.Math.Max(arg0, arg1)));
    }

    return true;
}

static bool Math_Max__UInt64__UInt64(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.UInt64 arg0 = (System.UInt64)JSApi.getUInt64((int)JSApi.GetType.Arg);
        System.UInt64 arg1 = (System.UInt64)JSApi.getUInt64((int)JSApi.GetType.Arg);
                JSApi.setUInt64((int)JSApi.SetType.Rval, (System.UInt64)(System.Math.Max(arg0, arg1)));
    }

    return true;
}

static bool Math_Max__Int16__Int16(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Int16 arg0 = (System.Int16)JSApi.getInt16((int)JSApi.GetType.Arg);
        System.Int16 arg1 = (System.Int16)JSApi.getInt16((int)JSApi.GetType.Arg);
                JSApi.setInt16((int)JSApi.SetType.Rval, (System.Int16)(System.Math.Max(arg0, arg1)));
    }

    return true;
}

static bool Math_Max__Int64__Int64(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Int64 arg0 = (System.Int64)JSApi.getInt64((int)JSApi.GetType.Arg);
        System.Int64 arg1 = (System.Int64)JSApi.getInt64((int)JSApi.GetType.Arg);
                JSApi.setInt64((int)JSApi.SetType.Rval, (System.Int64)(System.Math.Max(arg0, arg1)));
    }

    return true;
}

static bool Math_Max__SByte__SByte(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.SByte arg0 = (System.SByte)JSApi.getSByte((int)JSApi.GetType.Arg);
        System.SByte arg1 = (System.SByte)JSApi.getSByte((int)JSApi.GetType.Arg);
                JSApi.setSByte((int)JSApi.SetType.Rval, (System.SByte)(System.Math.Max(arg0, arg1)));
    }

    return true;
}

static bool Math_Min__UInt16__UInt16(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.UInt16 arg0 = (System.UInt16)JSApi.getUInt16((int)JSApi.GetType.Arg);
        System.UInt16 arg1 = (System.UInt16)JSApi.getUInt16((int)JSApi.GetType.Arg);
                JSApi.setUInt16((int)JSApi.SetType.Rval, (System.UInt16)(System.Math.Min(arg0, arg1)));
    }

    return true;
}

static bool Math_Min__Double__Double(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Double arg0 = (System.Double)JSApi.getDouble((int)JSApi.GetType.Arg);
        System.Double arg1 = (System.Double)JSApi.getDouble((int)JSApi.GetType.Arg);
                JSApi.setDouble((int)JSApi.SetType.Rval, (System.Double)(System.Math.Min(arg0, arg1)));
    }

    return true;
}

static bool Math_Min__Single__Single(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        System.Single arg1 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(System.Math.Min(arg0, arg1)));
    }

    return true;
}

static bool Math_Min__UInt64__UInt64(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.UInt64 arg0 = (System.UInt64)JSApi.getUInt64((int)JSApi.GetType.Arg);
        System.UInt64 arg1 = (System.UInt64)JSApi.getUInt64((int)JSApi.GetType.Arg);
                JSApi.setUInt64((int)JSApi.SetType.Rval, (System.UInt64)(System.Math.Min(arg0, arg1)));
    }

    return true;
}

static bool Math_Min__Decimal__Decimal(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Decimal arg0 = (System.Decimal)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        System.Decimal arg1 = (System.Decimal)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.Math.Min(arg0, arg1));
    }

    return true;
}

static bool Math_Min__Int32__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(System.Math.Min(arg0, arg1)));
    }

    return true;
}

static bool Math_Min__Int16__Int16(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Int16 arg0 = (System.Int16)JSApi.getInt16((int)JSApi.GetType.Arg);
        System.Int16 arg1 = (System.Int16)JSApi.getInt16((int)JSApi.GetType.Arg);
                JSApi.setInt16((int)JSApi.SetType.Rval, (System.Int16)(System.Math.Min(arg0, arg1)));
    }

    return true;
}

static bool Math_Min__UInt32__UInt32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.UInt32 arg0 = (System.UInt32)JSApi.getUInt32((int)JSApi.GetType.Arg);
        System.UInt32 arg1 = (System.UInt32)JSApi.getUInt32((int)JSApi.GetType.Arg);
                JSApi.setUInt32((int)JSApi.SetType.Rval, (System.UInt32)(System.Math.Min(arg0, arg1)));
    }

    return true;
}

static bool Math_Min__Int64__Int64(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Int64 arg0 = (System.Int64)JSApi.getInt64((int)JSApi.GetType.Arg);
        System.Int64 arg1 = (System.Int64)JSApi.getInt64((int)JSApi.GetType.Arg);
                JSApi.setInt64((int)JSApi.SetType.Rval, (System.Int64)(System.Math.Min(arg0, arg1)));
    }

    return true;
}

static bool Math_Min__SByte__SByte(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.SByte arg0 = (System.SByte)JSApi.getSByte((int)JSApi.GetType.Arg);
        System.SByte arg1 = (System.SByte)JSApi.getSByte((int)JSApi.GetType.Arg);
                JSApi.setSByte((int)JSApi.SetType.Rval, (System.SByte)(System.Math.Min(arg0, arg1)));
    }

    return true;
}

static bool Math_Min__Byte__Byte(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Byte arg0 = (System.Byte)JSApi.getByte((int)JSApi.GetType.Arg);
        System.Byte arg1 = (System.Byte)JSApi.getByte((int)JSApi.GetType.Arg);
                JSApi.setByte((int)JSApi.SetType.Rval, (System.Byte)(System.Math.Min(arg0, arg1)));
    }

    return true;
}

static bool Math_Pow__Double__Double(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Double arg0 = (System.Double)JSApi.getDouble((int)JSApi.GetType.Arg);
        System.Double arg1 = (System.Double)JSApi.getDouble((int)JSApi.GetType.Arg);
                JSApi.setDouble((int)JSApi.SetType.Rval, (System.Double)(System.Math.Pow(arg0, arg1)));
    }

    return true;
}

static bool Math_Round__Decimal__Int32__MidpointRounding(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 3) 
    {
        System.Decimal arg0 = (System.Decimal)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.MidpointRounding arg2 = (System.MidpointRounding)JSApi.getEnum((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.Math.Round(arg0, arg1, arg2));
    }

    return true;
}

static bool Math_Round__Double__Int32__MidpointRounding(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 3) 
    {
        System.Double arg0 = (System.Double)JSApi.getDouble((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.MidpointRounding arg2 = (System.MidpointRounding)JSApi.getEnum((int)JSApi.GetType.Arg);
                JSApi.setDouble((int)JSApi.SetType.Rval, (System.Double)(System.Math.Round(arg0, arg1, arg2)));
    }

    return true;
}

static bool Math_Round__Decimal__MidpointRounding(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Decimal arg0 = (System.Decimal)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        System.MidpointRounding arg1 = (System.MidpointRounding)JSApi.getEnum((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.Math.Round(arg0, arg1));
    }

    return true;
}

static bool Math_Round__Decimal__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Decimal arg0 = (System.Decimal)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.Math.Round(arg0, arg1));
    }

    return true;
}

static bool Math_Round__Double__MidpointRounding(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Double arg0 = (System.Double)JSApi.getDouble((int)JSApi.GetType.Arg);
        System.MidpointRounding arg1 = (System.MidpointRounding)JSApi.getEnum((int)JSApi.GetType.Arg);
                JSApi.setDouble((int)JSApi.SetType.Rval, (System.Double)(System.Math.Round(arg0, arg1)));
    }

    return true;
}

static bool Math_Round__Double__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Double arg0 = (System.Double)JSApi.getDouble((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                JSApi.setDouble((int)JSApi.SetType.Rval, (System.Double)(System.Math.Round(arg0, arg1)));
    }

    return true;
}

static bool Math_Round__Decimal(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Decimal arg0 = (System.Decimal)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.Math.Round(arg0));
    }

    return true;
}

static bool Math_Round__Double(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Double arg0 = (System.Double)JSApi.getDouble((int)JSApi.GetType.Arg);
                JSApi.setDouble((int)JSApi.SetType.Rval, (System.Double)(System.Math.Round(arg0)));
    }

    return true;
}

static bool Math_Sign__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(System.Math.Sign(arg0)));
    }

    return true;
}

static bool Math_Sign__Int64(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int64 arg0 = (System.Int64)JSApi.getInt64((int)JSApi.GetType.Arg);
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(System.Math.Sign(arg0)));
    }

    return true;
}

static bool Math_Sign__Single(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(System.Math.Sign(arg0)));
    }

    return true;
}

static bool Math_Sign__Decimal(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Decimal arg0 = (System.Decimal)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(System.Math.Sign(arg0)));
    }

    return true;
}

static bool Math_Sign__Double(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Double arg0 = (System.Double)JSApi.getDouble((int)JSApi.GetType.Arg);
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(System.Math.Sign(arg0)));
    }

    return true;
}

static bool Math_Sign__SByte(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.SByte arg0 = (System.SByte)JSApi.getSByte((int)JSApi.GetType.Arg);
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(System.Math.Sign(arg0)));
    }

    return true;
}

static bool Math_Sign__Int16(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int16 arg0 = (System.Int16)JSApi.getInt16((int)JSApi.GetType.Arg);
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(System.Math.Sign(arg0)));
    }

    return true;
}

static bool Math_Sin__Double(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Double arg0 = (System.Double)JSApi.getDouble((int)JSApi.GetType.Arg);
                JSApi.setDouble((int)JSApi.SetType.Rval, (System.Double)(System.Math.Sin(arg0)));
    }

    return true;
}

static bool Math_Sinh__Double(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Double arg0 = (System.Double)JSApi.getDouble((int)JSApi.GetType.Arg);
                JSApi.setDouble((int)JSApi.SetType.Rval, (System.Double)(System.Math.Sinh(arg0)));
    }

    return true;
}

static bool Math_Sqrt__Double(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Double arg0 = (System.Double)JSApi.getDouble((int)JSApi.GetType.Arg);
                JSApi.setDouble((int)JSApi.SetType.Rval, (System.Double)(System.Math.Sqrt(arg0)));
    }

    return true;
}

static bool Math_Tan__Double(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Double arg0 = (System.Double)JSApi.getDouble((int)JSApi.GetType.Arg);
                JSApi.setDouble((int)JSApi.SetType.Rval, (System.Double)(System.Math.Tan(arg0)));
    }

    return true;
}

static bool Math_Tanh__Double(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Double arg0 = (System.Double)JSApi.getDouble((int)JSApi.GetType.Arg);
                JSApi.setDouble((int)JSApi.SetType.Rval, (System.Double)(System.Math.Tanh(arg0)));
    }

    return true;
}

static bool Math_Truncate__Double(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Double arg0 = (System.Double)JSApi.getDouble((int)JSApi.GetType.Arg);
                JSApi.setDouble((int)JSApi.SetType.Rval, (System.Double)(System.Math.Truncate(arg0)));
    }

    return true;
}

static bool Math_Truncate__Decimal(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Decimal arg0 = (System.Decimal)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.Math.Truncate(arg0));
    }

    return true;
}


//register

public static void __Register()
{
    JSMgr.CallbackInfo ci = new JSMgr.CallbackInfo();
    ci.type = typeof(System.Math);
    ci.fields = new JSMgr.CSCallbackField[]
    {
        Math_E,
        Math_PI,

    };
    ci.properties = new JSMgr.CSCallbackProperty[]
    {

    };
    ci.constructors = new JSMgr.MethodCallBackInfo[]
    {

    };
    ci.methods = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(Math_Abs__Int64, "Abs"),
        new JSMgr.MethodCallBackInfo(Math_Abs__SByte, "Abs"),
        new JSMgr.MethodCallBackInfo(Math_Abs__Int16, "Abs"),
        new JSMgr.MethodCallBackInfo(Math_Abs__Int32, "Abs"),
        new JSMgr.MethodCallBackInfo(Math_Abs__Decimal, "Abs"),
        new JSMgr.MethodCallBackInfo(Math_Abs__Double, "Abs"),
        new JSMgr.MethodCallBackInfo(Math_Abs__Single, "Abs"),
        new JSMgr.MethodCallBackInfo(Math_Acos__Double, "Acos"),
        new JSMgr.MethodCallBackInfo(Math_Asin__Double, "Asin"),
        new JSMgr.MethodCallBackInfo(Math_Atan__Double, "Atan"),
        new JSMgr.MethodCallBackInfo(Math_Atan2__Double__Double, "Atan2"),
        new JSMgr.MethodCallBackInfo(Math_BigMul__Int32__Int32, "BigMul"),
        new JSMgr.MethodCallBackInfo(Math_Ceiling__Double, "Ceiling"),
        new JSMgr.MethodCallBackInfo(Math_Ceiling__Decimal, "Ceiling"),
        new JSMgr.MethodCallBackInfo(Math_Cos__Double, "Cos"),
        new JSMgr.MethodCallBackInfo(Math_Cosh__Double, "Cosh"),
        new JSMgr.MethodCallBackInfo(Math_DivRem__Int64__Int64__Int64, "DivRem"),
        new JSMgr.MethodCallBackInfo(Math_DivRem__Int32__Int32__Int32, "DivRem"),
        new JSMgr.MethodCallBackInfo(Math_Exp__Double, "Exp"),
        new JSMgr.MethodCallBackInfo(Math_Floor__Double, "Floor"),
        new JSMgr.MethodCallBackInfo(Math_Floor__Decimal, "Floor"),
        new JSMgr.MethodCallBackInfo(Math_IEEERemainder__Double__Double, "IEEERemainder"),
        new JSMgr.MethodCallBackInfo(Math_Log__Double__Double, "Log"),
        new JSMgr.MethodCallBackInfo(Math_Log__Double, "Log"),
        new JSMgr.MethodCallBackInfo(Math_Log10__Double, "Log10"),
        new JSMgr.MethodCallBackInfo(Math_Max__UInt16__UInt16, "Max"),
        new JSMgr.MethodCallBackInfo(Math_Max__Single__Single, "Max"),
        new JSMgr.MethodCallBackInfo(Math_Max__Int32__Int32, "Max"),
        new JSMgr.MethodCallBackInfo(Math_Max__Double__Double, "Max"),
        new JSMgr.MethodCallBackInfo(Math_Max__Byte__Byte, "Max"),
        new JSMgr.MethodCallBackInfo(Math_Max__Decimal__Decimal, "Max"),
        new JSMgr.MethodCallBackInfo(Math_Max__UInt32__UInt32, "Max"),
        new JSMgr.MethodCallBackInfo(Math_Max__UInt64__UInt64, "Max"),
        new JSMgr.MethodCallBackInfo(Math_Max__Int16__Int16, "Max"),
        new JSMgr.MethodCallBackInfo(Math_Max__Int64__Int64, "Max"),
        new JSMgr.MethodCallBackInfo(Math_Max__SByte__SByte, "Max"),
        new JSMgr.MethodCallBackInfo(Math_Min__UInt16__UInt16, "Min"),
        new JSMgr.MethodCallBackInfo(Math_Min__Double__Double, "Min"),
        new JSMgr.MethodCallBackInfo(Math_Min__Single__Single, "Min"),
        new JSMgr.MethodCallBackInfo(Math_Min__UInt64__UInt64, "Min"),
        new JSMgr.MethodCallBackInfo(Math_Min__Decimal__Decimal, "Min"),
        new JSMgr.MethodCallBackInfo(Math_Min__Int32__Int32, "Min"),
        new JSMgr.MethodCallBackInfo(Math_Min__Int16__Int16, "Min"),
        new JSMgr.MethodCallBackInfo(Math_Min__UInt32__UInt32, "Min"),
        new JSMgr.MethodCallBackInfo(Math_Min__Int64__Int64, "Min"),
        new JSMgr.MethodCallBackInfo(Math_Min__SByte__SByte, "Min"),
        new JSMgr.MethodCallBackInfo(Math_Min__Byte__Byte, "Min"),
        new JSMgr.MethodCallBackInfo(Math_Pow__Double__Double, "Pow"),
        new JSMgr.MethodCallBackInfo(Math_Round__Decimal__Int32__MidpointRounding, "Round"),
        new JSMgr.MethodCallBackInfo(Math_Round__Double__Int32__MidpointRounding, "Round"),
        new JSMgr.MethodCallBackInfo(Math_Round__Decimal__MidpointRounding, "Round"),
        new JSMgr.MethodCallBackInfo(Math_Round__Decimal__Int32, "Round"),
        new JSMgr.MethodCallBackInfo(Math_Round__Double__MidpointRounding, "Round"),
        new JSMgr.MethodCallBackInfo(Math_Round__Double__Int32, "Round"),
        new JSMgr.MethodCallBackInfo(Math_Round__Decimal, "Round"),
        new JSMgr.MethodCallBackInfo(Math_Round__Double, "Round"),
        new JSMgr.MethodCallBackInfo(Math_Sign__Int32, "Sign"),
        new JSMgr.MethodCallBackInfo(Math_Sign__Int64, "Sign"),
        new JSMgr.MethodCallBackInfo(Math_Sign__Single, "Sign"),
        new JSMgr.MethodCallBackInfo(Math_Sign__Decimal, "Sign"),
        new JSMgr.MethodCallBackInfo(Math_Sign__Double, "Sign"),
        new JSMgr.MethodCallBackInfo(Math_Sign__SByte, "Sign"),
        new JSMgr.MethodCallBackInfo(Math_Sign__Int16, "Sign"),
        new JSMgr.MethodCallBackInfo(Math_Sin__Double, "Sin"),
        new JSMgr.MethodCallBackInfo(Math_Sinh__Double, "Sinh"),
        new JSMgr.MethodCallBackInfo(Math_Sqrt__Double, "Sqrt"),
        new JSMgr.MethodCallBackInfo(Math_Tan__Double, "Tan"),
        new JSMgr.MethodCallBackInfo(Math_Tanh__Double, "Tanh"),
        new JSMgr.MethodCallBackInfo(Math_Truncate__Double, "Truncate"),
        new JSMgr.MethodCallBackInfo(Math_Truncate__Decimal, "Truncate"),

    };
    JSMgr.allCallbackInfo.Add(ci);
}


}
