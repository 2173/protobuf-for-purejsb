
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by CSGenerator.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;

using jsval = JSApi.jsval;

public class JSB_UnityEngine_ParticleEmitter
{

////////////////////// ParticleEmitter ///////////////////////////////////////
// constructors

// fields

// properties
static void ParticleEmitter_emit(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.ParticleEmitter _this = (UnityEngine.ParticleEmitter)vc.csObj;
        var result = _this.emit;
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(result));
    }
    else
    { 
        System.Boolean arg0 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        UnityEngine.ParticleEmitter _this = (UnityEngine.ParticleEmitter)vc.csObj;
        _this.emit = arg0;
    }
}
static void ParticleEmitter_minSize(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.ParticleEmitter _this = (UnityEngine.ParticleEmitter)vc.csObj;
        var result = _this.minSize;
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(result));
    }
    else
    { 
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.ParticleEmitter _this = (UnityEngine.ParticleEmitter)vc.csObj;
        _this.minSize = arg0;
    }
}
static void ParticleEmitter_maxSize(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.ParticleEmitter _this = (UnityEngine.ParticleEmitter)vc.csObj;
        var result = _this.maxSize;
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(result));
    }
    else
    { 
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.ParticleEmitter _this = (UnityEngine.ParticleEmitter)vc.csObj;
        _this.maxSize = arg0;
    }
}
static void ParticleEmitter_minEnergy(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.ParticleEmitter _this = (UnityEngine.ParticleEmitter)vc.csObj;
        var result = _this.minEnergy;
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(result));
    }
    else
    { 
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.ParticleEmitter _this = (UnityEngine.ParticleEmitter)vc.csObj;
        _this.minEnergy = arg0;
    }
}
static void ParticleEmitter_maxEnergy(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.ParticleEmitter _this = (UnityEngine.ParticleEmitter)vc.csObj;
        var result = _this.maxEnergy;
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(result));
    }
    else
    { 
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.ParticleEmitter _this = (UnityEngine.ParticleEmitter)vc.csObj;
        _this.maxEnergy = arg0;
    }
}
static void ParticleEmitter_minEmission(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.ParticleEmitter _this = (UnityEngine.ParticleEmitter)vc.csObj;
        var result = _this.minEmission;
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(result));
    }
    else
    { 
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.ParticleEmitter _this = (UnityEngine.ParticleEmitter)vc.csObj;
        _this.minEmission = arg0;
    }
}
static void ParticleEmitter_maxEmission(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.ParticleEmitter _this = (UnityEngine.ParticleEmitter)vc.csObj;
        var result = _this.maxEmission;
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(result));
    }
    else
    { 
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.ParticleEmitter _this = (UnityEngine.ParticleEmitter)vc.csObj;
        _this.maxEmission = arg0;
    }
}
static void ParticleEmitter_emitterVelocityScale(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.ParticleEmitter _this = (UnityEngine.ParticleEmitter)vc.csObj;
        var result = _this.emitterVelocityScale;
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(result));
    }
    else
    { 
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.ParticleEmitter _this = (UnityEngine.ParticleEmitter)vc.csObj;
        _this.emitterVelocityScale = arg0;
    }
}
static void ParticleEmitter_worldVelocity(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.ParticleEmitter _this = (UnityEngine.ParticleEmitter)vc.csObj;
        var result = _this.worldVelocity;
                JSApi.setVector3S((int)JSApi.SetType.Rval, result);
    }
    else
    { 
        UnityEngine.Vector3 arg0 = (UnityEngine.Vector3)JSApi.getVector3S((int)JSApi.GetType.Arg);
        UnityEngine.ParticleEmitter _this = (UnityEngine.ParticleEmitter)vc.csObj;
        _this.worldVelocity = arg0;
    }
}
static void ParticleEmitter_localVelocity(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.ParticleEmitter _this = (UnityEngine.ParticleEmitter)vc.csObj;
        var result = _this.localVelocity;
                JSApi.setVector3S((int)JSApi.SetType.Rval, result);
    }
    else
    { 
        UnityEngine.Vector3 arg0 = (UnityEngine.Vector3)JSApi.getVector3S((int)JSApi.GetType.Arg);
        UnityEngine.ParticleEmitter _this = (UnityEngine.ParticleEmitter)vc.csObj;
        _this.localVelocity = arg0;
    }
}
static void ParticleEmitter_rndVelocity(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.ParticleEmitter _this = (UnityEngine.ParticleEmitter)vc.csObj;
        var result = _this.rndVelocity;
                JSApi.setVector3S((int)JSApi.SetType.Rval, result);
    }
    else
    { 
        UnityEngine.Vector3 arg0 = (UnityEngine.Vector3)JSApi.getVector3S((int)JSApi.GetType.Arg);
        UnityEngine.ParticleEmitter _this = (UnityEngine.ParticleEmitter)vc.csObj;
        _this.rndVelocity = arg0;
    }
}
static void ParticleEmitter_useWorldSpace(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.ParticleEmitter _this = (UnityEngine.ParticleEmitter)vc.csObj;
        var result = _this.useWorldSpace;
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(result));
    }
    else
    { 
        System.Boolean arg0 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        UnityEngine.ParticleEmitter _this = (UnityEngine.ParticleEmitter)vc.csObj;
        _this.useWorldSpace = arg0;
    }
}
static void ParticleEmitter_rndRotation(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.ParticleEmitter _this = (UnityEngine.ParticleEmitter)vc.csObj;
        var result = _this.rndRotation;
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(result));
    }
    else
    { 
        System.Boolean arg0 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        UnityEngine.ParticleEmitter _this = (UnityEngine.ParticleEmitter)vc.csObj;
        _this.rndRotation = arg0;
    }
}
static void ParticleEmitter_angularVelocity(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.ParticleEmitter _this = (UnityEngine.ParticleEmitter)vc.csObj;
        var result = _this.angularVelocity;
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(result));
    }
    else
    { 
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.ParticleEmitter _this = (UnityEngine.ParticleEmitter)vc.csObj;
        _this.angularVelocity = arg0;
    }
}
static void ParticleEmitter_rndAngularVelocity(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.ParticleEmitter _this = (UnityEngine.ParticleEmitter)vc.csObj;
        var result = _this.rndAngularVelocity;
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(result));
    }
    else
    { 
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.ParticleEmitter _this = (UnityEngine.ParticleEmitter)vc.csObj;
        _this.rndAngularVelocity = arg0;
    }
}
static void ParticleEmitter_particles(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.ParticleEmitter _this = (UnityEngine.ParticleEmitter)vc.csObj;
        var result = _this.particles;
                var arrRet = result;
        for (int i = 0; arrRet != null && i < arrRet.Length; i++)
        {
            JSMgr.datax.setObject((int)JSApi.SetType.SaveAndTempTrace, arrRet[i]);
            JSApi.moveSaveID2Arr(i);
        }
        JSApi.setArrayS((int)JSApi.SetType.Rval, (arrRet != null ? arrRet.Length : 0), true);
    }
    else
    { 
        UnityEngine.Particle[] arg0 = JSDataExchangeMgr.GetJSArg<UnityEngine.Particle[]>(() =>
        {
            int jsObjID = JSApi.getObject((int)JSApi.GetType.Arg);
            int length = JSApi.getArrayLength(jsObjID);
            var ret = new UnityEngine.Particle[length];
            for (var i = 0; i < length; i++) {
                JSApi.getElement(jsObjID, i);
                ret[i] = (UnityEngine.Particle)JSMgr.datax.getObject((int)JSApi.GetType.SaveAndRemove);
            }
            return ret;
        });
        UnityEngine.ParticleEmitter _this = (UnityEngine.ParticleEmitter)vc.csObj;
        _this.particles = arg0;
    }
}
static void ParticleEmitter_particleCount(JSVCall vc)
{
        UnityEngine.ParticleEmitter _this = (UnityEngine.ParticleEmitter)vc.csObj;
        var result = _this.particleCount;
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(result));
}
static void ParticleEmitter_enabled(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.ParticleEmitter _this = (UnityEngine.ParticleEmitter)vc.csObj;
        var result = _this.enabled;
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(result));
    }
    else
    { 
        System.Boolean arg0 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        UnityEngine.ParticleEmitter _this = (UnityEngine.ParticleEmitter)vc.csObj;
        _this.enabled = arg0;
    }
}

// methods

static bool ParticleEmitter_ClearParticles(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
        ((UnityEngine.ParticleEmitter)vc.csObj).ClearParticles();
    }

    return true;
}

static bool ParticleEmitter_Emit__Vector3__Vector3__Single__Single__Color__Single__Single(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 7) 
    {
        UnityEngine.Vector3 arg0 = (UnityEngine.Vector3)JSApi.getVector3S((int)JSApi.GetType.Arg);
        UnityEngine.Vector3 arg1 = (UnityEngine.Vector3)JSApi.getVector3S((int)JSApi.GetType.Arg);
        System.Single arg2 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        System.Single arg3 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.Color arg4 = (UnityEngine.Color)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        System.Single arg5 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        System.Single arg6 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        ((UnityEngine.ParticleEmitter)vc.csObj).Emit(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
    }

    return true;
}

static bool ParticleEmitter_Emit__Vector3__Vector3__Single__Single__Color(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 5) 
    {
        UnityEngine.Vector3 arg0 = (UnityEngine.Vector3)JSApi.getVector3S((int)JSApi.GetType.Arg);
        UnityEngine.Vector3 arg1 = (UnityEngine.Vector3)JSApi.getVector3S((int)JSApi.GetType.Arg);
        System.Single arg2 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        System.Single arg3 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.Color arg4 = (UnityEngine.Color)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        ((UnityEngine.ParticleEmitter)vc.csObj).Emit(arg0, arg1, arg2, arg3, arg4);
    }

    return true;
}

static bool ParticleEmitter_Emit__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        ((UnityEngine.ParticleEmitter)vc.csObj).Emit(arg0);
    }

    return true;
}

static bool ParticleEmitter_Emit(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
        ((UnityEngine.ParticleEmitter)vc.csObj).Emit();
    }

    return true;
}

static bool ParticleEmitter_Simulate__Single(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        ((UnityEngine.ParticleEmitter)vc.csObj).Simulate(arg0);
    }

    return true;
}


//register

public static void __Register()
{
    JSMgr.CallbackInfo ci = new JSMgr.CallbackInfo();
    ci.type = typeof(UnityEngine.ParticleEmitter);
    ci.fields = new JSMgr.CSCallbackField[]
    {

    };
    ci.properties = new JSMgr.CSCallbackProperty[]
    {
        ParticleEmitter_emit,
        ParticleEmitter_minSize,
        ParticleEmitter_maxSize,
        ParticleEmitter_minEnergy,
        ParticleEmitter_maxEnergy,
        ParticleEmitter_minEmission,
        ParticleEmitter_maxEmission,
        ParticleEmitter_emitterVelocityScale,
        ParticleEmitter_worldVelocity,
        ParticleEmitter_localVelocity,
        ParticleEmitter_rndVelocity,
        ParticleEmitter_useWorldSpace,
        ParticleEmitter_rndRotation,
        ParticleEmitter_angularVelocity,
        ParticleEmitter_rndAngularVelocity,
        ParticleEmitter_particles,
        ParticleEmitter_particleCount,
        ParticleEmitter_enabled,

    };
    ci.constructors = new JSMgr.MethodCallBackInfo[]
    {

    };
    ci.methods = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(ParticleEmitter_ClearParticles, "ClearParticles"),
        new JSMgr.MethodCallBackInfo(ParticleEmitter_Emit__Vector3__Vector3__Single__Single__Color__Single__Single, "Emit"),
        new JSMgr.MethodCallBackInfo(ParticleEmitter_Emit__Vector3__Vector3__Single__Single__Color, "Emit"),
        new JSMgr.MethodCallBackInfo(ParticleEmitter_Emit__Int32, "Emit"),
        new JSMgr.MethodCallBackInfo(ParticleEmitter_Emit, "Emit"),
        new JSMgr.MethodCallBackInfo(ParticleEmitter_Simulate__Single, "Simulate"),

    };
    JSMgr.allCallbackInfo.Add(ci);
}


}
