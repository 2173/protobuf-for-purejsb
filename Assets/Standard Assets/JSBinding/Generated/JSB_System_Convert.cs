
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by CSGenerator.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;

using jsval = JSApi.jsval;

public class JSB_System_Convert
{

////////////////////// Convert ///////////////////////////////////////
// constructors

// fields
static void Convert_DBNull(JSVCall vc)
{
        var result = System.Convert.DBNull;
                JSMgr.datax.setWhatever((int)JSApi.SetType.Rval, result);
}

// properties

// methods

static bool Convert_ChangeType__Object__Type__IFormatProvider(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 3) 
    {
        System.Object arg0 = (System.Object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        System.Type arg1 = (System.Type)JSDataExchangeMgr.GetTypeByJsParam((int)JSApi.GetType.Arg);
        System.IFormatProvider arg2 = (System.IFormatProvider)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSMgr.datax.setWhatever((int)JSApi.SetType.Rval, System.Convert.ChangeType(arg0, arg1, arg2));
    }

    return true;
}

static bool Convert_ChangeType__Object__TypeCode__IFormatProvider(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 3) 
    {
        System.Object arg0 = (System.Object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        System.TypeCode arg1 = (System.TypeCode)JSApi.getEnum((int)JSApi.GetType.Arg);
        System.IFormatProvider arg2 = (System.IFormatProvider)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSMgr.datax.setWhatever((int)JSApi.SetType.Rval, System.Convert.ChangeType(arg0, arg1, arg2));
    }

    return true;
}

static bool Convert_ChangeType__Object__Type(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Object arg0 = (System.Object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        System.Type arg1 = (System.Type)JSDataExchangeMgr.GetTypeByJsParam((int)JSApi.GetType.Arg);
                JSMgr.datax.setWhatever((int)JSApi.SetType.Rval, System.Convert.ChangeType(arg0, arg1));
    }

    return true;
}

static bool Convert_ChangeType__Object__TypeCode(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Object arg0 = (System.Object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        System.TypeCode arg1 = (System.TypeCode)JSApi.getEnum((int)JSApi.GetType.Arg);
                JSMgr.datax.setWhatever((int)JSApi.SetType.Rval, System.Convert.ChangeType(arg0, arg1));
    }

    return true;
}

static bool Convert_FromBase64CharArray__Char_Array__Int32__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 3) 
    {
        System.Char[] arg0 = JSDataExchangeMgr.GetJSArg<System.Char[]>(() =>
        {
            int jsObjID = JSApi.getObject((int)JSApi.GetType.Arg);
            int length = JSApi.getArrayLength(jsObjID);
            var ret = new System.Char[length];
            for (var i = 0; i < length; i++) {
                JSApi.getElement(jsObjID, i);
                ret[i] = (System.Char)JSApi.getChar((int)JSApi.GetType.SaveAndRemove);
            }
            return ret;
        });
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg2 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                var arrRet = System.Convert.FromBase64CharArray(arg0, arg1, arg2);
        for (int i = 0; arrRet != null && i < arrRet.Length; i++)
        {
            JSApi.setByte((int)JSApi.SetType.SaveAndTempTrace, arrRet[i]);
            JSApi.moveSaveID2Arr(i);
        }
        JSApi.setArrayS((int)JSApi.SetType.Rval, (arrRet != null ? arrRet.Length : 0), true);
    }

    return true;
}

static bool Convert_FromBase64String__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
                var arrRet = System.Convert.FromBase64String(arg0);
        for (int i = 0; arrRet != null && i < arrRet.Length; i++)
        {
            JSApi.setByte((int)JSApi.SetType.SaveAndTempTrace, arrRet[i]);
            JSApi.moveSaveID2Arr(i);
        }
        JSApi.setArrayS((int)JSApi.SetType.Rval, (arrRet != null ? arrRet.Length : 0), true);
    }

    return true;
}

static bool Convert_GetTypeCode__Object(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Object arg0 = (System.Object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
                JSApi.setEnum((int)JSApi.SetType.Rval, (int)System.Convert.GetTypeCode(arg0));
    }

    return true;
}

static bool Convert_IsDBNull__Object(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Object arg0 = (System.Object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(System.Convert.IsDBNull(arg0)));
    }

    return true;
}

static bool Convert_ToBase64CharArray__Byte_Array__Int32__Int32__Char_Array__Int32__Base64FormattingOptions(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 6) 
    {
        System.Byte[] arg0 = JSDataExchangeMgr.GetJSArg<System.Byte[]>(() =>
        {
            int jsObjID = JSApi.getObject((int)JSApi.GetType.Arg);
            int length = JSApi.getArrayLength(jsObjID);
            var ret = new System.Byte[length];
            for (var i = 0; i < length; i++) {
                JSApi.getElement(jsObjID, i);
                ret[i] = (System.Byte)JSApi.getByte((int)JSApi.GetType.SaveAndRemove);
            }
            return ret;
        });
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg2 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Char[] arg3 = JSDataExchangeMgr.GetJSArg<System.Char[]>(() =>
        {
            int jsObjID = JSApi.getObject((int)JSApi.GetType.Arg);
            int length = JSApi.getArrayLength(jsObjID);
            var ret = new System.Char[length];
            for (var i = 0; i < length; i++) {
                JSApi.getElement(jsObjID, i);
                ret[i] = (System.Char)JSApi.getChar((int)JSApi.GetType.SaveAndRemove);
            }
            return ret;
        });
        System.Int32 arg4 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Base64FormattingOptions arg5 = (System.Base64FormattingOptions)JSApi.getEnum((int)JSApi.GetType.Arg);
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(System.Convert.ToBase64CharArray(arg0, arg1, arg2, arg3, arg4, arg5)));
    }

    return true;
}

static bool Convert_ToBase64CharArray__Byte_Array__Int32__Int32__Char_Array__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 5) 
    {
        System.Byte[] arg0 = JSDataExchangeMgr.GetJSArg<System.Byte[]>(() =>
        {
            int jsObjID = JSApi.getObject((int)JSApi.GetType.Arg);
            int length = JSApi.getArrayLength(jsObjID);
            var ret = new System.Byte[length];
            for (var i = 0; i < length; i++) {
                JSApi.getElement(jsObjID, i);
                ret[i] = (System.Byte)JSApi.getByte((int)JSApi.GetType.SaveAndRemove);
            }
            return ret;
        });
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg2 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Char[] arg3 = JSDataExchangeMgr.GetJSArg<System.Char[]>(() =>
        {
            int jsObjID = JSApi.getObject((int)JSApi.GetType.Arg);
            int length = JSApi.getArrayLength(jsObjID);
            var ret = new System.Char[length];
            for (var i = 0; i < length; i++) {
                JSApi.getElement(jsObjID, i);
                ret[i] = (System.Char)JSApi.getChar((int)JSApi.GetType.SaveAndRemove);
            }
            return ret;
        });
        System.Int32 arg4 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(System.Convert.ToBase64CharArray(arg0, arg1, arg2, arg3, arg4)));
    }

    return true;
}

static bool Convert_ToBase64String__Byte_Array__Int32__Int32__Base64FormattingOptions(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 4) 
    {
        System.Byte[] arg0 = JSDataExchangeMgr.GetJSArg<System.Byte[]>(() =>
        {
            int jsObjID = JSApi.getObject((int)JSApi.GetType.Arg);
            int length = JSApi.getArrayLength(jsObjID);
            var ret = new System.Byte[length];
            for (var i = 0; i < length; i++) {
                JSApi.getElement(jsObjID, i);
                ret[i] = (System.Byte)JSApi.getByte((int)JSApi.GetType.SaveAndRemove);
            }
            return ret;
        });
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg2 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Base64FormattingOptions arg3 = (System.Base64FormattingOptions)JSApi.getEnum((int)JSApi.GetType.Arg);
                JSApi.setStringS((int)JSApi.SetType.Rval, System.Convert.ToBase64String(arg0, arg1, arg2, arg3));
    }

    return true;
}

static bool Convert_ToBase64String__Byte_Array__Int32__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 3) 
    {
        System.Byte[] arg0 = JSDataExchangeMgr.GetJSArg<System.Byte[]>(() =>
        {
            int jsObjID = JSApi.getObject((int)JSApi.GetType.Arg);
            int length = JSApi.getArrayLength(jsObjID);
            var ret = new System.Byte[length];
            for (var i = 0; i < length; i++) {
                JSApi.getElement(jsObjID, i);
                ret[i] = (System.Byte)JSApi.getByte((int)JSApi.GetType.SaveAndRemove);
            }
            return ret;
        });
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg2 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                JSApi.setStringS((int)JSApi.SetType.Rval, System.Convert.ToBase64String(arg0, arg1, arg2));
    }

    return true;
}

static bool Convert_ToBase64String__Byte_Array__Base64FormattingOptions(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Byte[] arg0 = JSDataExchangeMgr.GetJSArg<System.Byte[]>(() =>
        {
            int jsObjID = JSApi.getObject((int)JSApi.GetType.Arg);
            int length = JSApi.getArrayLength(jsObjID);
            var ret = new System.Byte[length];
            for (var i = 0; i < length; i++) {
                JSApi.getElement(jsObjID, i);
                ret[i] = (System.Byte)JSApi.getByte((int)JSApi.GetType.SaveAndRemove);
            }
            return ret;
        });
        System.Base64FormattingOptions arg1 = (System.Base64FormattingOptions)JSApi.getEnum((int)JSApi.GetType.Arg);
                JSApi.setStringS((int)JSApi.SetType.Rval, System.Convert.ToBase64String(arg0, arg1));
    }

    return true;
}

static bool Convert_ToBase64String__Byte_Array(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Byte[] arg0 = JSDataExchangeMgr.GetJSArg<System.Byte[]>(() =>
        {
            int jsObjID = JSApi.getObject((int)JSApi.GetType.Arg);
            int length = JSApi.getArrayLength(jsObjID);
            var ret = new System.Byte[length];
            for (var i = 0; i < length; i++) {
                JSApi.getElement(jsObjID, i);
                ret[i] = (System.Byte)JSApi.getByte((int)JSApi.GetType.SaveAndRemove);
            }
            return ret;
        });
                JSApi.setStringS((int)JSApi.SetType.Rval, System.Convert.ToBase64String(arg0));
    }

    return true;
}

static bool Convert_ToBoolean__String__IFormatProvider(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.IFormatProvider arg1 = (System.IFormatProvider)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(System.Convert.ToBoolean(arg0, arg1)));
    }

    return true;
}

static bool Convert_ToBoolean__Object__IFormatProvider(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Object arg0 = (System.Object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        System.IFormatProvider arg1 = (System.IFormatProvider)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(System.Convert.ToBoolean(arg0, arg1)));
    }

    return true;
}

static bool Convert_ToBoolean__UInt32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.UInt32 arg0 = (System.UInt32)JSApi.getUInt32((int)JSApi.GetType.Arg);
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(System.Convert.ToBoolean(arg0)));
    }

    return true;
}

static bool Convert_ToBoolean__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(System.Convert.ToBoolean(arg0)));
    }

    return true;
}

static bool Convert_ToBoolean__Object(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Object arg0 = (System.Object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(System.Convert.ToBoolean(arg0)));
    }

    return true;
}

static bool Convert_ToBoolean__UInt16(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.UInt16 arg0 = (System.UInt16)JSApi.getUInt16((int)JSApi.GetType.Arg);
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(System.Convert.ToBoolean(arg0)));
    }

    return true;
}

static bool Convert_ToBoolean__UInt64(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.UInt64 arg0 = (System.UInt64)JSApi.getUInt64((int)JSApi.GetType.Arg);
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(System.Convert.ToBoolean(arg0)));
    }

    return true;
}

static bool Convert_ToBoolean__DateTime(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.DateTime arg0 = (System.DateTime)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(System.Convert.ToBoolean(arg0)));
    }

    return true;
}

static bool Convert_ToBoolean__Decimal(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Decimal arg0 = (System.Decimal)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(System.Convert.ToBoolean(arg0)));
    }

    return true;
}

static bool Convert_ToBoolean__Char(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Char arg0 = (System.Char)JSApi.getChar((int)JSApi.GetType.Arg);
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(System.Convert.ToBoolean(arg0)));
    }

    return true;
}

static bool Convert_ToBoolean__Boolean(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Boolean arg0 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(System.Convert.ToBoolean(arg0)));
    }

    return true;
}

static bool Convert_ToBoolean__Byte(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Byte arg0 = (System.Byte)JSApi.getByte((int)JSApi.GetType.Arg);
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(System.Convert.ToBoolean(arg0)));
    }

    return true;
}

static bool Convert_ToBoolean__Double(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Double arg0 = (System.Double)JSApi.getDouble((int)JSApi.GetType.Arg);
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(System.Convert.ToBoolean(arg0)));
    }

    return true;
}

static bool Convert_ToBoolean__SByte(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.SByte arg0 = (System.SByte)JSApi.getSByte((int)JSApi.GetType.Arg);
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(System.Convert.ToBoolean(arg0)));
    }

    return true;
}

static bool Convert_ToBoolean__Int16(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int16 arg0 = (System.Int16)JSApi.getInt16((int)JSApi.GetType.Arg);
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(System.Convert.ToBoolean(arg0)));
    }

    return true;
}

static bool Convert_ToBoolean__Int64(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int64 arg0 = (System.Int64)JSApi.getInt64((int)JSApi.GetType.Arg);
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(System.Convert.ToBoolean(arg0)));
    }

    return true;
}

static bool Convert_ToBoolean__Single(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(System.Convert.ToBoolean(arg0)));
    }

    return true;
}

static bool Convert_ToBoolean__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(System.Convert.ToBoolean(arg0)));
    }

    return true;
}

static bool Convert_ToByte__String__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                JSApi.setByte((int)JSApi.SetType.Rval, (System.Byte)(System.Convert.ToByte(arg0, arg1)));
    }

    return true;
}

static bool Convert_ToByte__String__IFormatProvider(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.IFormatProvider arg1 = (System.IFormatProvider)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setByte((int)JSApi.SetType.Rval, (System.Byte)(System.Convert.ToByte(arg0, arg1)));
    }

    return true;
}

static bool Convert_ToByte__Object__IFormatProvider(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Object arg0 = (System.Object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        System.IFormatProvider arg1 = (System.IFormatProvider)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setByte((int)JSApi.SetType.Rval, (System.Byte)(System.Convert.ToByte(arg0, arg1)));
    }

    return true;
}

static bool Convert_ToByte__Object(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Object arg0 = (System.Object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
                JSApi.setByte((int)JSApi.SetType.Rval, (System.Byte)(System.Convert.ToByte(arg0)));
    }

    return true;
}

static bool Convert_ToByte__UInt32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.UInt32 arg0 = (System.UInt32)JSApi.getUInt32((int)JSApi.GetType.Arg);
                JSApi.setByte((int)JSApi.SetType.Rval, (System.Byte)(System.Convert.ToByte(arg0)));
    }

    return true;
}

static bool Convert_ToByte__UInt16(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.UInt16 arg0 = (System.UInt16)JSApi.getUInt16((int)JSApi.GetType.Arg);
                JSApi.setByte((int)JSApi.SetType.Rval, (System.Byte)(System.Convert.ToByte(arg0)));
    }

    return true;
}

static bool Convert_ToByte__UInt64(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.UInt64 arg0 = (System.UInt64)JSApi.getUInt64((int)JSApi.GetType.Arg);
                JSApi.setByte((int)JSApi.SetType.Rval, (System.Byte)(System.Convert.ToByte(arg0)));
    }

    return true;
}

static bool Convert_ToByte__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
                JSApi.setByte((int)JSApi.SetType.Rval, (System.Byte)(System.Convert.ToByte(arg0)));
    }

    return true;
}

static bool Convert_ToByte__Boolean(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Boolean arg0 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
                JSApi.setByte((int)JSApi.SetType.Rval, (System.Byte)(System.Convert.ToByte(arg0)));
    }

    return true;
}

static bool Convert_ToByte__Decimal(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Decimal arg0 = (System.Decimal)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setByte((int)JSApi.SetType.Rval, (System.Byte)(System.Convert.ToByte(arg0)));
    }

    return true;
}

static bool Convert_ToByte__Byte(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Byte arg0 = (System.Byte)JSApi.getByte((int)JSApi.GetType.Arg);
                JSApi.setByte((int)JSApi.SetType.Rval, (System.Byte)(System.Convert.ToByte(arg0)));
    }

    return true;
}

static bool Convert_ToByte__DateTime(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.DateTime arg0 = (System.DateTime)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setByte((int)JSApi.SetType.Rval, (System.Byte)(System.Convert.ToByte(arg0)));
    }

    return true;
}

static bool Convert_ToByte__Char(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Char arg0 = (System.Char)JSApi.getChar((int)JSApi.GetType.Arg);
                JSApi.setByte((int)JSApi.SetType.Rval, (System.Byte)(System.Convert.ToByte(arg0)));
    }

    return true;
}

static bool Convert_ToByte__Double(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Double arg0 = (System.Double)JSApi.getDouble((int)JSApi.GetType.Arg);
                JSApi.setByte((int)JSApi.SetType.Rval, (System.Byte)(System.Convert.ToByte(arg0)));
    }

    return true;
}

static bool Convert_ToByte__SByte(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.SByte arg0 = (System.SByte)JSApi.getSByte((int)JSApi.GetType.Arg);
                JSApi.setByte((int)JSApi.SetType.Rval, (System.Byte)(System.Convert.ToByte(arg0)));
    }

    return true;
}

static bool Convert_ToByte__Int16(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int16 arg0 = (System.Int16)JSApi.getInt16((int)JSApi.GetType.Arg);
                JSApi.setByte((int)JSApi.SetType.Rval, (System.Byte)(System.Convert.ToByte(arg0)));
    }

    return true;
}

static bool Convert_ToByte__Int64(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int64 arg0 = (System.Int64)JSApi.getInt64((int)JSApi.GetType.Arg);
                JSApi.setByte((int)JSApi.SetType.Rval, (System.Byte)(System.Convert.ToByte(arg0)));
    }

    return true;
}

static bool Convert_ToByte__Single(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
                JSApi.setByte((int)JSApi.SetType.Rval, (System.Byte)(System.Convert.ToByte(arg0)));
    }

    return true;
}

static bool Convert_ToByte__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                JSApi.setByte((int)JSApi.SetType.Rval, (System.Byte)(System.Convert.ToByte(arg0)));
    }

    return true;
}

static bool Convert_ToChar__String__IFormatProvider(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.IFormatProvider arg1 = (System.IFormatProvider)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setChar((int)JSApi.SetType.Rval, (System.Char)(System.Convert.ToChar(arg0, arg1)));
    }

    return true;
}

static bool Convert_ToChar__Object__IFormatProvider(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Object arg0 = (System.Object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        System.IFormatProvider arg1 = (System.IFormatProvider)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setChar((int)JSApi.SetType.Rval, (System.Char)(System.Convert.ToChar(arg0, arg1)));
    }

    return true;
}

static bool Convert_ToChar__UInt32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.UInt32 arg0 = (System.UInt32)JSApi.getUInt32((int)JSApi.GetType.Arg);
                JSApi.setChar((int)JSApi.SetType.Rval, (System.Char)(System.Convert.ToChar(arg0)));
    }

    return true;
}

static bool Convert_ToChar__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
                JSApi.setChar((int)JSApi.SetType.Rval, (System.Char)(System.Convert.ToChar(arg0)));
    }

    return true;
}

static bool Convert_ToChar__Object(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Object arg0 = (System.Object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
                JSApi.setChar((int)JSApi.SetType.Rval, (System.Char)(System.Convert.ToChar(arg0)));
    }

    return true;
}

static bool Convert_ToChar__UInt16(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.UInt16 arg0 = (System.UInt16)JSApi.getUInt16((int)JSApi.GetType.Arg);
                JSApi.setChar((int)JSApi.SetType.Rval, (System.Char)(System.Convert.ToChar(arg0)));
    }

    return true;
}

static bool Convert_ToChar__UInt64(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.UInt64 arg0 = (System.UInt64)JSApi.getUInt64((int)JSApi.GetType.Arg);
                JSApi.setChar((int)JSApi.SetType.Rval, (System.Char)(System.Convert.ToChar(arg0)));
    }

    return true;
}

static bool Convert_ToChar__DateTime(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.DateTime arg0 = (System.DateTime)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setChar((int)JSApi.SetType.Rval, (System.Char)(System.Convert.ToChar(arg0)));
    }

    return true;
}

static bool Convert_ToChar__Decimal(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Decimal arg0 = (System.Decimal)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setChar((int)JSApi.SetType.Rval, (System.Char)(System.Convert.ToChar(arg0)));
    }

    return true;
}

static bool Convert_ToChar__Char(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Char arg0 = (System.Char)JSApi.getChar((int)JSApi.GetType.Arg);
                JSApi.setChar((int)JSApi.SetType.Rval, (System.Char)(System.Convert.ToChar(arg0)));
    }

    return true;
}

static bool Convert_ToChar__Boolean(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Boolean arg0 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
                JSApi.setChar((int)JSApi.SetType.Rval, (System.Char)(System.Convert.ToChar(arg0)));
    }

    return true;
}

static bool Convert_ToChar__Byte(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Byte arg0 = (System.Byte)JSApi.getByte((int)JSApi.GetType.Arg);
                JSApi.setChar((int)JSApi.SetType.Rval, (System.Char)(System.Convert.ToChar(arg0)));
    }

    return true;
}

static bool Convert_ToChar__Double(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Double arg0 = (System.Double)JSApi.getDouble((int)JSApi.GetType.Arg);
                JSApi.setChar((int)JSApi.SetType.Rval, (System.Char)(System.Convert.ToChar(arg0)));
    }

    return true;
}

static bool Convert_ToChar__Single(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
                JSApi.setChar((int)JSApi.SetType.Rval, (System.Char)(System.Convert.ToChar(arg0)));
    }

    return true;
}

static bool Convert_ToChar__SByte(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.SByte arg0 = (System.SByte)JSApi.getSByte((int)JSApi.GetType.Arg);
                JSApi.setChar((int)JSApi.SetType.Rval, (System.Char)(System.Convert.ToChar(arg0)));
    }

    return true;
}

static bool Convert_ToChar__Int16(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int16 arg0 = (System.Int16)JSApi.getInt16((int)JSApi.GetType.Arg);
                JSApi.setChar((int)JSApi.SetType.Rval, (System.Char)(System.Convert.ToChar(arg0)));
    }

    return true;
}

static bool Convert_ToChar__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                JSApi.setChar((int)JSApi.SetType.Rval, (System.Char)(System.Convert.ToChar(arg0)));
    }

    return true;
}

static bool Convert_ToChar__Int64(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int64 arg0 = (System.Int64)JSApi.getInt64((int)JSApi.GetType.Arg);
                JSApi.setChar((int)JSApi.SetType.Rval, (System.Char)(System.Convert.ToChar(arg0)));
    }

    return true;
}

static bool Convert_ToDateTime__Object__IFormatProvider(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Object arg0 = (System.Object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        System.IFormatProvider arg1 = (System.IFormatProvider)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.Convert.ToDateTime(arg0, arg1));
    }

    return true;
}

static bool Convert_ToDateTime__String__IFormatProvider(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.IFormatProvider arg1 = (System.IFormatProvider)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.Convert.ToDateTime(arg0, arg1));
    }

    return true;
}

static bool Convert_ToDateTime__SByte(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.SByte arg0 = (System.SByte)JSApi.getSByte((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.Convert.ToDateTime(arg0));
    }

    return true;
}

static bool Convert_ToDateTime__Object(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Object arg0 = (System.Object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.Convert.ToDateTime(arg0));
    }

    return true;
}

static bool Convert_ToDateTime__UInt64(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.UInt64 arg0 = (System.UInt64)JSApi.getUInt64((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.Convert.ToDateTime(arg0));
    }

    return true;
}

static bool Convert_ToDateTime__UInt32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.UInt32 arg0 = (System.UInt32)JSApi.getUInt32((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.Convert.ToDateTime(arg0));
    }

    return true;
}

static bool Convert_ToDateTime__UInt16(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.UInt16 arg0 = (System.UInt16)JSApi.getUInt16((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.Convert.ToDateTime(arg0));
    }

    return true;
}

static bool Convert_ToDateTime__Single(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.Convert.ToDateTime(arg0));
    }

    return true;
}

static bool Convert_ToDateTime__Char(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Char arg0 = (System.Char)JSApi.getChar((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.Convert.ToDateTime(arg0));
    }

    return true;
}

static bool Convert_ToDateTime__DateTime(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.DateTime arg0 = (System.DateTime)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.Convert.ToDateTime(arg0));
    }

    return true;
}

static bool Convert_ToDateTime__Byte(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Byte arg0 = (System.Byte)JSApi.getByte((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.Convert.ToDateTime(arg0));
    }

    return true;
}

static bool Convert_ToDateTime__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.Convert.ToDateTime(arg0));
    }

    return true;
}

static bool Convert_ToDateTime__Boolean(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Boolean arg0 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.Convert.ToDateTime(arg0));
    }

    return true;
}

static bool Convert_ToDateTime__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.Convert.ToDateTime(arg0));
    }

    return true;
}

static bool Convert_ToDateTime__Int64(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int64 arg0 = (System.Int64)JSApi.getInt64((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.Convert.ToDateTime(arg0));
    }

    return true;
}

static bool Convert_ToDateTime__Int16(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int16 arg0 = (System.Int16)JSApi.getInt16((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.Convert.ToDateTime(arg0));
    }

    return true;
}

static bool Convert_ToDateTime__Decimal(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Decimal arg0 = (System.Decimal)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.Convert.ToDateTime(arg0));
    }

    return true;
}

static bool Convert_ToDateTime__Double(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Double arg0 = (System.Double)JSApi.getDouble((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.Convert.ToDateTime(arg0));
    }

    return true;
}

static bool Convert_ToDecimal__String__IFormatProvider(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.IFormatProvider arg1 = (System.IFormatProvider)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.Convert.ToDecimal(arg0, arg1));
    }

    return true;
}

static bool Convert_ToDecimal__Object__IFormatProvider(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Object arg0 = (System.Object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        System.IFormatProvider arg1 = (System.IFormatProvider)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.Convert.ToDecimal(arg0, arg1));
    }

    return true;
}

static bool Convert_ToDecimal__UInt32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.UInt32 arg0 = (System.UInt32)JSApi.getUInt32((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.Convert.ToDecimal(arg0));
    }

    return true;
}

static bool Convert_ToDecimal__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.Convert.ToDecimal(arg0));
    }

    return true;
}

static bool Convert_ToDecimal__Object(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Object arg0 = (System.Object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.Convert.ToDecimal(arg0));
    }

    return true;
}

static bool Convert_ToDecimal__UInt16(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.UInt16 arg0 = (System.UInt16)JSApi.getUInt16((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.Convert.ToDecimal(arg0));
    }

    return true;
}

static bool Convert_ToDecimal__UInt64(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.UInt64 arg0 = (System.UInt64)JSApi.getUInt64((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.Convert.ToDecimal(arg0));
    }

    return true;
}

static bool Convert_ToDecimal__DateTime(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.DateTime arg0 = (System.DateTime)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.Convert.ToDecimal(arg0));
    }

    return true;
}

static bool Convert_ToDecimal__Decimal(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Decimal arg0 = (System.Decimal)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.Convert.ToDecimal(arg0));
    }

    return true;
}

static bool Convert_ToDecimal__Char(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Char arg0 = (System.Char)JSApi.getChar((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.Convert.ToDecimal(arg0));
    }

    return true;
}

static bool Convert_ToDecimal__Boolean(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Boolean arg0 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.Convert.ToDecimal(arg0));
    }

    return true;
}

static bool Convert_ToDecimal__Byte(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Byte arg0 = (System.Byte)JSApi.getByte((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.Convert.ToDecimal(arg0));
    }

    return true;
}

static bool Convert_ToDecimal__Double(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Double arg0 = (System.Double)JSApi.getDouble((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.Convert.ToDecimal(arg0));
    }

    return true;
}

static bool Convert_ToDecimal__SByte(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.SByte arg0 = (System.SByte)JSApi.getSByte((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.Convert.ToDecimal(arg0));
    }

    return true;
}

static bool Convert_ToDecimal__Int16(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int16 arg0 = (System.Int16)JSApi.getInt16((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.Convert.ToDecimal(arg0));
    }

    return true;
}

static bool Convert_ToDecimal__Int64(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int64 arg0 = (System.Int64)JSApi.getInt64((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.Convert.ToDecimal(arg0));
    }

    return true;
}

static bool Convert_ToDecimal__Single(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.Convert.ToDecimal(arg0));
    }

    return true;
}

static bool Convert_ToDecimal__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.Convert.ToDecimal(arg0));
    }

    return true;
}

static bool Convert_ToDouble__String__IFormatProvider(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.IFormatProvider arg1 = (System.IFormatProvider)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setDouble((int)JSApi.SetType.Rval, (System.Double)(System.Convert.ToDouble(arg0, arg1)));
    }

    return true;
}

static bool Convert_ToDouble__Object__IFormatProvider(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Object arg0 = (System.Object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        System.IFormatProvider arg1 = (System.IFormatProvider)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setDouble((int)JSApi.SetType.Rval, (System.Double)(System.Convert.ToDouble(arg0, arg1)));
    }

    return true;
}

static bool Convert_ToDouble__UInt32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.UInt32 arg0 = (System.UInt32)JSApi.getUInt32((int)JSApi.GetType.Arg);
                JSApi.setDouble((int)JSApi.SetType.Rval, (System.Double)(System.Convert.ToDouble(arg0)));
    }

    return true;
}

static bool Convert_ToDouble__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
                JSApi.setDouble((int)JSApi.SetType.Rval, (System.Double)(System.Convert.ToDouble(arg0)));
    }

    return true;
}

static bool Convert_ToDouble__Object(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Object arg0 = (System.Object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
                JSApi.setDouble((int)JSApi.SetType.Rval, (System.Double)(System.Convert.ToDouble(arg0)));
    }

    return true;
}

static bool Convert_ToDouble__UInt16(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.UInt16 arg0 = (System.UInt16)JSApi.getUInt16((int)JSApi.GetType.Arg);
                JSApi.setDouble((int)JSApi.SetType.Rval, (System.Double)(System.Convert.ToDouble(arg0)));
    }

    return true;
}

static bool Convert_ToDouble__UInt64(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.UInt64 arg0 = (System.UInt64)JSApi.getUInt64((int)JSApi.GetType.Arg);
                JSApi.setDouble((int)JSApi.SetType.Rval, (System.Double)(System.Convert.ToDouble(arg0)));
    }

    return true;
}

static bool Convert_ToDouble__Boolean(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Boolean arg0 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
                JSApi.setDouble((int)JSApi.SetType.Rval, (System.Double)(System.Convert.ToDouble(arg0)));
    }

    return true;
}

static bool Convert_ToDouble__Decimal(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Decimal arg0 = (System.Decimal)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setDouble((int)JSApi.SetType.Rval, (System.Double)(System.Convert.ToDouble(arg0)));
    }

    return true;
}

static bool Convert_ToDouble__Byte(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Byte arg0 = (System.Byte)JSApi.getByte((int)JSApi.GetType.Arg);
                JSApi.setDouble((int)JSApi.SetType.Rval, (System.Double)(System.Convert.ToDouble(arg0)));
    }

    return true;
}

static bool Convert_ToDouble__DateTime(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.DateTime arg0 = (System.DateTime)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setDouble((int)JSApi.SetType.Rval, (System.Double)(System.Convert.ToDouble(arg0)));
    }

    return true;
}

static bool Convert_ToDouble__Char(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Char arg0 = (System.Char)JSApi.getChar((int)JSApi.GetType.Arg);
                JSApi.setDouble((int)JSApi.SetType.Rval, (System.Double)(System.Convert.ToDouble(arg0)));
    }

    return true;
}

static bool Convert_ToDouble__Double(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Double arg0 = (System.Double)JSApi.getDouble((int)JSApi.GetType.Arg);
                JSApi.setDouble((int)JSApi.SetType.Rval, (System.Double)(System.Convert.ToDouble(arg0)));
    }

    return true;
}

static bool Convert_ToDouble__SByte(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.SByte arg0 = (System.SByte)JSApi.getSByte((int)JSApi.GetType.Arg);
                JSApi.setDouble((int)JSApi.SetType.Rval, (System.Double)(System.Convert.ToDouble(arg0)));
    }

    return true;
}

static bool Convert_ToDouble__Int16(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int16 arg0 = (System.Int16)JSApi.getInt16((int)JSApi.GetType.Arg);
                JSApi.setDouble((int)JSApi.SetType.Rval, (System.Double)(System.Convert.ToDouble(arg0)));
    }

    return true;
}

static bool Convert_ToDouble__Int64(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int64 arg0 = (System.Int64)JSApi.getInt64((int)JSApi.GetType.Arg);
                JSApi.setDouble((int)JSApi.SetType.Rval, (System.Double)(System.Convert.ToDouble(arg0)));
    }

    return true;
}

static bool Convert_ToDouble__Single(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
                JSApi.setDouble((int)JSApi.SetType.Rval, (System.Double)(System.Convert.ToDouble(arg0)));
    }

    return true;
}

static bool Convert_ToDouble__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                JSApi.setDouble((int)JSApi.SetType.Rval, (System.Double)(System.Convert.ToDouble(arg0)));
    }

    return true;
}

static bool Convert_ToInt16__String__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                JSApi.setInt16((int)JSApi.SetType.Rval, (System.Int16)(System.Convert.ToInt16(arg0, arg1)));
    }

    return true;
}

static bool Convert_ToInt16__String__IFormatProvider(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.IFormatProvider arg1 = (System.IFormatProvider)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setInt16((int)JSApi.SetType.Rval, (System.Int16)(System.Convert.ToInt16(arg0, arg1)));
    }

    return true;
}

static bool Convert_ToInt16__Object__IFormatProvider(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Object arg0 = (System.Object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        System.IFormatProvider arg1 = (System.IFormatProvider)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setInt16((int)JSApi.SetType.Rval, (System.Int16)(System.Convert.ToInt16(arg0, arg1)));
    }

    return true;
}

static bool Convert_ToInt16__Object(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Object arg0 = (System.Object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
                JSApi.setInt16((int)JSApi.SetType.Rval, (System.Int16)(System.Convert.ToInt16(arg0)));
    }

    return true;
}

static bool Convert_ToInt16__UInt32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.UInt32 arg0 = (System.UInt32)JSApi.getUInt32((int)JSApi.GetType.Arg);
                JSApi.setInt16((int)JSApi.SetType.Rval, (System.Int16)(System.Convert.ToInt16(arg0)));
    }

    return true;
}

static bool Convert_ToInt16__UInt16(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.UInt16 arg0 = (System.UInt16)JSApi.getUInt16((int)JSApi.GetType.Arg);
                JSApi.setInt16((int)JSApi.SetType.Rval, (System.Int16)(System.Convert.ToInt16(arg0)));
    }

    return true;
}

static bool Convert_ToInt16__UInt64(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.UInt64 arg0 = (System.UInt64)JSApi.getUInt64((int)JSApi.GetType.Arg);
                JSApi.setInt16((int)JSApi.SetType.Rval, (System.Int16)(System.Convert.ToInt16(arg0)));
    }

    return true;
}

static bool Convert_ToInt16__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
                JSApi.setInt16((int)JSApi.SetType.Rval, (System.Int16)(System.Convert.ToInt16(arg0)));
    }

    return true;
}

static bool Convert_ToInt16__DateTime(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.DateTime arg0 = (System.DateTime)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setInt16((int)JSApi.SetType.Rval, (System.Int16)(System.Convert.ToInt16(arg0)));
    }

    return true;
}

static bool Convert_ToInt16__Decimal(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Decimal arg0 = (System.Decimal)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setInt16((int)JSApi.SetType.Rval, (System.Int16)(System.Convert.ToInt16(arg0)));
    }

    return true;
}

static bool Convert_ToInt16__Char(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Char arg0 = (System.Char)JSApi.getChar((int)JSApi.GetType.Arg);
                JSApi.setInt16((int)JSApi.SetType.Rval, (System.Int16)(System.Convert.ToInt16(arg0)));
    }

    return true;
}

static bool Convert_ToInt16__Boolean(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Boolean arg0 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
                JSApi.setInt16((int)JSApi.SetType.Rval, (System.Int16)(System.Convert.ToInt16(arg0)));
    }

    return true;
}

static bool Convert_ToInt16__Byte(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Byte arg0 = (System.Byte)JSApi.getByte((int)JSApi.GetType.Arg);
                JSApi.setInt16((int)JSApi.SetType.Rval, (System.Int16)(System.Convert.ToInt16(arg0)));
    }

    return true;
}

static bool Convert_ToInt16__Double(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Double arg0 = (System.Double)JSApi.getDouble((int)JSApi.GetType.Arg);
                JSApi.setInt16((int)JSApi.SetType.Rval, (System.Int16)(System.Convert.ToInt16(arg0)));
    }

    return true;
}

static bool Convert_ToInt16__SByte(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.SByte arg0 = (System.SByte)JSApi.getSByte((int)JSApi.GetType.Arg);
                JSApi.setInt16((int)JSApi.SetType.Rval, (System.Int16)(System.Convert.ToInt16(arg0)));
    }

    return true;
}

static bool Convert_ToInt16__Int16(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int16 arg0 = (System.Int16)JSApi.getInt16((int)JSApi.GetType.Arg);
                JSApi.setInt16((int)JSApi.SetType.Rval, (System.Int16)(System.Convert.ToInt16(arg0)));
    }

    return true;
}

static bool Convert_ToInt16__Int64(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int64 arg0 = (System.Int64)JSApi.getInt64((int)JSApi.GetType.Arg);
                JSApi.setInt16((int)JSApi.SetType.Rval, (System.Int16)(System.Convert.ToInt16(arg0)));
    }

    return true;
}

static bool Convert_ToInt16__Single(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
                JSApi.setInt16((int)JSApi.SetType.Rval, (System.Int16)(System.Convert.ToInt16(arg0)));
    }

    return true;
}

static bool Convert_ToInt16__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                JSApi.setInt16((int)JSApi.SetType.Rval, (System.Int16)(System.Convert.ToInt16(arg0)));
    }

    return true;
}

static bool Convert_ToInt32__String__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(System.Convert.ToInt32(arg0, arg1)));
    }

    return true;
}

static bool Convert_ToInt32__String__IFormatProvider(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.IFormatProvider arg1 = (System.IFormatProvider)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(System.Convert.ToInt32(arg0, arg1)));
    }

    return true;
}

static bool Convert_ToInt32__Object__IFormatProvider(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Object arg0 = (System.Object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        System.IFormatProvider arg1 = (System.IFormatProvider)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(System.Convert.ToInt32(arg0, arg1)));
    }

    return true;
}

static bool Convert_ToInt32__Object(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Object arg0 = (System.Object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(System.Convert.ToInt32(arg0)));
    }

    return true;
}

static bool Convert_ToInt32__UInt32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.UInt32 arg0 = (System.UInt32)JSApi.getUInt32((int)JSApi.GetType.Arg);
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(System.Convert.ToInt32(arg0)));
    }

    return true;
}

static bool Convert_ToInt32__UInt16(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.UInt16 arg0 = (System.UInt16)JSApi.getUInt16((int)JSApi.GetType.Arg);
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(System.Convert.ToInt32(arg0)));
    }

    return true;
}

static bool Convert_ToInt32__UInt64(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.UInt64 arg0 = (System.UInt64)JSApi.getUInt64((int)JSApi.GetType.Arg);
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(System.Convert.ToInt32(arg0)));
    }

    return true;
}

static bool Convert_ToInt32__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(System.Convert.ToInt32(arg0)));
    }

    return true;
}

static bool Convert_ToInt32__Boolean(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Boolean arg0 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(System.Convert.ToInt32(arg0)));
    }

    return true;
}

static bool Convert_ToInt32__Decimal(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Decimal arg0 = (System.Decimal)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(System.Convert.ToInt32(arg0)));
    }

    return true;
}

static bool Convert_ToInt32__Byte(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Byte arg0 = (System.Byte)JSApi.getByte((int)JSApi.GetType.Arg);
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(System.Convert.ToInt32(arg0)));
    }

    return true;
}

static bool Convert_ToInt32__DateTime(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.DateTime arg0 = (System.DateTime)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(System.Convert.ToInt32(arg0)));
    }

    return true;
}

static bool Convert_ToInt32__Char(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Char arg0 = (System.Char)JSApi.getChar((int)JSApi.GetType.Arg);
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(System.Convert.ToInt32(arg0)));
    }

    return true;
}

static bool Convert_ToInt32__Double(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Double arg0 = (System.Double)JSApi.getDouble((int)JSApi.GetType.Arg);
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(System.Convert.ToInt32(arg0)));
    }

    return true;
}

static bool Convert_ToInt32__SByte(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.SByte arg0 = (System.SByte)JSApi.getSByte((int)JSApi.GetType.Arg);
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(System.Convert.ToInt32(arg0)));
    }

    return true;
}

static bool Convert_ToInt32__Int16(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int16 arg0 = (System.Int16)JSApi.getInt16((int)JSApi.GetType.Arg);
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(System.Convert.ToInt32(arg0)));
    }

    return true;
}

static bool Convert_ToInt32__Int64(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int64 arg0 = (System.Int64)JSApi.getInt64((int)JSApi.GetType.Arg);
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(System.Convert.ToInt32(arg0)));
    }

    return true;
}

static bool Convert_ToInt32__Single(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(System.Convert.ToInt32(arg0)));
    }

    return true;
}

static bool Convert_ToInt32__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(System.Convert.ToInt32(arg0)));
    }

    return true;
}

static bool Convert_ToInt64__String__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                JSApi.setInt64((int)JSApi.SetType.Rval, (System.Int64)(System.Convert.ToInt64(arg0, arg1)));
    }

    return true;
}

static bool Convert_ToInt64__String__IFormatProvider(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.IFormatProvider arg1 = (System.IFormatProvider)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setInt64((int)JSApi.SetType.Rval, (System.Int64)(System.Convert.ToInt64(arg0, arg1)));
    }

    return true;
}

static bool Convert_ToInt64__Object__IFormatProvider(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Object arg0 = (System.Object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        System.IFormatProvider arg1 = (System.IFormatProvider)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setInt64((int)JSApi.SetType.Rval, (System.Int64)(System.Convert.ToInt64(arg0, arg1)));
    }

    return true;
}

static bool Convert_ToInt64__Object(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Object arg0 = (System.Object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
                JSApi.setInt64((int)JSApi.SetType.Rval, (System.Int64)(System.Convert.ToInt64(arg0)));
    }

    return true;
}

static bool Convert_ToInt64__UInt32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.UInt32 arg0 = (System.UInt32)JSApi.getUInt32((int)JSApi.GetType.Arg);
                JSApi.setInt64((int)JSApi.SetType.Rval, (System.Int64)(System.Convert.ToInt64(arg0)));
    }

    return true;
}

static bool Convert_ToInt64__UInt16(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.UInt16 arg0 = (System.UInt16)JSApi.getUInt16((int)JSApi.GetType.Arg);
                JSApi.setInt64((int)JSApi.SetType.Rval, (System.Int64)(System.Convert.ToInt64(arg0)));
    }

    return true;
}

static bool Convert_ToInt64__UInt64(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.UInt64 arg0 = (System.UInt64)JSApi.getUInt64((int)JSApi.GetType.Arg);
                JSApi.setInt64((int)JSApi.SetType.Rval, (System.Int64)(System.Convert.ToInt64(arg0)));
    }

    return true;
}

static bool Convert_ToInt64__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
                JSApi.setInt64((int)JSApi.SetType.Rval, (System.Int64)(System.Convert.ToInt64(arg0)));
    }

    return true;
}

static bool Convert_ToInt64__DateTime(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.DateTime arg0 = (System.DateTime)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setInt64((int)JSApi.SetType.Rval, (System.Int64)(System.Convert.ToInt64(arg0)));
    }

    return true;
}

static bool Convert_ToInt64__Decimal(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Decimal arg0 = (System.Decimal)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setInt64((int)JSApi.SetType.Rval, (System.Int64)(System.Convert.ToInt64(arg0)));
    }

    return true;
}

static bool Convert_ToInt64__Char(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Char arg0 = (System.Char)JSApi.getChar((int)JSApi.GetType.Arg);
                JSApi.setInt64((int)JSApi.SetType.Rval, (System.Int64)(System.Convert.ToInt64(arg0)));
    }

    return true;
}

static bool Convert_ToInt64__Boolean(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Boolean arg0 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
                JSApi.setInt64((int)JSApi.SetType.Rval, (System.Int64)(System.Convert.ToInt64(arg0)));
    }

    return true;
}

static bool Convert_ToInt64__Byte(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Byte arg0 = (System.Byte)JSApi.getByte((int)JSApi.GetType.Arg);
                JSApi.setInt64((int)JSApi.SetType.Rval, (System.Int64)(System.Convert.ToInt64(arg0)));
    }

    return true;
}

static bool Convert_ToInt64__Double(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Double arg0 = (System.Double)JSApi.getDouble((int)JSApi.GetType.Arg);
                JSApi.setInt64((int)JSApi.SetType.Rval, (System.Int64)(System.Convert.ToInt64(arg0)));
    }

    return true;
}

static bool Convert_ToInt64__SByte(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.SByte arg0 = (System.SByte)JSApi.getSByte((int)JSApi.GetType.Arg);
                JSApi.setInt64((int)JSApi.SetType.Rval, (System.Int64)(System.Convert.ToInt64(arg0)));
    }

    return true;
}

static bool Convert_ToInt64__Int16(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int16 arg0 = (System.Int16)JSApi.getInt16((int)JSApi.GetType.Arg);
                JSApi.setInt64((int)JSApi.SetType.Rval, (System.Int64)(System.Convert.ToInt64(arg0)));
    }

    return true;
}

static bool Convert_ToInt64__Int64(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int64 arg0 = (System.Int64)JSApi.getInt64((int)JSApi.GetType.Arg);
                JSApi.setInt64((int)JSApi.SetType.Rval, (System.Int64)(System.Convert.ToInt64(arg0)));
    }

    return true;
}

static bool Convert_ToInt64__Single(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
                JSApi.setInt64((int)JSApi.SetType.Rval, (System.Int64)(System.Convert.ToInt64(arg0)));
    }

    return true;
}

static bool Convert_ToInt64__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                JSApi.setInt64((int)JSApi.SetType.Rval, (System.Int64)(System.Convert.ToInt64(arg0)));
    }

    return true;
}

static bool Convert_ToSByte__String__IFormatProvider(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.IFormatProvider arg1 = (System.IFormatProvider)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setSByte((int)JSApi.SetType.Rval, (System.SByte)(System.Convert.ToSByte(arg0, arg1)));
    }

    return true;
}

static bool Convert_ToSByte__String__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                JSApi.setSByte((int)JSApi.SetType.Rval, (System.SByte)(System.Convert.ToSByte(arg0, arg1)));
    }

    return true;
}

static bool Convert_ToSByte__Object__IFormatProvider(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Object arg0 = (System.Object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        System.IFormatProvider arg1 = (System.IFormatProvider)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setSByte((int)JSApi.SetType.Rval, (System.SByte)(System.Convert.ToSByte(arg0, arg1)));
    }

    return true;
}

static bool Convert_ToSByte__Object(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Object arg0 = (System.Object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
                JSApi.setSByte((int)JSApi.SetType.Rval, (System.SByte)(System.Convert.ToSByte(arg0)));
    }

    return true;
}

static bool Convert_ToSByte__Decimal(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Decimal arg0 = (System.Decimal)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setSByte((int)JSApi.SetType.Rval, (System.SByte)(System.Convert.ToSByte(arg0)));
    }

    return true;
}

static bool Convert_ToSByte__UInt64(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.UInt64 arg0 = (System.UInt64)JSApi.getUInt64((int)JSApi.GetType.Arg);
                JSApi.setSByte((int)JSApi.SetType.Rval, (System.SByte)(System.Convert.ToSByte(arg0)));
    }

    return true;
}

static bool Convert_ToSByte__UInt16(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.UInt16 arg0 = (System.UInt16)JSApi.getUInt16((int)JSApi.GetType.Arg);
                JSApi.setSByte((int)JSApi.SetType.Rval, (System.SByte)(System.Convert.ToSByte(arg0)));
    }

    return true;
}

static bool Convert_ToSByte__Char(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Char arg0 = (System.Char)JSApi.getChar((int)JSApi.GetType.Arg);
                JSApi.setSByte((int)JSApi.SetType.Rval, (System.SByte)(System.Convert.ToSByte(arg0)));
    }

    return true;
}

static bool Convert_ToSByte__DateTime(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.DateTime arg0 = (System.DateTime)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setSByte((int)JSApi.SetType.Rval, (System.SByte)(System.Convert.ToSByte(arg0)));
    }

    return true;
}

static bool Convert_ToSByte__Boolean(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Boolean arg0 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
                JSApi.setSByte((int)JSApi.SetType.Rval, (System.SByte)(System.Convert.ToSByte(arg0)));
    }

    return true;
}

static bool Convert_ToSByte__Byte(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Byte arg0 = (System.Byte)JSApi.getByte((int)JSApi.GetType.Arg);
                JSApi.setSByte((int)JSApi.SetType.Rval, (System.SByte)(System.Convert.ToSByte(arg0)));
    }

    return true;
}

static bool Convert_ToSByte__SByte(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.SByte arg0 = (System.SByte)JSApi.getSByte((int)JSApi.GetType.Arg);
                JSApi.setSByte((int)JSApi.SetType.Rval, (System.SByte)(System.Convert.ToSByte(arg0)));
    }

    return true;
}

static bool Convert_ToSByte__Int16(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int16 arg0 = (System.Int16)JSApi.getInt16((int)JSApi.GetType.Arg);
                JSApi.setSByte((int)JSApi.SetType.Rval, (System.SByte)(System.Convert.ToSByte(arg0)));
    }

    return true;
}

static bool Convert_ToSByte__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                JSApi.setSByte((int)JSApi.SetType.Rval, (System.SByte)(System.Convert.ToSByte(arg0)));
    }

    return true;
}

static bool Convert_ToSByte__Int64(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int64 arg0 = (System.Int64)JSApi.getInt64((int)JSApi.GetType.Arg);
                JSApi.setSByte((int)JSApi.SetType.Rval, (System.SByte)(System.Convert.ToSByte(arg0)));
    }

    return true;
}

static bool Convert_ToSByte__Double(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Double arg0 = (System.Double)JSApi.getDouble((int)JSApi.GetType.Arg);
                JSApi.setSByte((int)JSApi.SetType.Rval, (System.SByte)(System.Convert.ToSByte(arg0)));
    }

    return true;
}

static bool Convert_ToSByte__UInt32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.UInt32 arg0 = (System.UInt32)JSApi.getUInt32((int)JSApi.GetType.Arg);
                JSApi.setSByte((int)JSApi.SetType.Rval, (System.SByte)(System.Convert.ToSByte(arg0)));
    }

    return true;
}

static bool Convert_ToSByte__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
                JSApi.setSByte((int)JSApi.SetType.Rval, (System.SByte)(System.Convert.ToSByte(arg0)));
    }

    return true;
}

static bool Convert_ToSByte__Single(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
                JSApi.setSByte((int)JSApi.SetType.Rval, (System.SByte)(System.Convert.ToSByte(arg0)));
    }

    return true;
}

static bool Convert_ToSingle__String__IFormatProvider(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.IFormatProvider arg1 = (System.IFormatProvider)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(System.Convert.ToSingle(arg0, arg1)));
    }

    return true;
}

static bool Convert_ToSingle__Object__IFormatProvider(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Object arg0 = (System.Object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        System.IFormatProvider arg1 = (System.IFormatProvider)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(System.Convert.ToSingle(arg0, arg1)));
    }

    return true;
}

static bool Convert_ToSingle__UInt32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.UInt32 arg0 = (System.UInt32)JSApi.getUInt32((int)JSApi.GetType.Arg);
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(System.Convert.ToSingle(arg0)));
    }

    return true;
}

static bool Convert_ToSingle__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(System.Convert.ToSingle(arg0)));
    }

    return true;
}

static bool Convert_ToSingle__Object(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Object arg0 = (System.Object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(System.Convert.ToSingle(arg0)));
    }

    return true;
}

static bool Convert_ToSingle__UInt16(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.UInt16 arg0 = (System.UInt16)JSApi.getUInt16((int)JSApi.GetType.Arg);
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(System.Convert.ToSingle(arg0)));
    }

    return true;
}

static bool Convert_ToSingle__UInt64(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.UInt64 arg0 = (System.UInt64)JSApi.getUInt64((int)JSApi.GetType.Arg);
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(System.Convert.ToSingle(arg0)));
    }

    return true;
}

static bool Convert_ToSingle__DateTime(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.DateTime arg0 = (System.DateTime)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(System.Convert.ToSingle(arg0)));
    }

    return true;
}

static bool Convert_ToSingle__Decimal(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Decimal arg0 = (System.Decimal)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(System.Convert.ToSingle(arg0)));
    }

    return true;
}

static bool Convert_ToSingle__Char(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Char arg0 = (System.Char)JSApi.getChar((int)JSApi.GetType.Arg);
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(System.Convert.ToSingle(arg0)));
    }

    return true;
}

static bool Convert_ToSingle__Boolean(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Boolean arg0 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(System.Convert.ToSingle(arg0)));
    }

    return true;
}

static bool Convert_ToSingle__Byte(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Byte arg0 = (System.Byte)JSApi.getByte((int)JSApi.GetType.Arg);
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(System.Convert.ToSingle(arg0)));
    }

    return true;
}

static bool Convert_ToSingle__Double(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Double arg0 = (System.Double)JSApi.getDouble((int)JSApi.GetType.Arg);
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(System.Convert.ToSingle(arg0)));
    }

    return true;
}

static bool Convert_ToSingle__SByte(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.SByte arg0 = (System.SByte)JSApi.getSByte((int)JSApi.GetType.Arg);
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(System.Convert.ToSingle(arg0)));
    }

    return true;
}

static bool Convert_ToSingle__Int16(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int16 arg0 = (System.Int16)JSApi.getInt16((int)JSApi.GetType.Arg);
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(System.Convert.ToSingle(arg0)));
    }

    return true;
}

static bool Convert_ToSingle__Int64(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int64 arg0 = (System.Int64)JSApi.getInt64((int)JSApi.GetType.Arg);
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(System.Convert.ToSingle(arg0)));
    }

    return true;
}

static bool Convert_ToSingle__Single(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(System.Convert.ToSingle(arg0)));
    }

    return true;
}

static bool Convert_ToSingle__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(System.Convert.ToSingle(arg0)));
    }

    return true;
}

static bool Convert_ToString__Int64__IFormatProvider(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Int64 arg0 = (System.Int64)JSApi.getInt64((int)JSApi.GetType.Arg);
        System.IFormatProvider arg1 = (System.IFormatProvider)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setStringS((int)JSApi.SetType.Rval, System.Convert.ToString(arg0, arg1));
    }

    return true;
}

static bool Convert_ToString__Object__IFormatProvider(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Object arg0 = (System.Object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        System.IFormatProvider arg1 = (System.IFormatProvider)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setStringS((int)JSApi.SetType.Rval, System.Convert.ToString(arg0, arg1));
    }

    return true;
}

static bool Convert_ToString__SByte__IFormatProvider(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.SByte arg0 = (System.SByte)JSApi.getSByte((int)JSApi.GetType.Arg);
        System.IFormatProvider arg1 = (System.IFormatProvider)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setStringS((int)JSApi.SetType.Rval, System.Convert.ToString(arg0, arg1));
    }

    return true;
}

static bool Convert_ToString__Int32__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                JSApi.setStringS((int)JSApi.SetType.Rval, System.Convert.ToString(arg0, arg1));
    }

    return true;
}

static bool Convert_ToString__Int32__IFormatProvider(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.IFormatProvider arg1 = (System.IFormatProvider)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setStringS((int)JSApi.SetType.Rval, System.Convert.ToString(arg0, arg1));
    }

    return true;
}

static bool Convert_ToString__Int64__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Int64 arg0 = (System.Int64)JSApi.getInt64((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                JSApi.setStringS((int)JSApi.SetType.Rval, System.Convert.ToString(arg0, arg1));
    }

    return true;
}

static bool Convert_ToString__UInt32__IFormatProvider(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.UInt32 arg0 = (System.UInt32)JSApi.getUInt32((int)JSApi.GetType.Arg);
        System.IFormatProvider arg1 = (System.IFormatProvider)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setStringS((int)JSApi.SetType.Rval, System.Convert.ToString(arg0, arg1));
    }

    return true;
}

static bool Convert_ToString__UInt64__IFormatProvider(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.UInt64 arg0 = (System.UInt64)JSApi.getUInt64((int)JSApi.GetType.Arg);
        System.IFormatProvider arg1 = (System.IFormatProvider)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setStringS((int)JSApi.SetType.Rval, System.Convert.ToString(arg0, arg1));
    }

    return true;
}

static bool Convert_ToString__UInt16__IFormatProvider(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.UInt16 arg0 = (System.UInt16)JSApi.getUInt16((int)JSApi.GetType.Arg);
        System.IFormatProvider arg1 = (System.IFormatProvider)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setStringS((int)JSApi.SetType.Rval, System.Convert.ToString(arg0, arg1));
    }

    return true;
}

static bool Convert_ToString__Int16__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Int16 arg0 = (System.Int16)JSApi.getInt16((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                JSApi.setStringS((int)JSApi.SetType.Rval, System.Convert.ToString(arg0, arg1));
    }

    return true;
}

static bool Convert_ToString__Int16__IFormatProvider(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Int16 arg0 = (System.Int16)JSApi.getInt16((int)JSApi.GetType.Arg);
        System.IFormatProvider arg1 = (System.IFormatProvider)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setStringS((int)JSApi.SetType.Rval, System.Convert.ToString(arg0, arg1));
    }

    return true;
}

static bool Convert_ToString__String__IFormatProvider(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.IFormatProvider arg1 = (System.IFormatProvider)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setStringS((int)JSApi.SetType.Rval, System.Convert.ToString(arg0, arg1));
    }

    return true;
}

static bool Convert_ToString__Char__IFormatProvider(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Char arg0 = (System.Char)JSApi.getChar((int)JSApi.GetType.Arg);
        System.IFormatProvider arg1 = (System.IFormatProvider)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setStringS((int)JSApi.SetType.Rval, System.Convert.ToString(arg0, arg1));
    }

    return true;
}

static bool Convert_ToString__DateTime__IFormatProvider(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.DateTime arg0 = (System.DateTime)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        System.IFormatProvider arg1 = (System.IFormatProvider)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setStringS((int)JSApi.SetType.Rval, System.Convert.ToString(arg0, arg1));
    }

    return true;
}

static bool Convert_ToString__Decimal__IFormatProvider(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Decimal arg0 = (System.Decimal)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        System.IFormatProvider arg1 = (System.IFormatProvider)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setStringS((int)JSApi.SetType.Rval, System.Convert.ToString(arg0, arg1));
    }

    return true;
}

static bool Convert_ToString__Boolean__IFormatProvider(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Boolean arg0 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        System.IFormatProvider arg1 = (System.IFormatProvider)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setStringS((int)JSApi.SetType.Rval, System.Convert.ToString(arg0, arg1));
    }

    return true;
}

static bool Convert_ToString__Byte__IFormatProvider(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Byte arg0 = (System.Byte)JSApi.getByte((int)JSApi.GetType.Arg);
        System.IFormatProvider arg1 = (System.IFormatProvider)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setStringS((int)JSApi.SetType.Rval, System.Convert.ToString(arg0, arg1));
    }

    return true;
}

static bool Convert_ToString__Byte__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Byte arg0 = (System.Byte)JSApi.getByte((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                JSApi.setStringS((int)JSApi.SetType.Rval, System.Convert.ToString(arg0, arg1));
    }

    return true;
}

static bool Convert_ToString__Single__IFormatProvider(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        System.IFormatProvider arg1 = (System.IFormatProvider)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setStringS((int)JSApi.SetType.Rval, System.Convert.ToString(arg0, arg1));
    }

    return true;
}

static bool Convert_ToString__Double__IFormatProvider(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Double arg0 = (System.Double)JSApi.getDouble((int)JSApi.GetType.Arg);
        System.IFormatProvider arg1 = (System.IFormatProvider)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setStringS((int)JSApi.SetType.Rval, System.Convert.ToString(arg0, arg1));
    }

    return true;
}

static bool Convert_ToString__UInt16(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.UInt16 arg0 = (System.UInt16)JSApi.getUInt16((int)JSApi.GetType.Arg);
                JSApi.setStringS((int)JSApi.SetType.Rval, System.Convert.ToString(arg0));
    }

    return true;
}

static bool Convert_ToString__UInt64(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.UInt64 arg0 = (System.UInt64)JSApi.getUInt64((int)JSApi.GetType.Arg);
                JSApi.setStringS((int)JSApi.SetType.Rval, System.Convert.ToString(arg0));
    }

    return true;
}

static bool Convert_ToString__Char(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Char arg0 = (System.Char)JSApi.getChar((int)JSApi.GetType.Arg);
                JSApi.setStringS((int)JSApi.SetType.Rval, System.Convert.ToString(arg0));
    }

    return true;
}

static bool Convert_ToString__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                JSApi.setStringS((int)JSApi.SetType.Rval, System.Convert.ToString(arg0));
    }

    return true;
}

static bool Convert_ToString__Boolean(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Boolean arg0 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
                JSApi.setStringS((int)JSApi.SetType.Rval, System.Convert.ToString(arg0));
    }

    return true;
}

static bool Convert_ToString__Int64(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int64 arg0 = (System.Int64)JSApi.getInt64((int)JSApi.GetType.Arg);
                JSApi.setStringS((int)JSApi.SetType.Rval, System.Convert.ToString(arg0));
    }

    return true;
}

static bool Convert_ToString__Byte(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Byte arg0 = (System.Byte)JSApi.getByte((int)JSApi.GetType.Arg);
                JSApi.setStringS((int)JSApi.SetType.Rval, System.Convert.ToString(arg0));
    }

    return true;
}

static bool Convert_ToString__Single(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
                JSApi.setStringS((int)JSApi.SetType.Rval, System.Convert.ToString(arg0));
    }

    return true;
}

static bool Convert_ToString__Object(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Object arg0 = (System.Object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
                JSApi.setStringS((int)JSApi.SetType.Rval, System.Convert.ToString(arg0));
    }

    return true;
}

static bool Convert_ToString__Int16(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int16 arg0 = (System.Int16)JSApi.getInt16((int)JSApi.GetType.Arg);
                JSApi.setStringS((int)JSApi.SetType.Rval, System.Convert.ToString(arg0));
    }

    return true;
}

static bool Convert_ToString__Double(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Double arg0 = (System.Double)JSApi.getDouble((int)JSApi.GetType.Arg);
                JSApi.setStringS((int)JSApi.SetType.Rval, System.Convert.ToString(arg0));
    }

    return true;
}

static bool Convert_ToString__SByte(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.SByte arg0 = (System.SByte)JSApi.getSByte((int)JSApi.GetType.Arg);
                JSApi.setStringS((int)JSApi.SetType.Rval, System.Convert.ToString(arg0));
    }

    return true;
}

static bool Convert_ToString__DateTime(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.DateTime arg0 = (System.DateTime)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setStringS((int)JSApi.SetType.Rval, System.Convert.ToString(arg0));
    }

    return true;
}

static bool Convert_ToString__UInt32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.UInt32 arg0 = (System.UInt32)JSApi.getUInt32((int)JSApi.GetType.Arg);
                JSApi.setStringS((int)JSApi.SetType.Rval, System.Convert.ToString(arg0));
    }

    return true;
}

static bool Convert_ToString__Decimal(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Decimal arg0 = (System.Decimal)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setStringS((int)JSApi.SetType.Rval, System.Convert.ToString(arg0));
    }

    return true;
}

static bool Convert_ToString__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
                JSApi.setStringS((int)JSApi.SetType.Rval, System.Convert.ToString(arg0));
    }

    return true;
}

static bool Convert_ToUInt16__String__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                JSApi.setUInt16((int)JSApi.SetType.Rval, (System.UInt16)(System.Convert.ToUInt16(arg0, arg1)));
    }

    return true;
}

static bool Convert_ToUInt16__String__IFormatProvider(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.IFormatProvider arg1 = (System.IFormatProvider)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setUInt16((int)JSApi.SetType.Rval, (System.UInt16)(System.Convert.ToUInt16(arg0, arg1)));
    }

    return true;
}

static bool Convert_ToUInt16__Object__IFormatProvider(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Object arg0 = (System.Object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        System.IFormatProvider arg1 = (System.IFormatProvider)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setUInt16((int)JSApi.SetType.Rval, (System.UInt16)(System.Convert.ToUInt16(arg0, arg1)));
    }

    return true;
}

static bool Convert_ToUInt16__UInt32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.UInt32 arg0 = (System.UInt32)JSApi.getUInt32((int)JSApi.GetType.Arg);
                JSApi.setUInt16((int)JSApi.SetType.Rval, (System.UInt16)(System.Convert.ToUInt16(arg0)));
    }

    return true;
}

static bool Convert_ToUInt16__Object(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Object arg0 = (System.Object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
                JSApi.setUInt16((int)JSApi.SetType.Rval, (System.UInt16)(System.Convert.ToUInt16(arg0)));
    }

    return true;
}

static bool Convert_ToUInt16__UInt16(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.UInt16 arg0 = (System.UInt16)JSApi.getUInt16((int)JSApi.GetType.Arg);
                JSApi.setUInt16((int)JSApi.SetType.Rval, (System.UInt16)(System.Convert.ToUInt16(arg0)));
    }

    return true;
}

static bool Convert_ToUInt16__UInt64(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.UInt64 arg0 = (System.UInt64)JSApi.getUInt64((int)JSApi.GetType.Arg);
                JSApi.setUInt16((int)JSApi.SetType.Rval, (System.UInt16)(System.Convert.ToUInt16(arg0)));
    }

    return true;
}

static bool Convert_ToUInt16__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
                JSApi.setUInt16((int)JSApi.SetType.Rval, (System.UInt16)(System.Convert.ToUInt16(arg0)));
    }

    return true;
}

static bool Convert_ToUInt16__DateTime(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.DateTime arg0 = (System.DateTime)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setUInt16((int)JSApi.SetType.Rval, (System.UInt16)(System.Convert.ToUInt16(arg0)));
    }

    return true;
}

static bool Convert_ToUInt16__Decimal(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Decimal arg0 = (System.Decimal)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setUInt16((int)JSApi.SetType.Rval, (System.UInt16)(System.Convert.ToUInt16(arg0)));
    }

    return true;
}

static bool Convert_ToUInt16__Char(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Char arg0 = (System.Char)JSApi.getChar((int)JSApi.GetType.Arg);
                JSApi.setUInt16((int)JSApi.SetType.Rval, (System.UInt16)(System.Convert.ToUInt16(arg0)));
    }

    return true;
}

static bool Convert_ToUInt16__Boolean(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Boolean arg0 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
                JSApi.setUInt16((int)JSApi.SetType.Rval, (System.UInt16)(System.Convert.ToUInt16(arg0)));
    }

    return true;
}

static bool Convert_ToUInt16__Byte(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Byte arg0 = (System.Byte)JSApi.getByte((int)JSApi.GetType.Arg);
                JSApi.setUInt16((int)JSApi.SetType.Rval, (System.UInt16)(System.Convert.ToUInt16(arg0)));
    }

    return true;
}

static bool Convert_ToUInt16__Double(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Double arg0 = (System.Double)JSApi.getDouble((int)JSApi.GetType.Arg);
                JSApi.setUInt16((int)JSApi.SetType.Rval, (System.UInt16)(System.Convert.ToUInt16(arg0)));
    }

    return true;
}

static bool Convert_ToUInt16__SByte(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.SByte arg0 = (System.SByte)JSApi.getSByte((int)JSApi.GetType.Arg);
                JSApi.setUInt16((int)JSApi.SetType.Rval, (System.UInt16)(System.Convert.ToUInt16(arg0)));
    }

    return true;
}

static bool Convert_ToUInt16__Int16(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int16 arg0 = (System.Int16)JSApi.getInt16((int)JSApi.GetType.Arg);
                JSApi.setUInt16((int)JSApi.SetType.Rval, (System.UInt16)(System.Convert.ToUInt16(arg0)));
    }

    return true;
}

static bool Convert_ToUInt16__Int64(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int64 arg0 = (System.Int64)JSApi.getInt64((int)JSApi.GetType.Arg);
                JSApi.setUInt16((int)JSApi.SetType.Rval, (System.UInt16)(System.Convert.ToUInt16(arg0)));
    }

    return true;
}

static bool Convert_ToUInt16__Single(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
                JSApi.setUInt16((int)JSApi.SetType.Rval, (System.UInt16)(System.Convert.ToUInt16(arg0)));
    }

    return true;
}

static bool Convert_ToUInt16__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                JSApi.setUInt16((int)JSApi.SetType.Rval, (System.UInt16)(System.Convert.ToUInt16(arg0)));
    }

    return true;
}

static bool Convert_ToUInt32__String__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                JSApi.setUInt32((int)JSApi.SetType.Rval, (System.UInt32)(System.Convert.ToUInt32(arg0, arg1)));
    }

    return true;
}

static bool Convert_ToUInt32__String__IFormatProvider(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.IFormatProvider arg1 = (System.IFormatProvider)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setUInt32((int)JSApi.SetType.Rval, (System.UInt32)(System.Convert.ToUInt32(arg0, arg1)));
    }

    return true;
}

static bool Convert_ToUInt32__Object__IFormatProvider(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Object arg0 = (System.Object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        System.IFormatProvider arg1 = (System.IFormatProvider)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setUInt32((int)JSApi.SetType.Rval, (System.UInt32)(System.Convert.ToUInt32(arg0, arg1)));
    }

    return true;
}

static bool Convert_ToUInt32__Object(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Object arg0 = (System.Object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
                JSApi.setUInt32((int)JSApi.SetType.Rval, (System.UInt32)(System.Convert.ToUInt32(arg0)));
    }

    return true;
}

static bool Convert_ToUInt32__UInt32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.UInt32 arg0 = (System.UInt32)JSApi.getUInt32((int)JSApi.GetType.Arg);
                JSApi.setUInt32((int)JSApi.SetType.Rval, (System.UInt32)(System.Convert.ToUInt32(arg0)));
    }

    return true;
}

static bool Convert_ToUInt32__UInt16(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.UInt16 arg0 = (System.UInt16)JSApi.getUInt16((int)JSApi.GetType.Arg);
                JSApi.setUInt32((int)JSApi.SetType.Rval, (System.UInt32)(System.Convert.ToUInt32(arg0)));
    }

    return true;
}

static bool Convert_ToUInt32__UInt64(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.UInt64 arg0 = (System.UInt64)JSApi.getUInt64((int)JSApi.GetType.Arg);
                JSApi.setUInt32((int)JSApi.SetType.Rval, (System.UInt32)(System.Convert.ToUInt32(arg0)));
    }

    return true;
}

static bool Convert_ToUInt32__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
                JSApi.setUInt32((int)JSApi.SetType.Rval, (System.UInt32)(System.Convert.ToUInt32(arg0)));
    }

    return true;
}

static bool Convert_ToUInt32__Boolean(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Boolean arg0 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
                JSApi.setUInt32((int)JSApi.SetType.Rval, (System.UInt32)(System.Convert.ToUInt32(arg0)));
    }

    return true;
}

static bool Convert_ToUInt32__Decimal(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Decimal arg0 = (System.Decimal)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setUInt32((int)JSApi.SetType.Rval, (System.UInt32)(System.Convert.ToUInt32(arg0)));
    }

    return true;
}

static bool Convert_ToUInt32__Byte(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Byte arg0 = (System.Byte)JSApi.getByte((int)JSApi.GetType.Arg);
                JSApi.setUInt32((int)JSApi.SetType.Rval, (System.UInt32)(System.Convert.ToUInt32(arg0)));
    }

    return true;
}

static bool Convert_ToUInt32__DateTime(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.DateTime arg0 = (System.DateTime)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setUInt32((int)JSApi.SetType.Rval, (System.UInt32)(System.Convert.ToUInt32(arg0)));
    }

    return true;
}

static bool Convert_ToUInt32__Char(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Char arg0 = (System.Char)JSApi.getChar((int)JSApi.GetType.Arg);
                JSApi.setUInt32((int)JSApi.SetType.Rval, (System.UInt32)(System.Convert.ToUInt32(arg0)));
    }

    return true;
}

static bool Convert_ToUInt32__Double(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Double arg0 = (System.Double)JSApi.getDouble((int)JSApi.GetType.Arg);
                JSApi.setUInt32((int)JSApi.SetType.Rval, (System.UInt32)(System.Convert.ToUInt32(arg0)));
    }

    return true;
}

static bool Convert_ToUInt32__SByte(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.SByte arg0 = (System.SByte)JSApi.getSByte((int)JSApi.GetType.Arg);
                JSApi.setUInt32((int)JSApi.SetType.Rval, (System.UInt32)(System.Convert.ToUInt32(arg0)));
    }

    return true;
}

static bool Convert_ToUInt32__Int16(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int16 arg0 = (System.Int16)JSApi.getInt16((int)JSApi.GetType.Arg);
                JSApi.setUInt32((int)JSApi.SetType.Rval, (System.UInt32)(System.Convert.ToUInt32(arg0)));
    }

    return true;
}

static bool Convert_ToUInt32__Int64(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int64 arg0 = (System.Int64)JSApi.getInt64((int)JSApi.GetType.Arg);
                JSApi.setUInt32((int)JSApi.SetType.Rval, (System.UInt32)(System.Convert.ToUInt32(arg0)));
    }

    return true;
}

static bool Convert_ToUInt32__Single(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
                JSApi.setUInt32((int)JSApi.SetType.Rval, (System.UInt32)(System.Convert.ToUInt32(arg0)));
    }

    return true;
}

static bool Convert_ToUInt32__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                JSApi.setUInt32((int)JSApi.SetType.Rval, (System.UInt32)(System.Convert.ToUInt32(arg0)));
    }

    return true;
}

static bool Convert_ToUInt64__String__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                JSApi.setUInt64((int)JSApi.SetType.Rval, (System.UInt64)(System.Convert.ToUInt64(arg0, arg1)));
    }

    return true;
}

static bool Convert_ToUInt64__String__IFormatProvider(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.IFormatProvider arg1 = (System.IFormatProvider)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setUInt64((int)JSApi.SetType.Rval, (System.UInt64)(System.Convert.ToUInt64(arg0, arg1)));
    }

    return true;
}

static bool Convert_ToUInt64__Object__IFormatProvider(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Object arg0 = (System.Object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        System.IFormatProvider arg1 = (System.IFormatProvider)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setUInt64((int)JSApi.SetType.Rval, (System.UInt64)(System.Convert.ToUInt64(arg0, arg1)));
    }

    return true;
}

static bool Convert_ToUInt64__Object(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Object arg0 = (System.Object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
                JSApi.setUInt64((int)JSApi.SetType.Rval, (System.UInt64)(System.Convert.ToUInt64(arg0)));
    }

    return true;
}

static bool Convert_ToUInt64__UInt32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.UInt32 arg0 = (System.UInt32)JSApi.getUInt32((int)JSApi.GetType.Arg);
                JSApi.setUInt64((int)JSApi.SetType.Rval, (System.UInt64)(System.Convert.ToUInt64(arg0)));
    }

    return true;
}

static bool Convert_ToUInt64__UInt16(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.UInt16 arg0 = (System.UInt16)JSApi.getUInt16((int)JSApi.GetType.Arg);
                JSApi.setUInt64((int)JSApi.SetType.Rval, (System.UInt64)(System.Convert.ToUInt64(arg0)));
    }

    return true;
}

static bool Convert_ToUInt64__UInt64(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.UInt64 arg0 = (System.UInt64)JSApi.getUInt64((int)JSApi.GetType.Arg);
                JSApi.setUInt64((int)JSApi.SetType.Rval, (System.UInt64)(System.Convert.ToUInt64(arg0)));
    }

    return true;
}

static bool Convert_ToUInt64__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
                JSApi.setUInt64((int)JSApi.SetType.Rval, (System.UInt64)(System.Convert.ToUInt64(arg0)));
    }

    return true;
}

static bool Convert_ToUInt64__DateTime(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.DateTime arg0 = (System.DateTime)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setUInt64((int)JSApi.SetType.Rval, (System.UInt64)(System.Convert.ToUInt64(arg0)));
    }

    return true;
}

static bool Convert_ToUInt64__Decimal(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Decimal arg0 = (System.Decimal)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setUInt64((int)JSApi.SetType.Rval, (System.UInt64)(System.Convert.ToUInt64(arg0)));
    }

    return true;
}

static bool Convert_ToUInt64__Char(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Char arg0 = (System.Char)JSApi.getChar((int)JSApi.GetType.Arg);
                JSApi.setUInt64((int)JSApi.SetType.Rval, (System.UInt64)(System.Convert.ToUInt64(arg0)));
    }

    return true;
}

static bool Convert_ToUInt64__Boolean(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Boolean arg0 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
                JSApi.setUInt64((int)JSApi.SetType.Rval, (System.UInt64)(System.Convert.ToUInt64(arg0)));
    }

    return true;
}

static bool Convert_ToUInt64__Byte(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Byte arg0 = (System.Byte)JSApi.getByte((int)JSApi.GetType.Arg);
                JSApi.setUInt64((int)JSApi.SetType.Rval, (System.UInt64)(System.Convert.ToUInt64(arg0)));
    }

    return true;
}

static bool Convert_ToUInt64__Double(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Double arg0 = (System.Double)JSApi.getDouble((int)JSApi.GetType.Arg);
                JSApi.setUInt64((int)JSApi.SetType.Rval, (System.UInt64)(System.Convert.ToUInt64(arg0)));
    }

    return true;
}

static bool Convert_ToUInt64__SByte(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.SByte arg0 = (System.SByte)JSApi.getSByte((int)JSApi.GetType.Arg);
                JSApi.setUInt64((int)JSApi.SetType.Rval, (System.UInt64)(System.Convert.ToUInt64(arg0)));
    }

    return true;
}

static bool Convert_ToUInt64__Int16(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int16 arg0 = (System.Int16)JSApi.getInt16((int)JSApi.GetType.Arg);
                JSApi.setUInt64((int)JSApi.SetType.Rval, (System.UInt64)(System.Convert.ToUInt64(arg0)));
    }

    return true;
}

static bool Convert_ToUInt64__Int64(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int64 arg0 = (System.Int64)JSApi.getInt64((int)JSApi.GetType.Arg);
                JSApi.setUInt64((int)JSApi.SetType.Rval, (System.UInt64)(System.Convert.ToUInt64(arg0)));
    }

    return true;
}

static bool Convert_ToUInt64__Single(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
                JSApi.setUInt64((int)JSApi.SetType.Rval, (System.UInt64)(System.Convert.ToUInt64(arg0)));
    }

    return true;
}

static bool Convert_ToUInt64__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                JSApi.setUInt64((int)JSApi.SetType.Rval, (System.UInt64)(System.Convert.ToUInt64(arg0)));
    }

    return true;
}


//register

public static void __Register()
{
    JSMgr.CallbackInfo ci = new JSMgr.CallbackInfo();
    ci.type = typeof(System.Convert);
    ci.fields = new JSMgr.CSCallbackField[]
    {
        Convert_DBNull,

    };
    ci.properties = new JSMgr.CSCallbackProperty[]
    {

    };
    ci.constructors = new JSMgr.MethodCallBackInfo[]
    {

    };
    ci.methods = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(Convert_ChangeType__Object__Type__IFormatProvider, "ChangeType"),
        new JSMgr.MethodCallBackInfo(Convert_ChangeType__Object__TypeCode__IFormatProvider, "ChangeType"),
        new JSMgr.MethodCallBackInfo(Convert_ChangeType__Object__Type, "ChangeType"),
        new JSMgr.MethodCallBackInfo(Convert_ChangeType__Object__TypeCode, "ChangeType"),
        new JSMgr.MethodCallBackInfo(Convert_FromBase64CharArray__Char_Array__Int32__Int32, "FromBase64CharArray"),
        new JSMgr.MethodCallBackInfo(Convert_FromBase64String__String, "FromBase64String"),
        new JSMgr.MethodCallBackInfo(Convert_GetTypeCode__Object, "GetTypeCode"),
        new JSMgr.MethodCallBackInfo(Convert_IsDBNull__Object, "IsDBNull"),
        new JSMgr.MethodCallBackInfo(Convert_ToBase64CharArray__Byte_Array__Int32__Int32__Char_Array__Int32__Base64FormattingOptions, "ToBase64CharArray"),
        new JSMgr.MethodCallBackInfo(Convert_ToBase64CharArray__Byte_Array__Int32__Int32__Char_Array__Int32, "ToBase64CharArray"),
        new JSMgr.MethodCallBackInfo(Convert_ToBase64String__Byte_Array__Int32__Int32__Base64FormattingOptions, "ToBase64String"),
        new JSMgr.MethodCallBackInfo(Convert_ToBase64String__Byte_Array__Int32__Int32, "ToBase64String"),
        new JSMgr.MethodCallBackInfo(Convert_ToBase64String__Byte_Array__Base64FormattingOptions, "ToBase64String"),
        new JSMgr.MethodCallBackInfo(Convert_ToBase64String__Byte_Array, "ToBase64String"),
        new JSMgr.MethodCallBackInfo(Convert_ToBoolean__String__IFormatProvider, "ToBoolean"),
        new JSMgr.MethodCallBackInfo(Convert_ToBoolean__Object__IFormatProvider, "ToBoolean"),
        new JSMgr.MethodCallBackInfo(Convert_ToBoolean__UInt32, "ToBoolean"),
        new JSMgr.MethodCallBackInfo(Convert_ToBoolean__String, "ToBoolean"),
        new JSMgr.MethodCallBackInfo(Convert_ToBoolean__Object, "ToBoolean"),
        new JSMgr.MethodCallBackInfo(Convert_ToBoolean__UInt16, "ToBoolean"),
        new JSMgr.MethodCallBackInfo(Convert_ToBoolean__UInt64, "ToBoolean"),
        new JSMgr.MethodCallBackInfo(Convert_ToBoolean__DateTime, "ToBoolean"),
        new JSMgr.MethodCallBackInfo(Convert_ToBoolean__Decimal, "ToBoolean"),
        new JSMgr.MethodCallBackInfo(Convert_ToBoolean__Char, "ToBoolean"),
        new JSMgr.MethodCallBackInfo(Convert_ToBoolean__Boolean, "ToBoolean"),
        new JSMgr.MethodCallBackInfo(Convert_ToBoolean__Byte, "ToBoolean"),
        new JSMgr.MethodCallBackInfo(Convert_ToBoolean__Double, "ToBoolean"),
        new JSMgr.MethodCallBackInfo(Convert_ToBoolean__SByte, "ToBoolean"),
        new JSMgr.MethodCallBackInfo(Convert_ToBoolean__Int16, "ToBoolean"),
        new JSMgr.MethodCallBackInfo(Convert_ToBoolean__Int64, "ToBoolean"),
        new JSMgr.MethodCallBackInfo(Convert_ToBoolean__Single, "ToBoolean"),
        new JSMgr.MethodCallBackInfo(Convert_ToBoolean__Int32, "ToBoolean"),
        new JSMgr.MethodCallBackInfo(Convert_ToByte__String__Int32, "ToByte"),
        new JSMgr.MethodCallBackInfo(Convert_ToByte__String__IFormatProvider, "ToByte"),
        new JSMgr.MethodCallBackInfo(Convert_ToByte__Object__IFormatProvider, "ToByte"),
        new JSMgr.MethodCallBackInfo(Convert_ToByte__Object, "ToByte"),
        new JSMgr.MethodCallBackInfo(Convert_ToByte__UInt32, "ToByte"),
        new JSMgr.MethodCallBackInfo(Convert_ToByte__UInt16, "ToByte"),
        new JSMgr.MethodCallBackInfo(Convert_ToByte__UInt64, "ToByte"),
        new JSMgr.MethodCallBackInfo(Convert_ToByte__String, "ToByte"),
        new JSMgr.MethodCallBackInfo(Convert_ToByte__Boolean, "ToByte"),
        new JSMgr.MethodCallBackInfo(Convert_ToByte__Decimal, "ToByte"),
        new JSMgr.MethodCallBackInfo(Convert_ToByte__Byte, "ToByte"),
        new JSMgr.MethodCallBackInfo(Convert_ToByte__DateTime, "ToByte"),
        new JSMgr.MethodCallBackInfo(Convert_ToByte__Char, "ToByte"),
        new JSMgr.MethodCallBackInfo(Convert_ToByte__Double, "ToByte"),
        new JSMgr.MethodCallBackInfo(Convert_ToByte__SByte, "ToByte"),
        new JSMgr.MethodCallBackInfo(Convert_ToByte__Int16, "ToByte"),
        new JSMgr.MethodCallBackInfo(Convert_ToByte__Int64, "ToByte"),
        new JSMgr.MethodCallBackInfo(Convert_ToByte__Single, "ToByte"),
        new JSMgr.MethodCallBackInfo(Convert_ToByte__Int32, "ToByte"),
        new JSMgr.MethodCallBackInfo(Convert_ToChar__String__IFormatProvider, "ToChar"),
        new JSMgr.MethodCallBackInfo(Convert_ToChar__Object__IFormatProvider, "ToChar"),
        new JSMgr.MethodCallBackInfo(Convert_ToChar__UInt32, "ToChar"),
        new JSMgr.MethodCallBackInfo(Convert_ToChar__String, "ToChar"),
        new JSMgr.MethodCallBackInfo(Convert_ToChar__Object, "ToChar"),
        new JSMgr.MethodCallBackInfo(Convert_ToChar__UInt16, "ToChar"),
        new JSMgr.MethodCallBackInfo(Convert_ToChar__UInt64, "ToChar"),
        new JSMgr.MethodCallBackInfo(Convert_ToChar__DateTime, "ToChar"),
        new JSMgr.MethodCallBackInfo(Convert_ToChar__Decimal, "ToChar"),
        new JSMgr.MethodCallBackInfo(Convert_ToChar__Char, "ToChar"),
        new JSMgr.MethodCallBackInfo(Convert_ToChar__Boolean, "ToChar"),
        new JSMgr.MethodCallBackInfo(Convert_ToChar__Byte, "ToChar"),
        new JSMgr.MethodCallBackInfo(Convert_ToChar__Double, "ToChar"),
        new JSMgr.MethodCallBackInfo(Convert_ToChar__Single, "ToChar"),
        new JSMgr.MethodCallBackInfo(Convert_ToChar__SByte, "ToChar"),
        new JSMgr.MethodCallBackInfo(Convert_ToChar__Int16, "ToChar"),
        new JSMgr.MethodCallBackInfo(Convert_ToChar__Int32, "ToChar"),
        new JSMgr.MethodCallBackInfo(Convert_ToChar__Int64, "ToChar"),
        new JSMgr.MethodCallBackInfo(Convert_ToDateTime__Object__IFormatProvider, "ToDateTime"),
        new JSMgr.MethodCallBackInfo(Convert_ToDateTime__String__IFormatProvider, "ToDateTime"),
        new JSMgr.MethodCallBackInfo(Convert_ToDateTime__SByte, "ToDateTime"),
        new JSMgr.MethodCallBackInfo(Convert_ToDateTime__Object, "ToDateTime"),
        new JSMgr.MethodCallBackInfo(Convert_ToDateTime__UInt64, "ToDateTime"),
        new JSMgr.MethodCallBackInfo(Convert_ToDateTime__UInt32, "ToDateTime"),
        new JSMgr.MethodCallBackInfo(Convert_ToDateTime__UInt16, "ToDateTime"),
        new JSMgr.MethodCallBackInfo(Convert_ToDateTime__Single, "ToDateTime"),
        new JSMgr.MethodCallBackInfo(Convert_ToDateTime__Char, "ToDateTime"),
        new JSMgr.MethodCallBackInfo(Convert_ToDateTime__DateTime, "ToDateTime"),
        new JSMgr.MethodCallBackInfo(Convert_ToDateTime__Byte, "ToDateTime"),
        new JSMgr.MethodCallBackInfo(Convert_ToDateTime__String, "ToDateTime"),
        new JSMgr.MethodCallBackInfo(Convert_ToDateTime__Boolean, "ToDateTime"),
        new JSMgr.MethodCallBackInfo(Convert_ToDateTime__Int32, "ToDateTime"),
        new JSMgr.MethodCallBackInfo(Convert_ToDateTime__Int64, "ToDateTime"),
        new JSMgr.MethodCallBackInfo(Convert_ToDateTime__Int16, "ToDateTime"),
        new JSMgr.MethodCallBackInfo(Convert_ToDateTime__Decimal, "ToDateTime"),
        new JSMgr.MethodCallBackInfo(Convert_ToDateTime__Double, "ToDateTime"),
        new JSMgr.MethodCallBackInfo(Convert_ToDecimal__String__IFormatProvider, "ToDecimal"),
        new JSMgr.MethodCallBackInfo(Convert_ToDecimal__Object__IFormatProvider, "ToDecimal"),
        new JSMgr.MethodCallBackInfo(Convert_ToDecimal__UInt32, "ToDecimal"),
        new JSMgr.MethodCallBackInfo(Convert_ToDecimal__String, "ToDecimal"),
        new JSMgr.MethodCallBackInfo(Convert_ToDecimal__Object, "ToDecimal"),
        new JSMgr.MethodCallBackInfo(Convert_ToDecimal__UInt16, "ToDecimal"),
        new JSMgr.MethodCallBackInfo(Convert_ToDecimal__UInt64, "ToDecimal"),
        new JSMgr.MethodCallBackInfo(Convert_ToDecimal__DateTime, "ToDecimal"),
        new JSMgr.MethodCallBackInfo(Convert_ToDecimal__Decimal, "ToDecimal"),
        new JSMgr.MethodCallBackInfo(Convert_ToDecimal__Char, "ToDecimal"),
        new JSMgr.MethodCallBackInfo(Convert_ToDecimal__Boolean, "ToDecimal"),
        new JSMgr.MethodCallBackInfo(Convert_ToDecimal__Byte, "ToDecimal"),
        new JSMgr.MethodCallBackInfo(Convert_ToDecimal__Double, "ToDecimal"),
        new JSMgr.MethodCallBackInfo(Convert_ToDecimal__SByte, "ToDecimal"),
        new JSMgr.MethodCallBackInfo(Convert_ToDecimal__Int16, "ToDecimal"),
        new JSMgr.MethodCallBackInfo(Convert_ToDecimal__Int64, "ToDecimal"),
        new JSMgr.MethodCallBackInfo(Convert_ToDecimal__Single, "ToDecimal"),
        new JSMgr.MethodCallBackInfo(Convert_ToDecimal__Int32, "ToDecimal"),
        new JSMgr.MethodCallBackInfo(Convert_ToDouble__String__IFormatProvider, "ToDouble"),
        new JSMgr.MethodCallBackInfo(Convert_ToDouble__Object__IFormatProvider, "ToDouble"),
        new JSMgr.MethodCallBackInfo(Convert_ToDouble__UInt32, "ToDouble"),
        new JSMgr.MethodCallBackInfo(Convert_ToDouble__String, "ToDouble"),
        new JSMgr.MethodCallBackInfo(Convert_ToDouble__Object, "ToDouble"),
        new JSMgr.MethodCallBackInfo(Convert_ToDouble__UInt16, "ToDouble"),
        new JSMgr.MethodCallBackInfo(Convert_ToDouble__UInt64, "ToDouble"),
        new JSMgr.MethodCallBackInfo(Convert_ToDouble__Boolean, "ToDouble"),
        new JSMgr.MethodCallBackInfo(Convert_ToDouble__Decimal, "ToDouble"),
        new JSMgr.MethodCallBackInfo(Convert_ToDouble__Byte, "ToDouble"),
        new JSMgr.MethodCallBackInfo(Convert_ToDouble__DateTime, "ToDouble"),
        new JSMgr.MethodCallBackInfo(Convert_ToDouble__Char, "ToDouble"),
        new JSMgr.MethodCallBackInfo(Convert_ToDouble__Double, "ToDouble"),
        new JSMgr.MethodCallBackInfo(Convert_ToDouble__SByte, "ToDouble"),
        new JSMgr.MethodCallBackInfo(Convert_ToDouble__Int16, "ToDouble"),
        new JSMgr.MethodCallBackInfo(Convert_ToDouble__Int64, "ToDouble"),
        new JSMgr.MethodCallBackInfo(Convert_ToDouble__Single, "ToDouble"),
        new JSMgr.MethodCallBackInfo(Convert_ToDouble__Int32, "ToDouble"),
        new JSMgr.MethodCallBackInfo(Convert_ToInt16__String__Int32, "ToInt16"),
        new JSMgr.MethodCallBackInfo(Convert_ToInt16__String__IFormatProvider, "ToInt16"),
        new JSMgr.MethodCallBackInfo(Convert_ToInt16__Object__IFormatProvider, "ToInt16"),
        new JSMgr.MethodCallBackInfo(Convert_ToInt16__Object, "ToInt16"),
        new JSMgr.MethodCallBackInfo(Convert_ToInt16__UInt32, "ToInt16"),
        new JSMgr.MethodCallBackInfo(Convert_ToInt16__UInt16, "ToInt16"),
        new JSMgr.MethodCallBackInfo(Convert_ToInt16__UInt64, "ToInt16"),
        new JSMgr.MethodCallBackInfo(Convert_ToInt16__String, "ToInt16"),
        new JSMgr.MethodCallBackInfo(Convert_ToInt16__DateTime, "ToInt16"),
        new JSMgr.MethodCallBackInfo(Convert_ToInt16__Decimal, "ToInt16"),
        new JSMgr.MethodCallBackInfo(Convert_ToInt16__Char, "ToInt16"),
        new JSMgr.MethodCallBackInfo(Convert_ToInt16__Boolean, "ToInt16"),
        new JSMgr.MethodCallBackInfo(Convert_ToInt16__Byte, "ToInt16"),
        new JSMgr.MethodCallBackInfo(Convert_ToInt16__Double, "ToInt16"),
        new JSMgr.MethodCallBackInfo(Convert_ToInt16__SByte, "ToInt16"),
        new JSMgr.MethodCallBackInfo(Convert_ToInt16__Int16, "ToInt16"),
        new JSMgr.MethodCallBackInfo(Convert_ToInt16__Int64, "ToInt16"),
        new JSMgr.MethodCallBackInfo(Convert_ToInt16__Single, "ToInt16"),
        new JSMgr.MethodCallBackInfo(Convert_ToInt16__Int32, "ToInt16"),
        new JSMgr.MethodCallBackInfo(Convert_ToInt32__String__Int32, "ToInt32"),
        new JSMgr.MethodCallBackInfo(Convert_ToInt32__String__IFormatProvider, "ToInt32"),
        new JSMgr.MethodCallBackInfo(Convert_ToInt32__Object__IFormatProvider, "ToInt32"),
        new JSMgr.MethodCallBackInfo(Convert_ToInt32__Object, "ToInt32"),
        new JSMgr.MethodCallBackInfo(Convert_ToInt32__UInt32, "ToInt32"),
        new JSMgr.MethodCallBackInfo(Convert_ToInt32__UInt16, "ToInt32"),
        new JSMgr.MethodCallBackInfo(Convert_ToInt32__UInt64, "ToInt32"),
        new JSMgr.MethodCallBackInfo(Convert_ToInt32__String, "ToInt32"),
        new JSMgr.MethodCallBackInfo(Convert_ToInt32__Boolean, "ToInt32"),
        new JSMgr.MethodCallBackInfo(Convert_ToInt32__Decimal, "ToInt32"),
        new JSMgr.MethodCallBackInfo(Convert_ToInt32__Byte, "ToInt32"),
        new JSMgr.MethodCallBackInfo(Convert_ToInt32__DateTime, "ToInt32"),
        new JSMgr.MethodCallBackInfo(Convert_ToInt32__Char, "ToInt32"),
        new JSMgr.MethodCallBackInfo(Convert_ToInt32__Double, "ToInt32"),
        new JSMgr.MethodCallBackInfo(Convert_ToInt32__SByte, "ToInt32"),
        new JSMgr.MethodCallBackInfo(Convert_ToInt32__Int16, "ToInt32"),
        new JSMgr.MethodCallBackInfo(Convert_ToInt32__Int64, "ToInt32"),
        new JSMgr.MethodCallBackInfo(Convert_ToInt32__Single, "ToInt32"),
        new JSMgr.MethodCallBackInfo(Convert_ToInt32__Int32, "ToInt32"),
        new JSMgr.MethodCallBackInfo(Convert_ToInt64__String__Int32, "ToInt64"),
        new JSMgr.MethodCallBackInfo(Convert_ToInt64__String__IFormatProvider, "ToInt64"),
        new JSMgr.MethodCallBackInfo(Convert_ToInt64__Object__IFormatProvider, "ToInt64"),
        new JSMgr.MethodCallBackInfo(Convert_ToInt64__Object, "ToInt64"),
        new JSMgr.MethodCallBackInfo(Convert_ToInt64__UInt32, "ToInt64"),
        new JSMgr.MethodCallBackInfo(Convert_ToInt64__UInt16, "ToInt64"),
        new JSMgr.MethodCallBackInfo(Convert_ToInt64__UInt64, "ToInt64"),
        new JSMgr.MethodCallBackInfo(Convert_ToInt64__String, "ToInt64"),
        new JSMgr.MethodCallBackInfo(Convert_ToInt64__DateTime, "ToInt64"),
        new JSMgr.MethodCallBackInfo(Convert_ToInt64__Decimal, "ToInt64"),
        new JSMgr.MethodCallBackInfo(Convert_ToInt64__Char, "ToInt64"),
        new JSMgr.MethodCallBackInfo(Convert_ToInt64__Boolean, "ToInt64"),
        new JSMgr.MethodCallBackInfo(Convert_ToInt64__Byte, "ToInt64"),
        new JSMgr.MethodCallBackInfo(Convert_ToInt64__Double, "ToInt64"),
        new JSMgr.MethodCallBackInfo(Convert_ToInt64__SByte, "ToInt64"),
        new JSMgr.MethodCallBackInfo(Convert_ToInt64__Int16, "ToInt64"),
        new JSMgr.MethodCallBackInfo(Convert_ToInt64__Int64, "ToInt64"),
        new JSMgr.MethodCallBackInfo(Convert_ToInt64__Single, "ToInt64"),
        new JSMgr.MethodCallBackInfo(Convert_ToInt64__Int32, "ToInt64"),
        new JSMgr.MethodCallBackInfo(Convert_ToSByte__String__IFormatProvider, "ToSByte"),
        new JSMgr.MethodCallBackInfo(Convert_ToSByte__String__Int32, "ToSByte"),
        new JSMgr.MethodCallBackInfo(Convert_ToSByte__Object__IFormatProvider, "ToSByte"),
        new JSMgr.MethodCallBackInfo(Convert_ToSByte__Object, "ToSByte"),
        new JSMgr.MethodCallBackInfo(Convert_ToSByte__Decimal, "ToSByte"),
        new JSMgr.MethodCallBackInfo(Convert_ToSByte__UInt64, "ToSByte"),
        new JSMgr.MethodCallBackInfo(Convert_ToSByte__UInt16, "ToSByte"),
        new JSMgr.MethodCallBackInfo(Convert_ToSByte__Char, "ToSByte"),
        new JSMgr.MethodCallBackInfo(Convert_ToSByte__DateTime, "ToSByte"),
        new JSMgr.MethodCallBackInfo(Convert_ToSByte__Boolean, "ToSByte"),
        new JSMgr.MethodCallBackInfo(Convert_ToSByte__Byte, "ToSByte"),
        new JSMgr.MethodCallBackInfo(Convert_ToSByte__SByte, "ToSByte"),
        new JSMgr.MethodCallBackInfo(Convert_ToSByte__Int16, "ToSByte"),
        new JSMgr.MethodCallBackInfo(Convert_ToSByte__Int32, "ToSByte"),
        new JSMgr.MethodCallBackInfo(Convert_ToSByte__Int64, "ToSByte"),
        new JSMgr.MethodCallBackInfo(Convert_ToSByte__Double, "ToSByte"),
        new JSMgr.MethodCallBackInfo(Convert_ToSByte__UInt32, "ToSByte"),
        new JSMgr.MethodCallBackInfo(Convert_ToSByte__String, "ToSByte"),
        new JSMgr.MethodCallBackInfo(Convert_ToSByte__Single, "ToSByte"),
        new JSMgr.MethodCallBackInfo(Convert_ToSingle__String__IFormatProvider, "ToSingle"),
        new JSMgr.MethodCallBackInfo(Convert_ToSingle__Object__IFormatProvider, "ToSingle"),
        new JSMgr.MethodCallBackInfo(Convert_ToSingle__UInt32, "ToSingle"),
        new JSMgr.MethodCallBackInfo(Convert_ToSingle__String, "ToSingle"),
        new JSMgr.MethodCallBackInfo(Convert_ToSingle__Object, "ToSingle"),
        new JSMgr.MethodCallBackInfo(Convert_ToSingle__UInt16, "ToSingle"),
        new JSMgr.MethodCallBackInfo(Convert_ToSingle__UInt64, "ToSingle"),
        new JSMgr.MethodCallBackInfo(Convert_ToSingle__DateTime, "ToSingle"),
        new JSMgr.MethodCallBackInfo(Convert_ToSingle__Decimal, "ToSingle"),
        new JSMgr.MethodCallBackInfo(Convert_ToSingle__Char, "ToSingle"),
        new JSMgr.MethodCallBackInfo(Convert_ToSingle__Boolean, "ToSingle"),
        new JSMgr.MethodCallBackInfo(Convert_ToSingle__Byte, "ToSingle"),
        new JSMgr.MethodCallBackInfo(Convert_ToSingle__Double, "ToSingle"),
        new JSMgr.MethodCallBackInfo(Convert_ToSingle__SByte, "ToSingle"),
        new JSMgr.MethodCallBackInfo(Convert_ToSingle__Int16, "ToSingle"),
        new JSMgr.MethodCallBackInfo(Convert_ToSingle__Int64, "ToSingle"),
        new JSMgr.MethodCallBackInfo(Convert_ToSingle__Single, "ToSingle"),
        new JSMgr.MethodCallBackInfo(Convert_ToSingle__Int32, "ToSingle"),
        new JSMgr.MethodCallBackInfo(Convert_ToString__Int64__IFormatProvider, "ToString"),
        new JSMgr.MethodCallBackInfo(Convert_ToString__Object__IFormatProvider, "ToString"),
        new JSMgr.MethodCallBackInfo(Convert_ToString__SByte__IFormatProvider, "ToString"),
        new JSMgr.MethodCallBackInfo(Convert_ToString__Int32__Int32, "ToString"),
        new JSMgr.MethodCallBackInfo(Convert_ToString__Int32__IFormatProvider, "ToString"),
        new JSMgr.MethodCallBackInfo(Convert_ToString__Int64__Int32, "ToString"),
        new JSMgr.MethodCallBackInfo(Convert_ToString__UInt32__IFormatProvider, "ToString"),
        new JSMgr.MethodCallBackInfo(Convert_ToString__UInt64__IFormatProvider, "ToString"),
        new JSMgr.MethodCallBackInfo(Convert_ToString__UInt16__IFormatProvider, "ToString"),
        new JSMgr.MethodCallBackInfo(Convert_ToString__Int16__Int32, "ToString"),
        new JSMgr.MethodCallBackInfo(Convert_ToString__Int16__IFormatProvider, "ToString"),
        new JSMgr.MethodCallBackInfo(Convert_ToString__String__IFormatProvider, "ToString"),
        new JSMgr.MethodCallBackInfo(Convert_ToString__Char__IFormatProvider, "ToString"),
        new JSMgr.MethodCallBackInfo(Convert_ToString__DateTime__IFormatProvider, "ToString"),
        new JSMgr.MethodCallBackInfo(Convert_ToString__Decimal__IFormatProvider, "ToString"),
        new JSMgr.MethodCallBackInfo(Convert_ToString__Boolean__IFormatProvider, "ToString"),
        new JSMgr.MethodCallBackInfo(Convert_ToString__Byte__IFormatProvider, "ToString"),
        new JSMgr.MethodCallBackInfo(Convert_ToString__Byte__Int32, "ToString"),
        new JSMgr.MethodCallBackInfo(Convert_ToString__Single__IFormatProvider, "ToString"),
        new JSMgr.MethodCallBackInfo(Convert_ToString__Double__IFormatProvider, "ToString"),
        new JSMgr.MethodCallBackInfo(Convert_ToString__UInt16, "ToString"),
        new JSMgr.MethodCallBackInfo(Convert_ToString__UInt64, "ToString"),
        new JSMgr.MethodCallBackInfo(Convert_ToString__Char, "ToString"),
        new JSMgr.MethodCallBackInfo(Convert_ToString__Int32, "ToString"),
        new JSMgr.MethodCallBackInfo(Convert_ToString__Boolean, "ToString"),
        new JSMgr.MethodCallBackInfo(Convert_ToString__Int64, "ToString"),
        new JSMgr.MethodCallBackInfo(Convert_ToString__Byte, "ToString"),
        new JSMgr.MethodCallBackInfo(Convert_ToString__Single, "ToString"),
        new JSMgr.MethodCallBackInfo(Convert_ToString__Object, "ToString"),
        new JSMgr.MethodCallBackInfo(Convert_ToString__Int16, "ToString"),
        new JSMgr.MethodCallBackInfo(Convert_ToString__Double, "ToString"),
        new JSMgr.MethodCallBackInfo(Convert_ToString__SByte, "ToString"),
        new JSMgr.MethodCallBackInfo(Convert_ToString__DateTime, "ToString"),
        new JSMgr.MethodCallBackInfo(Convert_ToString__UInt32, "ToString"),
        new JSMgr.MethodCallBackInfo(Convert_ToString__Decimal, "ToString"),
        new JSMgr.MethodCallBackInfo(Convert_ToString__String, "ToString"),
        new JSMgr.MethodCallBackInfo(Convert_ToUInt16__String__Int32, "ToUInt16"),
        new JSMgr.MethodCallBackInfo(Convert_ToUInt16__String__IFormatProvider, "ToUInt16"),
        new JSMgr.MethodCallBackInfo(Convert_ToUInt16__Object__IFormatProvider, "ToUInt16"),
        new JSMgr.MethodCallBackInfo(Convert_ToUInt16__UInt32, "ToUInt16"),
        new JSMgr.MethodCallBackInfo(Convert_ToUInt16__Object, "ToUInt16"),
        new JSMgr.MethodCallBackInfo(Convert_ToUInt16__UInt16, "ToUInt16"),
        new JSMgr.MethodCallBackInfo(Convert_ToUInt16__UInt64, "ToUInt16"),
        new JSMgr.MethodCallBackInfo(Convert_ToUInt16__String, "ToUInt16"),
        new JSMgr.MethodCallBackInfo(Convert_ToUInt16__DateTime, "ToUInt16"),
        new JSMgr.MethodCallBackInfo(Convert_ToUInt16__Decimal, "ToUInt16"),
        new JSMgr.MethodCallBackInfo(Convert_ToUInt16__Char, "ToUInt16"),
        new JSMgr.MethodCallBackInfo(Convert_ToUInt16__Boolean, "ToUInt16"),
        new JSMgr.MethodCallBackInfo(Convert_ToUInt16__Byte, "ToUInt16"),
        new JSMgr.MethodCallBackInfo(Convert_ToUInt16__Double, "ToUInt16"),
        new JSMgr.MethodCallBackInfo(Convert_ToUInt16__SByte, "ToUInt16"),
        new JSMgr.MethodCallBackInfo(Convert_ToUInt16__Int16, "ToUInt16"),
        new JSMgr.MethodCallBackInfo(Convert_ToUInt16__Int64, "ToUInt16"),
        new JSMgr.MethodCallBackInfo(Convert_ToUInt16__Single, "ToUInt16"),
        new JSMgr.MethodCallBackInfo(Convert_ToUInt16__Int32, "ToUInt16"),
        new JSMgr.MethodCallBackInfo(Convert_ToUInt32__String__Int32, "ToUInt32"),
        new JSMgr.MethodCallBackInfo(Convert_ToUInt32__String__IFormatProvider, "ToUInt32"),
        new JSMgr.MethodCallBackInfo(Convert_ToUInt32__Object__IFormatProvider, "ToUInt32"),
        new JSMgr.MethodCallBackInfo(Convert_ToUInt32__Object, "ToUInt32"),
        new JSMgr.MethodCallBackInfo(Convert_ToUInt32__UInt32, "ToUInt32"),
        new JSMgr.MethodCallBackInfo(Convert_ToUInt32__UInt16, "ToUInt32"),
        new JSMgr.MethodCallBackInfo(Convert_ToUInt32__UInt64, "ToUInt32"),
        new JSMgr.MethodCallBackInfo(Convert_ToUInt32__String, "ToUInt32"),
        new JSMgr.MethodCallBackInfo(Convert_ToUInt32__Boolean, "ToUInt32"),
        new JSMgr.MethodCallBackInfo(Convert_ToUInt32__Decimal, "ToUInt32"),
        new JSMgr.MethodCallBackInfo(Convert_ToUInt32__Byte, "ToUInt32"),
        new JSMgr.MethodCallBackInfo(Convert_ToUInt32__DateTime, "ToUInt32"),
        new JSMgr.MethodCallBackInfo(Convert_ToUInt32__Char, "ToUInt32"),
        new JSMgr.MethodCallBackInfo(Convert_ToUInt32__Double, "ToUInt32"),
        new JSMgr.MethodCallBackInfo(Convert_ToUInt32__SByte, "ToUInt32"),
        new JSMgr.MethodCallBackInfo(Convert_ToUInt32__Int16, "ToUInt32"),
        new JSMgr.MethodCallBackInfo(Convert_ToUInt32__Int64, "ToUInt32"),
        new JSMgr.MethodCallBackInfo(Convert_ToUInt32__Single, "ToUInt32"),
        new JSMgr.MethodCallBackInfo(Convert_ToUInt32__Int32, "ToUInt32"),
        new JSMgr.MethodCallBackInfo(Convert_ToUInt64__String__Int32, "ToUInt64"),
        new JSMgr.MethodCallBackInfo(Convert_ToUInt64__String__IFormatProvider, "ToUInt64"),
        new JSMgr.MethodCallBackInfo(Convert_ToUInt64__Object__IFormatProvider, "ToUInt64"),
        new JSMgr.MethodCallBackInfo(Convert_ToUInt64__Object, "ToUInt64"),
        new JSMgr.MethodCallBackInfo(Convert_ToUInt64__UInt32, "ToUInt64"),
        new JSMgr.MethodCallBackInfo(Convert_ToUInt64__UInt16, "ToUInt64"),
        new JSMgr.MethodCallBackInfo(Convert_ToUInt64__UInt64, "ToUInt64"),
        new JSMgr.MethodCallBackInfo(Convert_ToUInt64__String, "ToUInt64"),
        new JSMgr.MethodCallBackInfo(Convert_ToUInt64__DateTime, "ToUInt64"),
        new JSMgr.MethodCallBackInfo(Convert_ToUInt64__Decimal, "ToUInt64"),
        new JSMgr.MethodCallBackInfo(Convert_ToUInt64__Char, "ToUInt64"),
        new JSMgr.MethodCallBackInfo(Convert_ToUInt64__Boolean, "ToUInt64"),
        new JSMgr.MethodCallBackInfo(Convert_ToUInt64__Byte, "ToUInt64"),
        new JSMgr.MethodCallBackInfo(Convert_ToUInt64__Double, "ToUInt64"),
        new JSMgr.MethodCallBackInfo(Convert_ToUInt64__SByte, "ToUInt64"),
        new JSMgr.MethodCallBackInfo(Convert_ToUInt64__Int16, "ToUInt64"),
        new JSMgr.MethodCallBackInfo(Convert_ToUInt64__Int64, "ToUInt64"),
        new JSMgr.MethodCallBackInfo(Convert_ToUInt64__Single, "ToUInt64"),
        new JSMgr.MethodCallBackInfo(Convert_ToUInt64__Int32, "ToUInt64"),

    };
    JSMgr.allCallbackInfo.Add(ci);
}


}
