
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by CSGenerator.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;

using jsval = JSApi.jsval;

public class JSB_UnityEngine_Network
{

////////////////////// Network ///////////////////////////////////////
// constructors

static bool Network_Network1(JSVCall vc, int argc)
{
    int _this = JSApi.getObject((int)JSApi.GetType.Arg);
    JSApi.attachFinalizerObject(_this);
    --argc;

    int len = argc;
    if (len == 0)
    {
        JSMgr.addJSCSRel(_this, new UnityEngine.Network());
    }

    return true;
}

// fields

// properties
static void Network_incomingPassword(JSVCall vc)
{
    if (vc.bGet)
    { 
        var result = UnityEngine.Network.incomingPassword;
                JSApi.setStringS((int)JSApi.SetType.Rval, result);
    }
    else
    { 
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        UnityEngine.Network.incomingPassword = arg0;
    }
}
static void Network_logLevel(JSVCall vc)
{
    if (vc.bGet)
    { 
        var result = UnityEngine.Network.logLevel;
                JSApi.setEnum((int)JSApi.SetType.Rval, (int)result);
    }
    else
    { 
        UnityEngine.NetworkLogLevel arg0 = (UnityEngine.NetworkLogLevel)JSApi.getEnum((int)JSApi.GetType.Arg);
        UnityEngine.Network.logLevel = arg0;
    }
}
static void Network_connections(JSVCall vc)
{
        var result = UnityEngine.Network.connections;
                var arrRet = result;
        for (int i = 0; arrRet != null && i < arrRet.Length; i++)
        {
            JSMgr.datax.setObject((int)JSApi.SetType.SaveAndTempTrace, arrRet[i]);
            JSApi.moveSaveID2Arr(i);
        }
        JSApi.setArrayS((int)JSApi.SetType.Rval, (arrRet != null ? arrRet.Length : 0), true);
}
static void Network_player(JSVCall vc)
{
        var result = UnityEngine.Network.player;
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, result);
}
static void Network_isClient(JSVCall vc)
{
        var result = UnityEngine.Network.isClient;
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(result));
}
static void Network_isServer(JSVCall vc)
{
        var result = UnityEngine.Network.isServer;
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(result));
}
static void Network_peerType(JSVCall vc)
{
        var result = UnityEngine.Network.peerType;
                JSApi.setEnum((int)JSApi.SetType.Rval, (int)result);
}
static void Network_sendRate(JSVCall vc)
{
    if (vc.bGet)
    { 
        var result = UnityEngine.Network.sendRate;
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(result));
    }
    else
    { 
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.Network.sendRate = arg0;
    }
}
static void Network_isMessageQueueRunning(JSVCall vc)
{
    if (vc.bGet)
    { 
        var result = UnityEngine.Network.isMessageQueueRunning;
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(result));
    }
    else
    { 
        System.Boolean arg0 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        UnityEngine.Network.isMessageQueueRunning = arg0;
    }
}
static void Network_time(JSVCall vc)
{
        var result = UnityEngine.Network.time;
                JSApi.setDouble((int)JSApi.SetType.Rval, (System.Double)(result));
}
static void Network_minimumAllocatableViewIDs(JSVCall vc)
{
    if (vc.bGet)
    { 
        var result = UnityEngine.Network.minimumAllocatableViewIDs;
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(result));
    }
    else
    { 
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        UnityEngine.Network.minimumAllocatableViewIDs = arg0;
    }
}
static void Network_natFacilitatorIP(JSVCall vc)
{
    if (vc.bGet)
    { 
        var result = UnityEngine.Network.natFacilitatorIP;
                JSApi.setStringS((int)JSApi.SetType.Rval, result);
    }
    else
    { 
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        UnityEngine.Network.natFacilitatorIP = arg0;
    }
}
static void Network_natFacilitatorPort(JSVCall vc)
{
    if (vc.bGet)
    { 
        var result = UnityEngine.Network.natFacilitatorPort;
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(result));
    }
    else
    { 
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        UnityEngine.Network.natFacilitatorPort = arg0;
    }
}
static void Network_connectionTesterIP(JSVCall vc)
{
    if (vc.bGet)
    { 
        var result = UnityEngine.Network.connectionTesterIP;
                JSApi.setStringS((int)JSApi.SetType.Rval, result);
    }
    else
    { 
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        UnityEngine.Network.connectionTesterIP = arg0;
    }
}
static void Network_connectionTesterPort(JSVCall vc)
{
    if (vc.bGet)
    { 
        var result = UnityEngine.Network.connectionTesterPort;
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(result));
    }
    else
    { 
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        UnityEngine.Network.connectionTesterPort = arg0;
    }
}
static void Network_maxConnections(JSVCall vc)
{
    if (vc.bGet)
    { 
        var result = UnityEngine.Network.maxConnections;
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(result));
    }
    else
    { 
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        UnityEngine.Network.maxConnections = arg0;
    }
}
static void Network_proxyIP(JSVCall vc)
{
    if (vc.bGet)
    { 
        var result = UnityEngine.Network.proxyIP;
                JSApi.setStringS((int)JSApi.SetType.Rval, result);
    }
    else
    { 
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        UnityEngine.Network.proxyIP = arg0;
    }
}
static void Network_proxyPort(JSVCall vc)
{
    if (vc.bGet)
    { 
        var result = UnityEngine.Network.proxyPort;
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(result));
    }
    else
    { 
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        UnityEngine.Network.proxyPort = arg0;
    }
}
static void Network_useProxy(JSVCall vc)
{
    if (vc.bGet)
    { 
        var result = UnityEngine.Network.useProxy;
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(result));
    }
    else
    { 
        System.Boolean arg0 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        UnityEngine.Network.useProxy = arg0;
    }
}
static void Network_proxyPassword(JSVCall vc)
{
    if (vc.bGet)
    { 
        var result = UnityEngine.Network.proxyPassword;
                JSApi.setStringS((int)JSApi.SetType.Rval, result);
    }
    else
    { 
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        UnityEngine.Network.proxyPassword = arg0;
    }
}

// methods

static bool Network_AllocateViewID(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, UnityEngine.Network.AllocateViewID());
    }

    return true;
}

static bool Network_CloseConnection__NetworkPlayer__Boolean(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        UnityEngine.NetworkPlayer arg0 = (UnityEngine.NetworkPlayer)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        System.Boolean arg1 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        UnityEngine.Network.CloseConnection(arg0, arg1);
    }

    return true;
}

static bool Network_Connect__String_Array__Int32__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 3) 
    {
        System.String[] arg0 = JSDataExchangeMgr.GetJSArg<System.String[]>(() =>
        {
            int jsObjID = JSApi.getObject((int)JSApi.GetType.Arg);
            int length = JSApi.getArrayLength(jsObjID);
            var ret = new System.String[length];
            for (var i = 0; i < length; i++) {
                JSApi.getElement(jsObjID, i);
                ret[i] = (System.String)JSApi.getStringS((int)JSApi.GetType.SaveAndRemove);
            }
            return ret;
        });
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.String arg2 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
                JSApi.setEnum((int)JSApi.SetType.Rval, (int)UnityEngine.Network.Connect(arg0, arg1, arg2));
    }

    return true;
}

static bool Network_Connect__String__Int32__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 3) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.String arg2 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
                JSApi.setEnum((int)JSApi.SetType.Rval, (int)UnityEngine.Network.Connect(arg0, arg1, arg2));
    }

    return true;
}

static bool Network_Connect__String__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.String arg1 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
                JSApi.setEnum((int)JSApi.SetType.Rval, (int)UnityEngine.Network.Connect(arg0, arg1));
    }

    return true;
}

static bool Network_Connect__HostData__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        UnityEngine.HostData arg0 = (UnityEngine.HostData)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        System.String arg1 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
                JSApi.setEnum((int)JSApi.SetType.Rval, (int)UnityEngine.Network.Connect(arg0, arg1));
    }

    return true;
}

static bool Network_Connect__String__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                JSApi.setEnum((int)JSApi.SetType.Rval, (int)UnityEngine.Network.Connect(arg0, arg1));
    }

    return true;
}

static bool Network_Connect__String_Array__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String[] arg0 = JSDataExchangeMgr.GetJSArg<System.String[]>(() =>
        {
            int jsObjID = JSApi.getObject((int)JSApi.GetType.Arg);
            int length = JSApi.getArrayLength(jsObjID);
            var ret = new System.String[length];
            for (var i = 0; i < length; i++) {
                JSApi.getElement(jsObjID, i);
                ret[i] = (System.String)JSApi.getStringS((int)JSApi.GetType.SaveAndRemove);
            }
            return ret;
        });
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                JSApi.setEnum((int)JSApi.SetType.Rval, (int)UnityEngine.Network.Connect(arg0, arg1));
    }

    return true;
}

static bool Network_Connect__HostData(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        UnityEngine.HostData arg0 = (UnityEngine.HostData)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setEnum((int)JSApi.SetType.Rval, (int)UnityEngine.Network.Connect(arg0));
    }

    return true;
}

static bool Network_Connect__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
                JSApi.setEnum((int)JSApi.SetType.Rval, (int)UnityEngine.Network.Connect(arg0));
    }

    return true;
}

static bool Network_Destroy__GameObject(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        UnityEngine.GameObject arg0 = (UnityEngine.GameObject)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        UnityEngine.Network.Destroy(arg0);
    }

    return true;
}

static bool Network_Destroy__NetworkViewID(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        UnityEngine.NetworkViewID arg0 = (UnityEngine.NetworkViewID)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        UnityEngine.Network.Destroy(arg0);
    }

    return true;
}

static bool Network_DestroyPlayerObjects__NetworkPlayer(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        UnityEngine.NetworkPlayer arg0 = (UnityEngine.NetworkPlayer)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        UnityEngine.Network.DestroyPlayerObjects(arg0);
    }

    return true;
}

static bool Network_Disconnect__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        UnityEngine.Network.Disconnect(arg0);
    }

    return true;
}

static bool Network_Disconnect(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
        UnityEngine.Network.Disconnect();
    }

    return true;
}

static bool Network_GetAveragePing__NetworkPlayer(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        UnityEngine.NetworkPlayer arg0 = (UnityEngine.NetworkPlayer)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(UnityEngine.Network.GetAveragePing(arg0)));
    }

    return true;
}

static bool Network_GetLastPing__NetworkPlayer(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        UnityEngine.NetworkPlayer arg0 = (UnityEngine.NetworkPlayer)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(UnityEngine.Network.GetLastPing(arg0)));
    }

    return true;
}

static bool Network_HavePublicAddress(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(UnityEngine.Network.HavePublicAddress()));
    }

    return true;
}

static bool Network_InitializeSecurity(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
        UnityEngine.Network.InitializeSecurity();
    }

    return true;
}

static bool Network_InitializeServer__Int32__Int32__Boolean(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 3) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Boolean arg2 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
                JSApi.setEnum((int)JSApi.SetType.Rval, (int)UnityEngine.Network.InitializeServer(arg0, arg1, arg2));
    }

    return true;
}

static bool Network_Instantiate__UEObject__Vector3__Quaternion__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 4) 
    {
        UnityEngine.Object arg0 = (UnityEngine.Object)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        UnityEngine.Vector3 arg1 = (UnityEngine.Vector3)JSApi.getVector3S((int)JSApi.GetType.Arg);
        UnityEngine.Quaternion arg2 = (UnityEngine.Quaternion)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        System.Int32 arg3 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, UnityEngine.Network.Instantiate(arg0, arg1, arg2, arg3));
    }

    return true;
}

static bool Network_RemoveRPCs__NetworkPlayer__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        UnityEngine.NetworkPlayer arg0 = (UnityEngine.NetworkPlayer)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        UnityEngine.Network.RemoveRPCs(arg0, arg1);
    }

    return true;
}

static bool Network_RemoveRPCs__NetworkPlayer(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        UnityEngine.NetworkPlayer arg0 = (UnityEngine.NetworkPlayer)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        UnityEngine.Network.RemoveRPCs(arg0);
    }

    return true;
}

static bool Network_RemoveRPCs__NetworkViewID(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        UnityEngine.NetworkViewID arg0 = (UnityEngine.NetworkViewID)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        UnityEngine.Network.RemoveRPCs(arg0);
    }

    return true;
}

static bool Network_RemoveRPCsInGroup__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        UnityEngine.Network.RemoveRPCsInGroup(arg0);
    }

    return true;
}

static bool Network_SetLevelPrefix__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        UnityEngine.Network.SetLevelPrefix(arg0);
    }

    return true;
}

static bool Network_SetReceivingEnabled__NetworkPlayer__Int32__Boolean(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 3) 
    {
        UnityEngine.NetworkPlayer arg0 = (UnityEngine.NetworkPlayer)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Boolean arg2 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        UnityEngine.Network.SetReceivingEnabled(arg0, arg1, arg2);
    }

    return true;
}

static bool Network_SetSendingEnabled__NetworkPlayer__Int32__Boolean(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 3) 
    {
        UnityEngine.NetworkPlayer arg0 = (UnityEngine.NetworkPlayer)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Boolean arg2 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        UnityEngine.Network.SetSendingEnabled(arg0, arg1, arg2);
    }

    return true;
}

static bool Network_SetSendingEnabled__Int32__Boolean(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Boolean arg1 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        UnityEngine.Network.SetSendingEnabled(arg0, arg1);
    }

    return true;
}

static bool Network_TestConnection__Boolean(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Boolean arg0 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
                JSApi.setEnum((int)JSApi.SetType.Rval, (int)UnityEngine.Network.TestConnection(arg0));
    }

    return true;
}

static bool Network_TestConnection(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
                JSApi.setEnum((int)JSApi.SetType.Rval, (int)UnityEngine.Network.TestConnection());
    }

    return true;
}

static bool Network_TestConnectionNAT__Boolean(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Boolean arg0 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
                JSApi.setEnum((int)JSApi.SetType.Rval, (int)UnityEngine.Network.TestConnectionNAT(arg0));
    }

    return true;
}

static bool Network_TestConnectionNAT(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
                JSApi.setEnum((int)JSApi.SetType.Rval, (int)UnityEngine.Network.TestConnectionNAT());
    }

    return true;
}


//register

public static void __Register()
{
    JSMgr.CallbackInfo ci = new JSMgr.CallbackInfo();
    ci.type = typeof(UnityEngine.Network);
    ci.fields = new JSMgr.CSCallbackField[]
    {

    };
    ci.properties = new JSMgr.CSCallbackProperty[]
    {
        Network_incomingPassword,
        Network_logLevel,
        Network_connections,
        Network_player,
        Network_isClient,
        Network_isServer,
        Network_peerType,
        Network_sendRate,
        Network_isMessageQueueRunning,
        Network_time,
        Network_minimumAllocatableViewIDs,
        Network_natFacilitatorIP,
        Network_natFacilitatorPort,
        Network_connectionTesterIP,
        Network_connectionTesterPort,
        Network_maxConnections,
        Network_proxyIP,
        Network_proxyPort,
        Network_useProxy,
        Network_proxyPassword,

    };
    ci.constructors = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(Network_Network1, ".ctor"),

    };
    ci.methods = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(Network_AllocateViewID, "AllocateViewID"),
        new JSMgr.MethodCallBackInfo(Network_CloseConnection__NetworkPlayer__Boolean, "CloseConnection"),
        new JSMgr.MethodCallBackInfo(Network_Connect__String_Array__Int32__String, "Connect"),
        new JSMgr.MethodCallBackInfo(Network_Connect__String__Int32__String, "Connect"),
        new JSMgr.MethodCallBackInfo(Network_Connect__String__String, "Connect"),
        new JSMgr.MethodCallBackInfo(Network_Connect__HostData__String, "Connect"),
        new JSMgr.MethodCallBackInfo(Network_Connect__String__Int32, "Connect"),
        new JSMgr.MethodCallBackInfo(Network_Connect__String_Array__Int32, "Connect"),
        new JSMgr.MethodCallBackInfo(Network_Connect__HostData, "Connect"),
        new JSMgr.MethodCallBackInfo(Network_Connect__String, "Connect"),
        new JSMgr.MethodCallBackInfo(Network_Destroy__GameObject, "Destroy"),
        new JSMgr.MethodCallBackInfo(Network_Destroy__NetworkViewID, "Destroy"),
        new JSMgr.MethodCallBackInfo(Network_DestroyPlayerObjects__NetworkPlayer, "DestroyPlayerObjects"),
        new JSMgr.MethodCallBackInfo(Network_Disconnect__Int32, "Disconnect"),
        new JSMgr.MethodCallBackInfo(Network_Disconnect, "Disconnect"),
        new JSMgr.MethodCallBackInfo(Network_GetAveragePing__NetworkPlayer, "GetAveragePing"),
        new JSMgr.MethodCallBackInfo(Network_GetLastPing__NetworkPlayer, "GetLastPing"),
        new JSMgr.MethodCallBackInfo(Network_HavePublicAddress, "HavePublicAddress"),
        new JSMgr.MethodCallBackInfo(Network_InitializeSecurity, "InitializeSecurity"),
        new JSMgr.MethodCallBackInfo(Network_InitializeServer__Int32__Int32__Boolean, "InitializeServer"),
        new JSMgr.MethodCallBackInfo(Network_Instantiate__UEObject__Vector3__Quaternion__Int32, "Instantiate"),
        new JSMgr.MethodCallBackInfo(Network_RemoveRPCs__NetworkPlayer__Int32, "RemoveRPCs"),
        new JSMgr.MethodCallBackInfo(Network_RemoveRPCs__NetworkPlayer, "RemoveRPCs"),
        new JSMgr.MethodCallBackInfo(Network_RemoveRPCs__NetworkViewID, "RemoveRPCs"),
        new JSMgr.MethodCallBackInfo(Network_RemoveRPCsInGroup__Int32, "RemoveRPCsInGroup"),
        new JSMgr.MethodCallBackInfo(Network_SetLevelPrefix__Int32, "SetLevelPrefix"),
        new JSMgr.MethodCallBackInfo(Network_SetReceivingEnabled__NetworkPlayer__Int32__Boolean, "SetReceivingEnabled"),
        new JSMgr.MethodCallBackInfo(Network_SetSendingEnabled__NetworkPlayer__Int32__Boolean, "SetSendingEnabled"),
        new JSMgr.MethodCallBackInfo(Network_SetSendingEnabled__Int32__Boolean, "SetSendingEnabled"),
        new JSMgr.MethodCallBackInfo(Network_TestConnection__Boolean, "TestConnection"),
        new JSMgr.MethodCallBackInfo(Network_TestConnection, "TestConnection"),
        new JSMgr.MethodCallBackInfo(Network_TestConnectionNAT__Boolean, "TestConnectionNAT"),
        new JSMgr.MethodCallBackInfo(Network_TestConnectionNAT, "TestConnectionNAT"),

    };
    JSMgr.allCallbackInfo.Add(ci);
}


}
