
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by CSGenerator.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;

using jsval = JSApi.jsval;

public class JSB_UnityEngine_ParticleSystem_EmissionModule
{

////////////////////// EmissionModule ///////////////////////////////////////
// constructors

// fields

// properties
static void EmissionModule_enabled(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.ParticleSystem.EmissionModule _this = (UnityEngine.ParticleSystem.EmissionModule)vc.csObj;
        var result = _this.enabled;
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(result));
    }
    else
    { 
        System.Boolean arg0 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        UnityEngine.ParticleSystem.EmissionModule _this = (UnityEngine.ParticleSystem.EmissionModule)vc.csObj;
        _this.enabled = arg0;
        JSMgr.changeJSObj(vc.jsObjID, _this);
    }
}
static void EmissionModule_rate(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.ParticleSystem.EmissionModule _this = (UnityEngine.ParticleSystem.EmissionModule)vc.csObj;
        var result = _this.rate;
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, result);
    }
    else
    { 
        UnityEngine.ParticleSystem.MinMaxCurve arg0 = (UnityEngine.ParticleSystem.MinMaxCurve)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        UnityEngine.ParticleSystem.EmissionModule _this = (UnityEngine.ParticleSystem.EmissionModule)vc.csObj;
        _this.rate = arg0;
        JSMgr.changeJSObj(vc.jsObjID, _this);
    }
}
static void EmissionModule_type(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.ParticleSystem.EmissionModule _this = (UnityEngine.ParticleSystem.EmissionModule)vc.csObj;
        var result = _this.type;
                JSApi.setEnum((int)JSApi.SetType.Rval, (int)result);
    }
    else
    { 
        UnityEngine.ParticleSystemEmissionType arg0 = (UnityEngine.ParticleSystemEmissionType)JSApi.getEnum((int)JSApi.GetType.Arg);
        UnityEngine.ParticleSystem.EmissionModule _this = (UnityEngine.ParticleSystem.EmissionModule)vc.csObj;
        _this.type = arg0;
        JSMgr.changeJSObj(vc.jsObjID, _this);
    }
}
static void EmissionModule_burstCount(JSVCall vc)
{
        UnityEngine.ParticleSystem.EmissionModule _this = (UnityEngine.ParticleSystem.EmissionModule)vc.csObj;
        var result = _this.burstCount;
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(result));
}

// methods

static bool EmissionModule_GetBursts__Burst_Array(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        UnityEngine.ParticleSystem.Burst[] arg0 = JSDataExchangeMgr.GetJSArg<UnityEngine.ParticleSystem.Burst[]>(() =>
        {
            int jsObjID = JSApi.getObject((int)JSApi.GetType.Arg);
            int length = JSApi.getArrayLength(jsObjID);
            var ret = new UnityEngine.ParticleSystem.Burst[length];
            for (var i = 0; i < length; i++) {
                JSApi.getElement(jsObjID, i);
                ret[i] = (UnityEngine.ParticleSystem.Burst)JSMgr.datax.getObject((int)JSApi.GetType.SaveAndRemove);
            }
            return ret;
        });
UnityEngine.ParticleSystem.EmissionModule argThis = (UnityEngine.ParticleSystem.EmissionModule)vc.csObj;                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(argThis.GetBursts(arg0)));
        JSMgr.changeJSObj(vc.jsObjID, argThis);
    }

    return true;
}

static bool EmissionModule_SetBursts__Burst_Array__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        UnityEngine.ParticleSystem.Burst[] arg0 = JSDataExchangeMgr.GetJSArg<UnityEngine.ParticleSystem.Burst[]>(() =>
        {
            int jsObjID = JSApi.getObject((int)JSApi.GetType.Arg);
            int length = JSApi.getArrayLength(jsObjID);
            var ret = new UnityEngine.ParticleSystem.Burst[length];
            for (var i = 0; i < length; i++) {
                JSApi.getElement(jsObjID, i);
                ret[i] = (UnityEngine.ParticleSystem.Burst)JSMgr.datax.getObject((int)JSApi.GetType.SaveAndRemove);
            }
            return ret;
        });
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
UnityEngine.ParticleSystem.EmissionModule argThis = (UnityEngine.ParticleSystem.EmissionModule)vc.csObj;        argThis.SetBursts(arg0, arg1);
        JSMgr.changeJSObj(vc.jsObjID, argThis);
    }

    return true;
}

static bool EmissionModule_SetBursts__Burst_Array(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        UnityEngine.ParticleSystem.Burst[] arg0 = JSDataExchangeMgr.GetJSArg<UnityEngine.ParticleSystem.Burst[]>(() =>
        {
            int jsObjID = JSApi.getObject((int)JSApi.GetType.Arg);
            int length = JSApi.getArrayLength(jsObjID);
            var ret = new UnityEngine.ParticleSystem.Burst[length];
            for (var i = 0; i < length; i++) {
                JSApi.getElement(jsObjID, i);
                ret[i] = (UnityEngine.ParticleSystem.Burst)JSMgr.datax.getObject((int)JSApi.GetType.SaveAndRemove);
            }
            return ret;
        });
UnityEngine.ParticleSystem.EmissionModule argThis = (UnityEngine.ParticleSystem.EmissionModule)vc.csObj;        argThis.SetBursts(arg0);
        JSMgr.changeJSObj(vc.jsObjID, argThis);
    }

    return true;
}


//register

public static void __Register()
{
    JSMgr.CallbackInfo ci = new JSMgr.CallbackInfo();
    ci.type = typeof(UnityEngine.ParticleSystem.EmissionModule);
    ci.fields = new JSMgr.CSCallbackField[]
    {

    };
    ci.properties = new JSMgr.CSCallbackProperty[]
    {
        EmissionModule_enabled,
        EmissionModule_rate,
        EmissionModule_type,
        EmissionModule_burstCount,

    };
    ci.constructors = new JSMgr.MethodCallBackInfo[]
    {

    };
    ci.methods = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(EmissionModule_GetBursts__Burst_Array, "GetBursts"),
        new JSMgr.MethodCallBackInfo(EmissionModule_SetBursts__Burst_Array__Int32, "SetBursts"),
        new JSMgr.MethodCallBackInfo(EmissionModule_SetBursts__Burst_Array, "SetBursts"),

    };
    JSMgr.allCallbackInfo.Add(ci);
}


}
