
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by CSGenerator.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;

using jsval = JSApi.jsval;

public class JSB_UnityEngine_AssetBundleRequest
{

////////////////////// AssetBundleRequest ///////////////////////////////////////
// constructors

static bool AssetBundleRequest_AssetBundleRequest1(JSVCall vc, int argc)
{
    int _this = JSApi.getObject((int)JSApi.GetType.Arg);
    JSApi.attachFinalizerObject(_this);
    --argc;

    int len = argc;
    if (len == 0)
    {
        JSMgr.addJSCSRel(_this, new UnityEngine.AssetBundleRequest());
    }

    return true;
}

// fields

// properties
static void AssetBundleRequest_asset(JSVCall vc)
{
        UnityEngine.AssetBundleRequest _this = (UnityEngine.AssetBundleRequest)vc.csObj;
        var result = _this.asset;
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, result);
}
static void AssetBundleRequest_allAssets(JSVCall vc)
{
        UnityEngine.AssetBundleRequest _this = (UnityEngine.AssetBundleRequest)vc.csObj;
        var result = _this.allAssets;
                var arrRet = result;
        for (int i = 0; arrRet != null && i < arrRet.Length; i++)
        {
            JSMgr.datax.setObject((int)JSApi.SetType.SaveAndTempTrace, arrRet[i]);
            JSApi.moveSaveID2Arr(i);
        }
        JSApi.setArrayS((int)JSApi.SetType.Rval, (arrRet != null ? arrRet.Length : 0), true);
}

// methods


//register

public static void __Register()
{
    JSMgr.CallbackInfo ci = new JSMgr.CallbackInfo();
    ci.type = typeof(UnityEngine.AssetBundleRequest);
    ci.fields = new JSMgr.CSCallbackField[]
    {

    };
    ci.properties = new JSMgr.CSCallbackProperty[]
    {
        AssetBundleRequest_asset,
        AssetBundleRequest_allAssets,

    };
    ci.constructors = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(AssetBundleRequest_AssetBundleRequest1, ".ctor"),

    };
    ci.methods = new JSMgr.MethodCallBackInfo[]
    {

    };
    JSMgr.allCallbackInfo.Add(ci);
}


}
