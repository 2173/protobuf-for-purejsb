
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by CSGenerator.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;

using jsval = JSApi.jsval;

public class JSB_UnityEngine_GUIUtility
{

////////////////////// GUIUtility ///////////////////////////////////////
// constructors

static bool GUIUtility_GUIUtility1(JSVCall vc, int argc)
{
    int _this = JSApi.getObject((int)JSApi.GetType.Arg);
    JSApi.attachFinalizerObject(_this);
    --argc;

    int len = argc;
    if (len == 0)
    {
        JSMgr.addJSCSRel(_this, new UnityEngine.GUIUtility());
    }

    return true;
}

// fields

// properties
static void GUIUtility_hotControl(JSVCall vc)
{
    if (vc.bGet)
    { 
        var result = UnityEngine.GUIUtility.hotControl;
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(result));
    }
    else
    { 
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        UnityEngine.GUIUtility.hotControl = arg0;
    }
}
static void GUIUtility_keyboardControl(JSVCall vc)
{
    if (vc.bGet)
    { 
        var result = UnityEngine.GUIUtility.keyboardControl;
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(result));
    }
    else
    { 
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        UnityEngine.GUIUtility.keyboardControl = arg0;
    }
}
static void GUIUtility_systemCopyBuffer(JSVCall vc)
{
    if (vc.bGet)
    { 
        var result = UnityEngine.GUIUtility.systemCopyBuffer;
                JSApi.setStringS((int)JSApi.SetType.Rval, result);
    }
    else
    { 
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        UnityEngine.GUIUtility.systemCopyBuffer = arg0;
    }
}
static void GUIUtility_hasModalWindow(JSVCall vc)
{
        var result = UnityEngine.GUIUtility.hasModalWindow;
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(result));
}

// methods

static bool GUIUtility_ExitGUI(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
        UnityEngine.GUIUtility.ExitGUI();
    }

    return true;
}

static bool GUIUtility_GetControlID__Int32__FocusType__Rect(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 3) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        UnityEngine.FocusType arg1 = (UnityEngine.FocusType)JSApi.getEnum((int)JSApi.GetType.Arg);
        UnityEngine.Rect arg2 = (UnityEngine.Rect)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(UnityEngine.GUIUtility.GetControlID(arg0, arg1, arg2)));
    }

    return true;
}

static bool GUIUtility_GetControlID__GUIContent__FocusType__Rect(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 3) 
    {
        UnityEngine.GUIContent arg0 = (UnityEngine.GUIContent)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        UnityEngine.FocusType arg1 = (UnityEngine.FocusType)JSApi.getEnum((int)JSApi.GetType.Arg);
        UnityEngine.Rect arg2 = (UnityEngine.Rect)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(UnityEngine.GUIUtility.GetControlID(arg0, arg1, arg2)));
    }

    return true;
}

static bool GUIUtility_GetControlID__Int32__FocusType(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        UnityEngine.FocusType arg1 = (UnityEngine.FocusType)JSApi.getEnum((int)JSApi.GetType.Arg);
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(UnityEngine.GUIUtility.GetControlID(arg0, arg1)));
    }

    return true;
}

static bool GUIUtility_GetControlID__GUIContent__FocusType(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        UnityEngine.GUIContent arg0 = (UnityEngine.GUIContent)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        UnityEngine.FocusType arg1 = (UnityEngine.FocusType)JSApi.getEnum((int)JSApi.GetType.Arg);
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(UnityEngine.GUIUtility.GetControlID(arg0, arg1)));
    }

    return true;
}

static bool GUIUtility_GetControlID__FocusType__Rect(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        UnityEngine.FocusType arg0 = (UnityEngine.FocusType)JSApi.getEnum((int)JSApi.GetType.Arg);
        UnityEngine.Rect arg1 = (UnityEngine.Rect)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(UnityEngine.GUIUtility.GetControlID(arg0, arg1)));
    }

    return true;
}

static bool GUIUtility_GetControlID__FocusType(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        UnityEngine.FocusType arg0 = (UnityEngine.FocusType)JSApi.getEnum((int)JSApi.GetType.Arg);
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(UnityEngine.GUIUtility.GetControlID(arg0)));
    }

    return true;
}

static bool GUIUtility_GetStateObject__Type__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Type arg0 = (System.Type)JSDataExchangeMgr.GetTypeByJsParam((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                JSMgr.datax.setWhatever((int)JSApi.SetType.Rval, UnityEngine.GUIUtility.GetStateObject(arg0, arg1));
    }

    return true;
}

static bool GUIUtility_GUIToScreenPoint__Vector2(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        UnityEngine.Vector2 arg0 = (UnityEngine.Vector2)JSApi.getVector2S((int)JSApi.GetType.Arg);
                JSApi.setVector2S((int)JSApi.SetType.Rval, UnityEngine.GUIUtility.GUIToScreenPoint(arg0));
    }

    return true;
}

static bool GUIUtility_QueryStateObject__Type__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Type arg0 = (System.Type)JSDataExchangeMgr.GetTypeByJsParam((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                JSMgr.datax.setWhatever((int)JSApi.SetType.Rval, UnityEngine.GUIUtility.QueryStateObject(arg0, arg1));
    }

    return true;
}

static bool GUIUtility_RotateAroundPivot__Single__Vector2(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.Vector2 arg1 = (UnityEngine.Vector2)JSApi.getVector2S((int)JSApi.GetType.Arg);
        UnityEngine.GUIUtility.RotateAroundPivot(arg0, arg1);
    }

    return true;
}

static bool GUIUtility_ScaleAroundPivot__Vector2__Vector2(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        UnityEngine.Vector2 arg0 = (UnityEngine.Vector2)JSApi.getVector2S((int)JSApi.GetType.Arg);
        UnityEngine.Vector2 arg1 = (UnityEngine.Vector2)JSApi.getVector2S((int)JSApi.GetType.Arg);
        UnityEngine.GUIUtility.ScaleAroundPivot(arg0, arg1);
    }

    return true;
}

static bool GUIUtility_ScreenToGUIPoint__Vector2(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        UnityEngine.Vector2 arg0 = (UnityEngine.Vector2)JSApi.getVector2S((int)JSApi.GetType.Arg);
                JSApi.setVector2S((int)JSApi.SetType.Rval, UnityEngine.GUIUtility.ScreenToGUIPoint(arg0));
    }

    return true;
}

static bool GUIUtility_ScreenToGUIRect__Rect(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        UnityEngine.Rect arg0 = (UnityEngine.Rect)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, UnityEngine.GUIUtility.ScreenToGUIRect(arg0));
    }

    return true;
}


//register

public static void __Register()
{
    JSMgr.CallbackInfo ci = new JSMgr.CallbackInfo();
    ci.type = typeof(UnityEngine.GUIUtility);
    ci.fields = new JSMgr.CSCallbackField[]
    {

    };
    ci.properties = new JSMgr.CSCallbackProperty[]
    {
        GUIUtility_hotControl,
        GUIUtility_keyboardControl,
        GUIUtility_systemCopyBuffer,
        GUIUtility_hasModalWindow,

    };
    ci.constructors = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(GUIUtility_GUIUtility1, ".ctor"),

    };
    ci.methods = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(GUIUtility_ExitGUI, "ExitGUI"),
        new JSMgr.MethodCallBackInfo(GUIUtility_GetControlID__Int32__FocusType__Rect, "GetControlID"),
        new JSMgr.MethodCallBackInfo(GUIUtility_GetControlID__GUIContent__FocusType__Rect, "GetControlID"),
        new JSMgr.MethodCallBackInfo(GUIUtility_GetControlID__Int32__FocusType, "GetControlID"),
        new JSMgr.MethodCallBackInfo(GUIUtility_GetControlID__GUIContent__FocusType, "GetControlID"),
        new JSMgr.MethodCallBackInfo(GUIUtility_GetControlID__FocusType__Rect, "GetControlID"),
        new JSMgr.MethodCallBackInfo(GUIUtility_GetControlID__FocusType, "GetControlID"),
        new JSMgr.MethodCallBackInfo(GUIUtility_GetStateObject__Type__Int32, "GetStateObject"),
        new JSMgr.MethodCallBackInfo(GUIUtility_GUIToScreenPoint__Vector2, "GUIToScreenPoint"),
        new JSMgr.MethodCallBackInfo(GUIUtility_QueryStateObject__Type__Int32, "QueryStateObject"),
        new JSMgr.MethodCallBackInfo(GUIUtility_RotateAroundPivot__Single__Vector2, "RotateAroundPivot"),
        new JSMgr.MethodCallBackInfo(GUIUtility_ScaleAroundPivot__Vector2__Vector2, "ScaleAroundPivot"),
        new JSMgr.MethodCallBackInfo(GUIUtility_ScreenToGUIPoint__Vector2, "ScreenToGUIPoint"),
        new JSMgr.MethodCallBackInfo(GUIUtility_ScreenToGUIRect__Rect, "ScreenToGUIRect"),

    };
    JSMgr.allCallbackInfo.Add(ci);
}


}
