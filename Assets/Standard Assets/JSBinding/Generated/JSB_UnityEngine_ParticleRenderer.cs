
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by CSGenerator.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;

using jsval = JSApi.jsval;

public class JSB_UnityEngine_ParticleRenderer
{

////////////////////// ParticleRenderer ///////////////////////////////////////
// constructors

static bool ParticleRenderer_ParticleRenderer1(JSVCall vc, int argc)
{
    int _this = JSApi.getObject((int)JSApi.GetType.Arg);
    JSApi.attachFinalizerObject(_this);
    --argc;

    int len = argc;
    if (len == 0)
    {
        JSMgr.addJSCSRel(_this, new UnityEngine.ParticleRenderer());
    }

    return true;
}

// fields

// properties
static void ParticleRenderer_particleRenderMode(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.ParticleRenderer _this = (UnityEngine.ParticleRenderer)vc.csObj;
        var result = _this.particleRenderMode;
                JSApi.setEnum((int)JSApi.SetType.Rval, (int)result);
    }
    else
    { 
        UnityEngine.ParticleRenderMode arg0 = (UnityEngine.ParticleRenderMode)JSApi.getEnum((int)JSApi.GetType.Arg);
        UnityEngine.ParticleRenderer _this = (UnityEngine.ParticleRenderer)vc.csObj;
        _this.particleRenderMode = arg0;
    }
}
static void ParticleRenderer_lengthScale(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.ParticleRenderer _this = (UnityEngine.ParticleRenderer)vc.csObj;
        var result = _this.lengthScale;
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(result));
    }
    else
    { 
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.ParticleRenderer _this = (UnityEngine.ParticleRenderer)vc.csObj;
        _this.lengthScale = arg0;
    }
}
static void ParticleRenderer_velocityScale(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.ParticleRenderer _this = (UnityEngine.ParticleRenderer)vc.csObj;
        var result = _this.velocityScale;
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(result));
    }
    else
    { 
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.ParticleRenderer _this = (UnityEngine.ParticleRenderer)vc.csObj;
        _this.velocityScale = arg0;
    }
}
static void ParticleRenderer_cameraVelocityScale(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.ParticleRenderer _this = (UnityEngine.ParticleRenderer)vc.csObj;
        var result = _this.cameraVelocityScale;
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(result));
    }
    else
    { 
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.ParticleRenderer _this = (UnityEngine.ParticleRenderer)vc.csObj;
        _this.cameraVelocityScale = arg0;
    }
}
static void ParticleRenderer_maxParticleSize(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.ParticleRenderer _this = (UnityEngine.ParticleRenderer)vc.csObj;
        var result = _this.maxParticleSize;
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(result));
    }
    else
    { 
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.ParticleRenderer _this = (UnityEngine.ParticleRenderer)vc.csObj;
        _this.maxParticleSize = arg0;
    }
}
static void ParticleRenderer_uvAnimationXTile(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.ParticleRenderer _this = (UnityEngine.ParticleRenderer)vc.csObj;
        var result = _this.uvAnimationXTile;
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(result));
    }
    else
    { 
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        UnityEngine.ParticleRenderer _this = (UnityEngine.ParticleRenderer)vc.csObj;
        _this.uvAnimationXTile = arg0;
    }
}
static void ParticleRenderer_uvAnimationYTile(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.ParticleRenderer _this = (UnityEngine.ParticleRenderer)vc.csObj;
        var result = _this.uvAnimationYTile;
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(result));
    }
    else
    { 
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        UnityEngine.ParticleRenderer _this = (UnityEngine.ParticleRenderer)vc.csObj;
        _this.uvAnimationYTile = arg0;
    }
}
static void ParticleRenderer_uvAnimationCycles(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.ParticleRenderer _this = (UnityEngine.ParticleRenderer)vc.csObj;
        var result = _this.uvAnimationCycles;
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(result));
    }
    else
    { 
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.ParticleRenderer _this = (UnityEngine.ParticleRenderer)vc.csObj;
        _this.uvAnimationCycles = arg0;
    }
}
static void ParticleRenderer_maxPartileSize(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.ParticleRenderer _this = (UnityEngine.ParticleRenderer)vc.csObj;
        var result = _this.maxPartileSize;
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(result));
    }
    else
    { 
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.ParticleRenderer _this = (UnityEngine.ParticleRenderer)vc.csObj;
        _this.maxPartileSize = arg0;
    }
}
static void ParticleRenderer_uvTiles(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.ParticleRenderer _this = (UnityEngine.ParticleRenderer)vc.csObj;
        var result = _this.uvTiles;
                var arrRet = result;
        for (int i = 0; arrRet != null && i < arrRet.Length; i++)
        {
            JSMgr.datax.setObject((int)JSApi.SetType.SaveAndTempTrace, arrRet[i]);
            JSApi.moveSaveID2Arr(i);
        }
        JSApi.setArrayS((int)JSApi.SetType.Rval, (arrRet != null ? arrRet.Length : 0), true);
    }
    else
    { 
        UnityEngine.Rect[] arg0 = JSDataExchangeMgr.GetJSArg<UnityEngine.Rect[]>(() =>
        {
            int jsObjID = JSApi.getObject((int)JSApi.GetType.Arg);
            int length = JSApi.getArrayLength(jsObjID);
            var ret = new UnityEngine.Rect[length];
            for (var i = 0; i < length; i++) {
                JSApi.getElement(jsObjID, i);
                ret[i] = (UnityEngine.Rect)JSMgr.datax.getObject((int)JSApi.GetType.SaveAndRemove);
            }
            return ret;
        });
        UnityEngine.ParticleRenderer _this = (UnityEngine.ParticleRenderer)vc.csObj;
        _this.uvTiles = arg0;
    }
}

// methods


//register

public static void __Register()
{
    JSMgr.CallbackInfo ci = new JSMgr.CallbackInfo();
    ci.type = typeof(UnityEngine.ParticleRenderer);
    ci.fields = new JSMgr.CSCallbackField[]
    {

    };
    ci.properties = new JSMgr.CSCallbackProperty[]
    {
        ParticleRenderer_particleRenderMode,
        ParticleRenderer_lengthScale,
        ParticleRenderer_velocityScale,
        ParticleRenderer_cameraVelocityScale,
        ParticleRenderer_maxParticleSize,
        ParticleRenderer_uvAnimationXTile,
        ParticleRenderer_uvAnimationYTile,
        ParticleRenderer_uvAnimationCycles,
        ParticleRenderer_maxPartileSize,
        ParticleRenderer_uvTiles,

    };
    ci.constructors = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(ParticleRenderer_ParticleRenderer1, ".ctor"),

    };
    ci.methods = new JSMgr.MethodCallBackInfo[]
    {

    };
    JSMgr.allCallbackInfo.Add(ci);
}


}
