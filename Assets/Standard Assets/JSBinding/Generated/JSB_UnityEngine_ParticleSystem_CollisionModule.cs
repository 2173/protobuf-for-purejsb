
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by CSGenerator.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;

using jsval = JSApi.jsval;

public class JSB_UnityEngine_ParticleSystem_CollisionModule
{

////////////////////// CollisionModule ///////////////////////////////////////
// constructors

// fields

// properties
static void CollisionModule_enabled(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.ParticleSystem.CollisionModule _this = (UnityEngine.ParticleSystem.CollisionModule)vc.csObj;
        var result = _this.enabled;
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(result));
    }
    else
    { 
        System.Boolean arg0 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        UnityEngine.ParticleSystem.CollisionModule _this = (UnityEngine.ParticleSystem.CollisionModule)vc.csObj;
        _this.enabled = arg0;
        JSMgr.changeJSObj(vc.jsObjID, _this);
    }
}
static void CollisionModule_type(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.ParticleSystem.CollisionModule _this = (UnityEngine.ParticleSystem.CollisionModule)vc.csObj;
        var result = _this.type;
                JSApi.setEnum((int)JSApi.SetType.Rval, (int)result);
    }
    else
    { 
        UnityEngine.ParticleSystemCollisionType arg0 = (UnityEngine.ParticleSystemCollisionType)JSApi.getEnum((int)JSApi.GetType.Arg);
        UnityEngine.ParticleSystem.CollisionModule _this = (UnityEngine.ParticleSystem.CollisionModule)vc.csObj;
        _this.type = arg0;
        JSMgr.changeJSObj(vc.jsObjID, _this);
    }
}
static void CollisionModule_mode(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.ParticleSystem.CollisionModule _this = (UnityEngine.ParticleSystem.CollisionModule)vc.csObj;
        var result = _this.mode;
                JSApi.setEnum((int)JSApi.SetType.Rval, (int)result);
    }
    else
    { 
        UnityEngine.ParticleSystemCollisionMode arg0 = (UnityEngine.ParticleSystemCollisionMode)JSApi.getEnum((int)JSApi.GetType.Arg);
        UnityEngine.ParticleSystem.CollisionModule _this = (UnityEngine.ParticleSystem.CollisionModule)vc.csObj;
        _this.mode = arg0;
        JSMgr.changeJSObj(vc.jsObjID, _this);
    }
}
static void CollisionModule_dampen(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.ParticleSystem.CollisionModule _this = (UnityEngine.ParticleSystem.CollisionModule)vc.csObj;
        var result = _this.dampen;
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, result);
    }
    else
    { 
        UnityEngine.ParticleSystem.MinMaxCurve arg0 = (UnityEngine.ParticleSystem.MinMaxCurve)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        UnityEngine.ParticleSystem.CollisionModule _this = (UnityEngine.ParticleSystem.CollisionModule)vc.csObj;
        _this.dampen = arg0;
        JSMgr.changeJSObj(vc.jsObjID, _this);
    }
}
static void CollisionModule_bounce(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.ParticleSystem.CollisionModule _this = (UnityEngine.ParticleSystem.CollisionModule)vc.csObj;
        var result = _this.bounce;
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, result);
    }
    else
    { 
        UnityEngine.ParticleSystem.MinMaxCurve arg0 = (UnityEngine.ParticleSystem.MinMaxCurve)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        UnityEngine.ParticleSystem.CollisionModule _this = (UnityEngine.ParticleSystem.CollisionModule)vc.csObj;
        _this.bounce = arg0;
        JSMgr.changeJSObj(vc.jsObjID, _this);
    }
}
static void CollisionModule_lifetimeLoss(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.ParticleSystem.CollisionModule _this = (UnityEngine.ParticleSystem.CollisionModule)vc.csObj;
        var result = _this.lifetimeLoss;
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, result);
    }
    else
    { 
        UnityEngine.ParticleSystem.MinMaxCurve arg0 = (UnityEngine.ParticleSystem.MinMaxCurve)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        UnityEngine.ParticleSystem.CollisionModule _this = (UnityEngine.ParticleSystem.CollisionModule)vc.csObj;
        _this.lifetimeLoss = arg0;
        JSMgr.changeJSObj(vc.jsObjID, _this);
    }
}
static void CollisionModule_minKillSpeed(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.ParticleSystem.CollisionModule _this = (UnityEngine.ParticleSystem.CollisionModule)vc.csObj;
        var result = _this.minKillSpeed;
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(result));
    }
    else
    { 
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.ParticleSystem.CollisionModule _this = (UnityEngine.ParticleSystem.CollisionModule)vc.csObj;
        _this.minKillSpeed = arg0;
        JSMgr.changeJSObj(vc.jsObjID, _this);
    }
}
static void CollisionModule_collidesWith(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.ParticleSystem.CollisionModule _this = (UnityEngine.ParticleSystem.CollisionModule)vc.csObj;
        var result = _this.collidesWith;
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, result);
    }
    else
    { 
        UnityEngine.LayerMask arg0 = (UnityEngine.LayerMask)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        UnityEngine.ParticleSystem.CollisionModule _this = (UnityEngine.ParticleSystem.CollisionModule)vc.csObj;
        _this.collidesWith = arg0;
        JSMgr.changeJSObj(vc.jsObjID, _this);
    }
}
static void CollisionModule_enableDynamicColliders(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.ParticleSystem.CollisionModule _this = (UnityEngine.ParticleSystem.CollisionModule)vc.csObj;
        var result = _this.enableDynamicColliders;
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(result));
    }
    else
    { 
        System.Boolean arg0 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        UnityEngine.ParticleSystem.CollisionModule _this = (UnityEngine.ParticleSystem.CollisionModule)vc.csObj;
        _this.enableDynamicColliders = arg0;
        JSMgr.changeJSObj(vc.jsObjID, _this);
    }
}
static void CollisionModule_enableInteriorCollisions(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.ParticleSystem.CollisionModule _this = (UnityEngine.ParticleSystem.CollisionModule)vc.csObj;
        var result = _this.enableInteriorCollisions;
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(result));
    }
    else
    { 
        System.Boolean arg0 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        UnityEngine.ParticleSystem.CollisionModule _this = (UnityEngine.ParticleSystem.CollisionModule)vc.csObj;
        _this.enableInteriorCollisions = arg0;
        JSMgr.changeJSObj(vc.jsObjID, _this);
    }
}
static void CollisionModule_maxCollisionShapes(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.ParticleSystem.CollisionModule _this = (UnityEngine.ParticleSystem.CollisionModule)vc.csObj;
        var result = _this.maxCollisionShapes;
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(result));
    }
    else
    { 
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        UnityEngine.ParticleSystem.CollisionModule _this = (UnityEngine.ParticleSystem.CollisionModule)vc.csObj;
        _this.maxCollisionShapes = arg0;
        JSMgr.changeJSObj(vc.jsObjID, _this);
    }
}
static void CollisionModule_quality(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.ParticleSystem.CollisionModule _this = (UnityEngine.ParticleSystem.CollisionModule)vc.csObj;
        var result = _this.quality;
                JSApi.setEnum((int)JSApi.SetType.Rval, (int)result);
    }
    else
    { 
        UnityEngine.ParticleSystemCollisionQuality arg0 = (UnityEngine.ParticleSystemCollisionQuality)JSApi.getEnum((int)JSApi.GetType.Arg);
        UnityEngine.ParticleSystem.CollisionModule _this = (UnityEngine.ParticleSystem.CollisionModule)vc.csObj;
        _this.quality = arg0;
        JSMgr.changeJSObj(vc.jsObjID, _this);
    }
}
static void CollisionModule_voxelSize(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.ParticleSystem.CollisionModule _this = (UnityEngine.ParticleSystem.CollisionModule)vc.csObj;
        var result = _this.voxelSize;
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(result));
    }
    else
    { 
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.ParticleSystem.CollisionModule _this = (UnityEngine.ParticleSystem.CollisionModule)vc.csObj;
        _this.voxelSize = arg0;
        JSMgr.changeJSObj(vc.jsObjID, _this);
    }
}
static void CollisionModule_radiusScale(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.ParticleSystem.CollisionModule _this = (UnityEngine.ParticleSystem.CollisionModule)vc.csObj;
        var result = _this.radiusScale;
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(result));
    }
    else
    { 
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.ParticleSystem.CollisionModule _this = (UnityEngine.ParticleSystem.CollisionModule)vc.csObj;
        _this.radiusScale = arg0;
        JSMgr.changeJSObj(vc.jsObjID, _this);
    }
}
static void CollisionModule_sendCollisionMessages(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.ParticleSystem.CollisionModule _this = (UnityEngine.ParticleSystem.CollisionModule)vc.csObj;
        var result = _this.sendCollisionMessages;
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(result));
    }
    else
    { 
        System.Boolean arg0 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        UnityEngine.ParticleSystem.CollisionModule _this = (UnityEngine.ParticleSystem.CollisionModule)vc.csObj;
        _this.sendCollisionMessages = arg0;
        JSMgr.changeJSObj(vc.jsObjID, _this);
    }
}
static void CollisionModule_maxPlaneCount(JSVCall vc)
{
        UnityEngine.ParticleSystem.CollisionModule _this = (UnityEngine.ParticleSystem.CollisionModule)vc.csObj;
        var result = _this.maxPlaneCount;
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(result));
}

// methods

static bool CollisionModule_GetPlane__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
UnityEngine.ParticleSystem.CollisionModule argThis = (UnityEngine.ParticleSystem.CollisionModule)vc.csObj;                JSMgr.datax.setObject((int)JSApi.SetType.Rval, argThis.GetPlane(arg0));
        JSMgr.changeJSObj(vc.jsObjID, argThis);
    }

    return true;
}

static bool CollisionModule_SetPlane__Int32__Transform(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        UnityEngine.Transform arg1 = (UnityEngine.Transform)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
UnityEngine.ParticleSystem.CollisionModule argThis = (UnityEngine.ParticleSystem.CollisionModule)vc.csObj;        argThis.SetPlane(arg0, arg1);
        JSMgr.changeJSObj(vc.jsObjID, argThis);
    }

    return true;
}


//register

public static void __Register()
{
    JSMgr.CallbackInfo ci = new JSMgr.CallbackInfo();
    ci.type = typeof(UnityEngine.ParticleSystem.CollisionModule);
    ci.fields = new JSMgr.CSCallbackField[]
    {

    };
    ci.properties = new JSMgr.CSCallbackProperty[]
    {
        CollisionModule_enabled,
        CollisionModule_type,
        CollisionModule_mode,
        CollisionModule_dampen,
        CollisionModule_bounce,
        CollisionModule_lifetimeLoss,
        CollisionModule_minKillSpeed,
        CollisionModule_collidesWith,
        CollisionModule_enableDynamicColliders,
        CollisionModule_enableInteriorCollisions,
        CollisionModule_maxCollisionShapes,
        CollisionModule_quality,
        CollisionModule_voxelSize,
        CollisionModule_radiusScale,
        CollisionModule_sendCollisionMessages,
        CollisionModule_maxPlaneCount,

    };
    ci.constructors = new JSMgr.MethodCallBackInfo[]
    {

    };
    ci.methods = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(CollisionModule_GetPlane__Int32, "GetPlane"),
        new JSMgr.MethodCallBackInfo(CollisionModule_SetPlane__Int32__Transform, "SetPlane"),

    };
    JSMgr.allCallbackInfo.Add(ci);
}


}
