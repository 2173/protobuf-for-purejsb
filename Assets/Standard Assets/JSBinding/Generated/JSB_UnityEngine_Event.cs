
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by CSGenerator.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;

using jsval = JSApi.jsval;

public class JSB_UnityEngine_Event
{

////////////////////// Event ///////////////////////////////////////
// constructors

static bool Event_Event1(JSVCall vc, int argc)
{
    int _this = JSApi.getObject((int)JSApi.GetType.Arg);
    JSApi.attachFinalizerObject(_this);
    --argc;

    int len = argc;
    if (len == 0)
    {
        JSMgr.addJSCSRel(_this, new UnityEngine.Event());
    }

    return true;
}

static bool Event_Event2(JSVCall vc, int argc)
{
    int _this = JSApi.getObject((int)JSApi.GetType.Arg);
    JSApi.attachFinalizerObject(_this);
    --argc;

    int len = argc;
    if (len == 1)
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        JSMgr.addJSCSRel(_this, new UnityEngine.Event(arg0));
    }

    return true;
}

static bool Event_Event3(JSVCall vc, int argc)
{
    int _this = JSApi.getObject((int)JSApi.GetType.Arg);
    JSApi.attachFinalizerObject(_this);
    --argc;

    int len = argc;
    if (len == 1)
    {
        UnityEngine.Event arg0 = (UnityEngine.Event)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        JSMgr.addJSCSRel(_this, new UnityEngine.Event(arg0));
    }

    return true;
}

// fields

// properties
static void Event_mousePosition(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.Event _this = (UnityEngine.Event)vc.csObj;
        var result = _this.mousePosition;
                JSApi.setVector2S((int)JSApi.SetType.Rval, result);
    }
    else
    { 
        UnityEngine.Vector2 arg0 = (UnityEngine.Vector2)JSApi.getVector2S((int)JSApi.GetType.Arg);
        UnityEngine.Event _this = (UnityEngine.Event)vc.csObj;
        _this.mousePosition = arg0;
    }
}
static void Event_delta(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.Event _this = (UnityEngine.Event)vc.csObj;
        var result = _this.delta;
                JSApi.setVector2S((int)JSApi.SetType.Rval, result);
    }
    else
    { 
        UnityEngine.Vector2 arg0 = (UnityEngine.Vector2)JSApi.getVector2S((int)JSApi.GetType.Arg);
        UnityEngine.Event _this = (UnityEngine.Event)vc.csObj;
        _this.delta = arg0;
    }
}
static void Event_shift(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.Event _this = (UnityEngine.Event)vc.csObj;
        var result = _this.shift;
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(result));
    }
    else
    { 
        System.Boolean arg0 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        UnityEngine.Event _this = (UnityEngine.Event)vc.csObj;
        _this.shift = arg0;
    }
}
static void Event_control(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.Event _this = (UnityEngine.Event)vc.csObj;
        var result = _this.control;
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(result));
    }
    else
    { 
        System.Boolean arg0 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        UnityEngine.Event _this = (UnityEngine.Event)vc.csObj;
        _this.control = arg0;
    }
}
static void Event_alt(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.Event _this = (UnityEngine.Event)vc.csObj;
        var result = _this.alt;
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(result));
    }
    else
    { 
        System.Boolean arg0 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        UnityEngine.Event _this = (UnityEngine.Event)vc.csObj;
        _this.alt = arg0;
    }
}
static void Event_command(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.Event _this = (UnityEngine.Event)vc.csObj;
        var result = _this.command;
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(result));
    }
    else
    { 
        System.Boolean arg0 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        UnityEngine.Event _this = (UnityEngine.Event)vc.csObj;
        _this.command = arg0;
    }
}
static void Event_capsLock(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.Event _this = (UnityEngine.Event)vc.csObj;
        var result = _this.capsLock;
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(result));
    }
    else
    { 
        System.Boolean arg0 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        UnityEngine.Event _this = (UnityEngine.Event)vc.csObj;
        _this.capsLock = arg0;
    }
}
static void Event_numeric(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.Event _this = (UnityEngine.Event)vc.csObj;
        var result = _this.numeric;
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(result));
    }
    else
    { 
        System.Boolean arg0 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        UnityEngine.Event _this = (UnityEngine.Event)vc.csObj;
        _this.numeric = arg0;
    }
}
static void Event_functionKey(JSVCall vc)
{
        UnityEngine.Event _this = (UnityEngine.Event)vc.csObj;
        var result = _this.functionKey;
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(result));
}
static void Event_current(JSVCall vc)
{
    if (vc.bGet)
    { 
        var result = UnityEngine.Event.current;
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, result);
    }
    else
    { 
        UnityEngine.Event arg0 = (UnityEngine.Event)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        UnityEngine.Event.current = arg0;
    }
}
static void Event_isKey(JSVCall vc)
{
        UnityEngine.Event _this = (UnityEngine.Event)vc.csObj;
        var result = _this.isKey;
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(result));
}
static void Event_isMouse(JSVCall vc)
{
        UnityEngine.Event _this = (UnityEngine.Event)vc.csObj;
        var result = _this.isMouse;
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(result));
}
static void Event_rawType(JSVCall vc)
{
        UnityEngine.Event _this = (UnityEngine.Event)vc.csObj;
        var result = _this.rawType;
                JSApi.setEnum((int)JSApi.SetType.Rval, (int)result);
}
static void Event_type(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.Event _this = (UnityEngine.Event)vc.csObj;
        var result = _this.type;
                JSApi.setEnum((int)JSApi.SetType.Rval, (int)result);
    }
    else
    { 
        UnityEngine.EventType arg0 = (UnityEngine.EventType)JSApi.getEnum((int)JSApi.GetType.Arg);
        UnityEngine.Event _this = (UnityEngine.Event)vc.csObj;
        _this.type = arg0;
    }
}
static void Event_button(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.Event _this = (UnityEngine.Event)vc.csObj;
        var result = _this.button;
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(result));
    }
    else
    { 
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        UnityEngine.Event _this = (UnityEngine.Event)vc.csObj;
        _this.button = arg0;
    }
}
static void Event_modifiers(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.Event _this = (UnityEngine.Event)vc.csObj;
        var result = _this.modifiers;
                JSApi.setEnum((int)JSApi.SetType.Rval, (int)result);
    }
    else
    { 
        UnityEngine.EventModifiers arg0 = (UnityEngine.EventModifiers)JSApi.getEnum((int)JSApi.GetType.Arg);
        UnityEngine.Event _this = (UnityEngine.Event)vc.csObj;
        _this.modifiers = arg0;
    }
}
static void Event_pressure(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.Event _this = (UnityEngine.Event)vc.csObj;
        var result = _this.pressure;
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(result));
    }
    else
    { 
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.Event _this = (UnityEngine.Event)vc.csObj;
        _this.pressure = arg0;
    }
}
static void Event_clickCount(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.Event _this = (UnityEngine.Event)vc.csObj;
        var result = _this.clickCount;
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(result));
    }
    else
    { 
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        UnityEngine.Event _this = (UnityEngine.Event)vc.csObj;
        _this.clickCount = arg0;
    }
}
static void Event_character(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.Event _this = (UnityEngine.Event)vc.csObj;
        var result = _this.character;
                JSApi.setChar((int)JSApi.SetType.Rval, (System.Char)(result));
    }
    else
    { 
        System.Char arg0 = (System.Char)JSApi.getChar((int)JSApi.GetType.Arg);
        UnityEngine.Event _this = (UnityEngine.Event)vc.csObj;
        _this.character = arg0;
    }
}
static void Event_commandName(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.Event _this = (UnityEngine.Event)vc.csObj;
        var result = _this.commandName;
                JSApi.setStringS((int)JSApi.SetType.Rval, result);
    }
    else
    { 
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        UnityEngine.Event _this = (UnityEngine.Event)vc.csObj;
        _this.commandName = arg0;
    }
}
static void Event_keyCode(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.Event _this = (UnityEngine.Event)vc.csObj;
        var result = _this.keyCode;
                JSApi.setEnum((int)JSApi.SetType.Rval, (int)result);
    }
    else
    { 
        UnityEngine.KeyCode arg0 = (UnityEngine.KeyCode)JSApi.getEnum((int)JSApi.GetType.Arg);
        UnityEngine.Event _this = (UnityEngine.Event)vc.csObj;
        _this.keyCode = arg0;
    }
}
static void Event_displayIndex(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.Event _this = (UnityEngine.Event)vc.csObj;
        var result = _this.displayIndex;
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(result));
    }
    else
    { 
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        UnityEngine.Event _this = (UnityEngine.Event)vc.csObj;
        _this.displayIndex = arg0;
    }
}

// methods

static bool Event_Equals__Object(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Object arg0 = (System.Object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(((UnityEngine.Event)vc.csObj).Equals(arg0)));
    }

    return true;
}

static bool Event_GetHashCode(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(((UnityEngine.Event)vc.csObj).GetHashCode()));
    }

    return true;
}

static bool Event_GetTypeForControl__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                JSApi.setEnum((int)JSApi.SetType.Rval, (int)((UnityEngine.Event)vc.csObj).GetTypeForControl(arg0));
    }

    return true;
}

static bool Event_ToString(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
                JSApi.setStringS((int)JSApi.SetType.Rval, ((UnityEngine.Event)vc.csObj).ToString());
    }

    return true;
}

static bool Event_Use(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
        ((UnityEngine.Event)vc.csObj).Use();
    }

    return true;
}

static bool Event_GetEventCount(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(UnityEngine.Event.GetEventCount()));
    }

    return true;
}

static bool Event_KeyboardEvent__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, UnityEngine.Event.KeyboardEvent(arg0));
    }

    return true;
}

static bool Event_PopEvent__Event(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        UnityEngine.Event arg0 = (UnityEngine.Event)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(UnityEngine.Event.PopEvent(arg0)));
    }

    return true;
}


//register

public static void __Register()
{
    JSMgr.CallbackInfo ci = new JSMgr.CallbackInfo();
    ci.type = typeof(UnityEngine.Event);
    ci.fields = new JSMgr.CSCallbackField[]
    {

    };
    ci.properties = new JSMgr.CSCallbackProperty[]
    {
        Event_mousePosition,
        Event_delta,
        Event_shift,
        Event_control,
        Event_alt,
        Event_command,
        Event_capsLock,
        Event_numeric,
        Event_functionKey,
        Event_current,
        Event_isKey,
        Event_isMouse,
        Event_rawType,
        Event_type,
        Event_button,
        Event_modifiers,
        Event_pressure,
        Event_clickCount,
        Event_character,
        Event_commandName,
        Event_keyCode,
        Event_displayIndex,

    };
    ci.constructors = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(Event_Event1, ".ctor"),
        new JSMgr.MethodCallBackInfo(Event_Event2, ".ctor"),
        new JSMgr.MethodCallBackInfo(Event_Event3, ".ctor"),

    };
    ci.methods = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(Event_Equals__Object, "Equals"),
        new JSMgr.MethodCallBackInfo(Event_GetHashCode, "GetHashCode"),
        new JSMgr.MethodCallBackInfo(Event_GetTypeForControl__Int32, "GetTypeForControl"),
        new JSMgr.MethodCallBackInfo(Event_ToString, "ToString"),
        new JSMgr.MethodCallBackInfo(Event_Use, "Use"),
        new JSMgr.MethodCallBackInfo(Event_GetEventCount, "GetEventCount"),
        new JSMgr.MethodCallBackInfo(Event_KeyboardEvent__String, "KeyboardEvent"),
        new JSMgr.MethodCallBackInfo(Event_PopEvent__Event, "PopEvent"),

    };
    JSMgr.allCallbackInfo.Add(ci);
}


}
