
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by CSGenerator.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;

using jsval = JSApi.jsval;

public class JSB_UnityEngine_ComputeShader
{

////////////////////// ComputeShader ///////////////////////////////////////
// constructors

static bool ComputeShader_ComputeShader1(JSVCall vc, int argc)
{
    int _this = JSApi.getObject((int)JSApi.GetType.Arg);
    JSApi.attachFinalizerObject(_this);
    --argc;

    int len = argc;
    if (len == 0)
    {
        JSMgr.addJSCSRel(_this, new UnityEngine.ComputeShader());
    }

    return true;
}

// fields

// properties

// methods

static bool ComputeShader_Dispatch__Int32__Int32__Int32__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 4) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg2 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg3 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        ((UnityEngine.ComputeShader)vc.csObj).Dispatch(arg0, arg1, arg2, arg3);
    }

    return true;
}

static bool ComputeShader_FindKernel__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(((UnityEngine.ComputeShader)vc.csObj).FindKernel(arg0)));
    }

    return true;
}

static bool ComputeShader_SetBuffer__Int32__String__ComputeBuffer(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 3) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.String arg1 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        UnityEngine.ComputeBuffer arg2 = (UnityEngine.ComputeBuffer)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        ((UnityEngine.ComputeShader)vc.csObj).SetBuffer(arg0, arg1, arg2);
    }

    return true;
}

static bool ComputeShader_SetFloat__String__Single(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.Single arg1 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        ((UnityEngine.ComputeShader)vc.csObj).SetFloat(arg0, arg1);
    }

    return true;
}

static bool ComputeShader_SetFloats__String__Single_Array(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.Single[] arg1 = JSDataExchangeMgr.GetJSArg<System.Single[]>(() =>
        {
            int jsObjID = JSApi.getObject((int)JSApi.GetType.Arg);
            int length = JSApi.getArrayLength(jsObjID);
            var ret = new System.Single[length];
            for (var i = 0; i < length; i++) {
                JSApi.getElement(jsObjID, i);
                ret[i] = (System.Single)JSApi.getSingle((int)JSApi.GetType.SaveAndRemove);
            }
            return ret;
        });
        ((UnityEngine.ComputeShader)vc.csObj).SetFloats(arg0, arg1);
    }

    return true;
}

static bool ComputeShader_SetInt__String__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        ((UnityEngine.ComputeShader)vc.csObj).SetInt(arg0, arg1);
    }

    return true;
}

static bool ComputeShader_SetInts__String__Int32_Array(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.Int32[] arg1 = JSDataExchangeMgr.GetJSArg<System.Int32[]>(() =>
        {
            int jsObjID = JSApi.getObject((int)JSApi.GetType.Arg);
            int length = JSApi.getArrayLength(jsObjID);
            var ret = new System.Int32[length];
            for (var i = 0; i < length; i++) {
                JSApi.getElement(jsObjID, i);
                ret[i] = (System.Int32)JSApi.getInt32((int)JSApi.GetType.SaveAndRemove);
            }
            return ret;
        });
        ((UnityEngine.ComputeShader)vc.csObj).SetInts(arg0, arg1);
    }

    return true;
}

static bool ComputeShader_SetTexture__Int32__String__Texture(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 3) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.String arg1 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        UnityEngine.Texture arg2 = (UnityEngine.Texture)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        ((UnityEngine.ComputeShader)vc.csObj).SetTexture(arg0, arg1, arg2);
    }

    return true;
}

static bool ComputeShader_SetVector__String__Vector4(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        UnityEngine.Vector4 arg1 = (UnityEngine.Vector4)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        ((UnityEngine.ComputeShader)vc.csObj).SetVector(arg0, arg1);
    }

    return true;
}


//register

public static void __Register()
{
    JSMgr.CallbackInfo ci = new JSMgr.CallbackInfo();
    ci.type = typeof(UnityEngine.ComputeShader);
    ci.fields = new JSMgr.CSCallbackField[]
    {

    };
    ci.properties = new JSMgr.CSCallbackProperty[]
    {

    };
    ci.constructors = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(ComputeShader_ComputeShader1, ".ctor"),

    };
    ci.methods = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(ComputeShader_Dispatch__Int32__Int32__Int32__Int32, "Dispatch"),
        new JSMgr.MethodCallBackInfo(ComputeShader_FindKernel__String, "FindKernel"),
        new JSMgr.MethodCallBackInfo(ComputeShader_SetBuffer__Int32__String__ComputeBuffer, "SetBuffer"),
        new JSMgr.MethodCallBackInfo(ComputeShader_SetFloat__String__Single, "SetFloat"),
        new JSMgr.MethodCallBackInfo(ComputeShader_SetFloats__String__Single_Array, "SetFloats"),
        new JSMgr.MethodCallBackInfo(ComputeShader_SetInt__String__Int32, "SetInt"),
        new JSMgr.MethodCallBackInfo(ComputeShader_SetInts__String__Int32_Array, "SetInts"),
        new JSMgr.MethodCallBackInfo(ComputeShader_SetTexture__Int32__String__Texture, "SetTexture"),
        new JSMgr.MethodCallBackInfo(ComputeShader_SetVector__String__Vector4, "SetVector"),

    };
    JSMgr.allCallbackInfo.Add(ci);
}


}
