
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by CSGenerator.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;

using jsval = JSApi.jsval;

public class JSB_UnityEngine_Texture
{

////////////////////// Texture ///////////////////////////////////////
// constructors

static bool Texture_Texture1(JSVCall vc, int argc)
{
    int _this = JSApi.getObject((int)JSApi.GetType.Arg);
    JSApi.attachFinalizerObject(_this);
    --argc;

    int len = argc;
    if (len == 0)
    {
        JSMgr.addJSCSRel(_this, new UnityEngine.Texture());
    }

    return true;
}

// fields

// properties
static void Texture_masterTextureLimit(JSVCall vc)
{
    if (vc.bGet)
    { 
        var result = UnityEngine.Texture.masterTextureLimit;
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(result));
    }
    else
    { 
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        UnityEngine.Texture.masterTextureLimit = arg0;
    }
}
static void Texture_anisotropicFiltering(JSVCall vc)
{
    if (vc.bGet)
    { 
        var result = UnityEngine.Texture.anisotropicFiltering;
                JSApi.setEnum((int)JSApi.SetType.Rval, (int)result);
    }
    else
    { 
        UnityEngine.AnisotropicFiltering arg0 = (UnityEngine.AnisotropicFiltering)JSApi.getEnum((int)JSApi.GetType.Arg);
        UnityEngine.Texture.anisotropicFiltering = arg0;
    }
}
static void Texture_width(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.Texture _this = (UnityEngine.Texture)vc.csObj;
        var result = _this.width;
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(result));
    }
    else
    { 
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        UnityEngine.Texture _this = (UnityEngine.Texture)vc.csObj;
        _this.width = arg0;
    }
}
static void Texture_height(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.Texture _this = (UnityEngine.Texture)vc.csObj;
        var result = _this.height;
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(result));
    }
    else
    { 
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        UnityEngine.Texture _this = (UnityEngine.Texture)vc.csObj;
        _this.height = arg0;
    }
}
static void Texture_filterMode(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.Texture _this = (UnityEngine.Texture)vc.csObj;
        var result = _this.filterMode;
                JSApi.setEnum((int)JSApi.SetType.Rval, (int)result);
    }
    else
    { 
        UnityEngine.FilterMode arg0 = (UnityEngine.FilterMode)JSApi.getEnum((int)JSApi.GetType.Arg);
        UnityEngine.Texture _this = (UnityEngine.Texture)vc.csObj;
        _this.filterMode = arg0;
    }
}
static void Texture_anisoLevel(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.Texture _this = (UnityEngine.Texture)vc.csObj;
        var result = _this.anisoLevel;
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(result));
    }
    else
    { 
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        UnityEngine.Texture _this = (UnityEngine.Texture)vc.csObj;
        _this.anisoLevel = arg0;
    }
}
static void Texture_wrapMode(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.Texture _this = (UnityEngine.Texture)vc.csObj;
        var result = _this.wrapMode;
                JSApi.setEnum((int)JSApi.SetType.Rval, (int)result);
    }
    else
    { 
        UnityEngine.TextureWrapMode arg0 = (UnityEngine.TextureWrapMode)JSApi.getEnum((int)JSApi.GetType.Arg);
        UnityEngine.Texture _this = (UnityEngine.Texture)vc.csObj;
        _this.wrapMode = arg0;
    }
}
static void Texture_mipMapBias(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.Texture _this = (UnityEngine.Texture)vc.csObj;
        var result = _this.mipMapBias;
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(result));
    }
    else
    { 
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.Texture _this = (UnityEngine.Texture)vc.csObj;
        _this.mipMapBias = arg0;
    }
}
static void Texture_texelSize(JSVCall vc)
{
        UnityEngine.Texture _this = (UnityEngine.Texture)vc.csObj;
        var result = _this.texelSize;
                JSApi.setVector2S((int)JSApi.SetType.Rval, result);
}

// methods

static bool Texture_GetNativeTexturePtr(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
                JSApi.setIntPtr((int)JSApi.SetType.Rval, (System.IntPtr)(((UnityEngine.Texture)vc.csObj).GetNativeTexturePtr()));
    }

    return true;
}

static bool Texture_SetGlobalAnisotropicFilteringLimits__Int32__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        UnityEngine.Texture.SetGlobalAnisotropicFilteringLimits(arg0, arg1);
    }

    return true;
}


//register

public static void __Register()
{
    JSMgr.CallbackInfo ci = new JSMgr.CallbackInfo();
    ci.type = typeof(UnityEngine.Texture);
    ci.fields = new JSMgr.CSCallbackField[]
    {

    };
    ci.properties = new JSMgr.CSCallbackProperty[]
    {
        Texture_masterTextureLimit,
        Texture_anisotropicFiltering,
        Texture_width,
        Texture_height,
        Texture_filterMode,
        Texture_anisoLevel,
        Texture_wrapMode,
        Texture_mipMapBias,
        Texture_texelSize,

    };
    ci.constructors = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(Texture_Texture1, ".ctor"),

    };
    ci.methods = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(Texture_GetNativeTexturePtr, "GetNativeTexturePtr"),
        new JSMgr.MethodCallBackInfo(Texture_SetGlobalAnisotropicFilteringLimits__Int32__Int32, "SetGlobalAnisotropicFilteringLimits"),

    };
    JSMgr.allCallbackInfo.Add(ci);
}


}
