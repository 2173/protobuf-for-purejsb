
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by CSGenerator.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;

using jsval = JSApi.jsval;

public class JSB_UnityEngine_ParticleSystem_LimitVelocityOverLifetimeModule
{

////////////////////// LimitVelocityOverLifetimeModule ///////////////////////////////////////
// constructors

// fields

// properties
static void LimitVelocityOverLifetimeModule_enabled(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.ParticleSystem.LimitVelocityOverLifetimeModule _this = (UnityEngine.ParticleSystem.LimitVelocityOverLifetimeModule)vc.csObj;
        var result = _this.enabled;
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(result));
    }
    else
    { 
        System.Boolean arg0 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        UnityEngine.ParticleSystem.LimitVelocityOverLifetimeModule _this = (UnityEngine.ParticleSystem.LimitVelocityOverLifetimeModule)vc.csObj;
        _this.enabled = arg0;
        JSMgr.changeJSObj(vc.jsObjID, _this);
    }
}
static void LimitVelocityOverLifetimeModule_limitX(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.ParticleSystem.LimitVelocityOverLifetimeModule _this = (UnityEngine.ParticleSystem.LimitVelocityOverLifetimeModule)vc.csObj;
        var result = _this.limitX;
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, result);
    }
    else
    { 
        UnityEngine.ParticleSystem.MinMaxCurve arg0 = (UnityEngine.ParticleSystem.MinMaxCurve)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        UnityEngine.ParticleSystem.LimitVelocityOverLifetimeModule _this = (UnityEngine.ParticleSystem.LimitVelocityOverLifetimeModule)vc.csObj;
        _this.limitX = arg0;
        JSMgr.changeJSObj(vc.jsObjID, _this);
    }
}
static void LimitVelocityOverLifetimeModule_limitY(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.ParticleSystem.LimitVelocityOverLifetimeModule _this = (UnityEngine.ParticleSystem.LimitVelocityOverLifetimeModule)vc.csObj;
        var result = _this.limitY;
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, result);
    }
    else
    { 
        UnityEngine.ParticleSystem.MinMaxCurve arg0 = (UnityEngine.ParticleSystem.MinMaxCurve)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        UnityEngine.ParticleSystem.LimitVelocityOverLifetimeModule _this = (UnityEngine.ParticleSystem.LimitVelocityOverLifetimeModule)vc.csObj;
        _this.limitY = arg0;
        JSMgr.changeJSObj(vc.jsObjID, _this);
    }
}
static void LimitVelocityOverLifetimeModule_limitZ(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.ParticleSystem.LimitVelocityOverLifetimeModule _this = (UnityEngine.ParticleSystem.LimitVelocityOverLifetimeModule)vc.csObj;
        var result = _this.limitZ;
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, result);
    }
    else
    { 
        UnityEngine.ParticleSystem.MinMaxCurve arg0 = (UnityEngine.ParticleSystem.MinMaxCurve)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        UnityEngine.ParticleSystem.LimitVelocityOverLifetimeModule _this = (UnityEngine.ParticleSystem.LimitVelocityOverLifetimeModule)vc.csObj;
        _this.limitZ = arg0;
        JSMgr.changeJSObj(vc.jsObjID, _this);
    }
}
static void LimitVelocityOverLifetimeModule_limit(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.ParticleSystem.LimitVelocityOverLifetimeModule _this = (UnityEngine.ParticleSystem.LimitVelocityOverLifetimeModule)vc.csObj;
        var result = _this.limit;
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, result);
    }
    else
    { 
        UnityEngine.ParticleSystem.MinMaxCurve arg0 = (UnityEngine.ParticleSystem.MinMaxCurve)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        UnityEngine.ParticleSystem.LimitVelocityOverLifetimeModule _this = (UnityEngine.ParticleSystem.LimitVelocityOverLifetimeModule)vc.csObj;
        _this.limit = arg0;
        JSMgr.changeJSObj(vc.jsObjID, _this);
    }
}
static void LimitVelocityOverLifetimeModule_dampen(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.ParticleSystem.LimitVelocityOverLifetimeModule _this = (UnityEngine.ParticleSystem.LimitVelocityOverLifetimeModule)vc.csObj;
        var result = _this.dampen;
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(result));
    }
    else
    { 
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.ParticleSystem.LimitVelocityOverLifetimeModule _this = (UnityEngine.ParticleSystem.LimitVelocityOverLifetimeModule)vc.csObj;
        _this.dampen = arg0;
        JSMgr.changeJSObj(vc.jsObjID, _this);
    }
}
static void LimitVelocityOverLifetimeModule_separateAxes(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.ParticleSystem.LimitVelocityOverLifetimeModule _this = (UnityEngine.ParticleSystem.LimitVelocityOverLifetimeModule)vc.csObj;
        var result = _this.separateAxes;
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(result));
    }
    else
    { 
        System.Boolean arg0 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        UnityEngine.ParticleSystem.LimitVelocityOverLifetimeModule _this = (UnityEngine.ParticleSystem.LimitVelocityOverLifetimeModule)vc.csObj;
        _this.separateAxes = arg0;
        JSMgr.changeJSObj(vc.jsObjID, _this);
    }
}
static void LimitVelocityOverLifetimeModule_space(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.ParticleSystem.LimitVelocityOverLifetimeModule _this = (UnityEngine.ParticleSystem.LimitVelocityOverLifetimeModule)vc.csObj;
        var result = _this.space;
                JSApi.setEnum((int)JSApi.SetType.Rval, (int)result);
    }
    else
    { 
        UnityEngine.ParticleSystemSimulationSpace arg0 = (UnityEngine.ParticleSystemSimulationSpace)JSApi.getEnum((int)JSApi.GetType.Arg);
        UnityEngine.ParticleSystem.LimitVelocityOverLifetimeModule _this = (UnityEngine.ParticleSystem.LimitVelocityOverLifetimeModule)vc.csObj;
        _this.space = arg0;
        JSMgr.changeJSObj(vc.jsObjID, _this);
    }
}

// methods


//register

public static void __Register()
{
    JSMgr.CallbackInfo ci = new JSMgr.CallbackInfo();
    ci.type = typeof(UnityEngine.ParticleSystem.LimitVelocityOverLifetimeModule);
    ci.fields = new JSMgr.CSCallbackField[]
    {

    };
    ci.properties = new JSMgr.CSCallbackProperty[]
    {
        LimitVelocityOverLifetimeModule_enabled,
        LimitVelocityOverLifetimeModule_limitX,
        LimitVelocityOverLifetimeModule_limitY,
        LimitVelocityOverLifetimeModule_limitZ,
        LimitVelocityOverLifetimeModule_limit,
        LimitVelocityOverLifetimeModule_dampen,
        LimitVelocityOverLifetimeModule_separateAxes,
        LimitVelocityOverLifetimeModule_space,

    };
    ci.constructors = new JSMgr.MethodCallBackInfo[]
    {

    };
    ci.methods = new JSMgr.MethodCallBackInfo[]
    {

    };
    JSMgr.allCallbackInfo.Add(ci);
}


}
