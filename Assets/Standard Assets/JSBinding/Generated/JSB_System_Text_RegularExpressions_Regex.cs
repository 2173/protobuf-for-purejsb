
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by CSGenerator.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;
using System.Text.RegularExpressions;
using System.Reflection.Emit;

using jsval = JSApi.jsval;

public class JSB_System_Text_RegularExpressions_Regex
{

////////////////////// Regex ///////////////////////////////////////
// constructors

static bool Regex_Regex1(JSVCall vc, int argc)
{
    int _this = JSApi.getObject((int)JSApi.GetType.Arg);
    JSApi.attachFinalizerObject(_this);
    --argc;

    int len = argc;
    if (len == 1)
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        JSMgr.addJSCSRel(_this, new System.Text.RegularExpressions.Regex(arg0));
    }

    return true;
}

static bool Regex_Regex2(JSVCall vc, int argc)
{
    int _this = JSApi.getObject((int)JSApi.GetType.Arg);
    JSApi.attachFinalizerObject(_this);
    --argc;

    int len = argc;
    if (len == 2)
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.Text.RegularExpressions.RegexOptions arg1 = (System.Text.RegularExpressions.RegexOptions)JSApi.getEnum((int)JSApi.GetType.Arg);
        JSMgr.addJSCSRel(_this, new System.Text.RegularExpressions.Regex(arg0, arg1));
    }

    return true;
}

// fields

// properties
static void Regex_CacheSize(JSVCall vc)
{
    if (vc.bGet)
    { 
        var result = System.Text.RegularExpressions.Regex.CacheSize;
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(result));
    }
    else
    { 
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Text.RegularExpressions.Regex.CacheSize = arg0;
    }
}
static void Regex_Options(JSVCall vc)
{
        System.Text.RegularExpressions.Regex _this = (System.Text.RegularExpressions.Regex)vc.csObj;
        var result = _this.Options;
                JSApi.setEnum((int)JSApi.SetType.Rval, (int)result);
}
static void Regex_RightToLeft(JSVCall vc)
{
        System.Text.RegularExpressions.Regex _this = (System.Text.RegularExpressions.Regex)vc.csObj;
        var result = _this.RightToLeft;
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(result));
}

// methods

static bool Regex_GetGroupNames(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
                var arrRet = ((System.Text.RegularExpressions.Regex)vc.csObj).GetGroupNames();
        for (int i = 0; arrRet != null && i < arrRet.Length; i++)
        {
            JSApi.setStringS((int)JSApi.SetType.SaveAndTempTrace, arrRet[i]);
            JSApi.moveSaveID2Arr(i);
        }
        JSApi.setArrayS((int)JSApi.SetType.Rval, (arrRet != null ? arrRet.Length : 0), true);
    }

    return true;
}

static bool Regex_GetGroupNumbers(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
                var arrRet = ((System.Text.RegularExpressions.Regex)vc.csObj).GetGroupNumbers();
        for (int i = 0; arrRet != null && i < arrRet.Length; i++)
        {
            JSApi.setInt32((int)JSApi.SetType.SaveAndTempTrace, arrRet[i]);
            JSApi.moveSaveID2Arr(i);
        }
        JSApi.setArrayS((int)JSApi.SetType.Rval, (arrRet != null ? arrRet.Length : 0), true);
    }

    return true;
}

static bool Regex_GroupNameFromNumber__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                JSApi.setStringS((int)JSApi.SetType.Rval, ((System.Text.RegularExpressions.Regex)vc.csObj).GroupNameFromNumber(arg0));
    }

    return true;
}

static bool Regex_GroupNumberFromName__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(((System.Text.RegularExpressions.Regex)vc.csObj).GroupNumberFromName(arg0)));
    }

    return true;
}

static bool Regex_IsMatch__String__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(((System.Text.RegularExpressions.Regex)vc.csObj).IsMatch(arg0, arg1)));
    }

    return true;
}

static bool Regex_IsMatch__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(((System.Text.RegularExpressions.Regex)vc.csObj).IsMatch(arg0)));
    }

    return true;
}

static bool Regex_Match__String__Int32__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 3) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg2 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, ((System.Text.RegularExpressions.Regex)vc.csObj).Match(arg0, arg1, arg2));
    }

    return true;
}

static bool Regex_Match__String__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, ((System.Text.RegularExpressions.Regex)vc.csObj).Match(arg0, arg1));
    }

    return true;
}

static bool Regex_Match__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, ((System.Text.RegularExpressions.Regex)vc.csObj).Match(arg0));
    }

    return true;
}

static bool Regex_Matches__String__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, ((System.Text.RegularExpressions.Regex)vc.csObj).Matches(arg0, arg1));
    }

    return true;
}

static bool Regex_Matches__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, ((System.Text.RegularExpressions.Regex)vc.csObj).Matches(arg0));
    }

    return true;
}
public static System.Text.RegularExpressions.MatchEvaluator Regex_Replace_GetDelegate_member11_arg1(CSRepresentedObject objFunction)
{
    if (objFunction == null || objFunction.jsObjID == 0)
    {
        return null;
    }
    var action = JSMgr.getJSFunCSDelegateRel<System.Text.RegularExpressions.MatchEvaluator>(objFunction.jsObjID);
    if (action == null)
    {
        action = (match) => 
        {
            JSMgr.vCall.CallJSFunctionValue(0, objFunction.jsObjID, match);
            return (System.String)JSApi.getStringS((int)JSApi.GetType.JSFunRet);
        };
        JSMgr.addJSFunCSDelegateRel(objFunction.jsObjID, action);
    }
    return action;
}

static bool Regex_Replace__String__MatchEvaluator__Int32__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 4) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.Text.RegularExpressions.MatchEvaluator arg1 = JSDataExchangeMgr.GetJSArg<System.Text.RegularExpressions.MatchEvaluator>(()=>
        {
            if (JSApi.isFunctionS((int)JSApi.GetType.Arg))
                return Regex_Replace_GetDelegate_member11_arg1(JSApi.getFunctionS((int)JSApi.GetType.Arg));
            else
                return (System.Text.RegularExpressions.MatchEvaluator)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        });
        System.Int32 arg2 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg3 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                JSApi.setStringS((int)JSApi.SetType.Rval, ((System.Text.RegularExpressions.Regex)vc.csObj).Replace(arg0, arg1, arg2, arg3));
    }

    return true;
}

static bool Regex_Replace__String__String__Int32__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 4) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.String arg1 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.Int32 arg2 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg3 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                JSApi.setStringS((int)JSApi.SetType.Rval, ((System.Text.RegularExpressions.Regex)vc.csObj).Replace(arg0, arg1, arg2, arg3));
    }

    return true;
}

static bool Regex_Replace__String__String__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 3) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.String arg1 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.Int32 arg2 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                JSApi.setStringS((int)JSApi.SetType.Rval, ((System.Text.RegularExpressions.Regex)vc.csObj).Replace(arg0, arg1, arg2));
    }

    return true;
}
public static System.Text.RegularExpressions.MatchEvaluator Regex_Replace_GetDelegate_member14_arg1(CSRepresentedObject objFunction)
{
    if (objFunction == null || objFunction.jsObjID == 0)
    {
        return null;
    }
    var action = JSMgr.getJSFunCSDelegateRel<System.Text.RegularExpressions.MatchEvaluator>(objFunction.jsObjID);
    if (action == null)
    {
        action = (match) => 
        {
            JSMgr.vCall.CallJSFunctionValue(0, objFunction.jsObjID, match);
            return (System.String)JSApi.getStringS((int)JSApi.GetType.JSFunRet);
        };
        JSMgr.addJSFunCSDelegateRel(objFunction.jsObjID, action);
    }
    return action;
}

static bool Regex_Replace__String__MatchEvaluator__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 3) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.Text.RegularExpressions.MatchEvaluator arg1 = JSDataExchangeMgr.GetJSArg<System.Text.RegularExpressions.MatchEvaluator>(()=>
        {
            if (JSApi.isFunctionS((int)JSApi.GetType.Arg))
                return Regex_Replace_GetDelegate_member14_arg1(JSApi.getFunctionS((int)JSApi.GetType.Arg));
            else
                return (System.Text.RegularExpressions.MatchEvaluator)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        });
        System.Int32 arg2 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                JSApi.setStringS((int)JSApi.SetType.Rval, ((System.Text.RegularExpressions.Regex)vc.csObj).Replace(arg0, arg1, arg2));
    }

    return true;
}

static bool Regex_Replace__String__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.String arg1 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
                JSApi.setStringS((int)JSApi.SetType.Rval, ((System.Text.RegularExpressions.Regex)vc.csObj).Replace(arg0, arg1));
    }

    return true;
}
public static System.Text.RegularExpressions.MatchEvaluator Regex_Replace_GetDelegate_member16_arg1(CSRepresentedObject objFunction)
{
    if (objFunction == null || objFunction.jsObjID == 0)
    {
        return null;
    }
    var action = JSMgr.getJSFunCSDelegateRel<System.Text.RegularExpressions.MatchEvaluator>(objFunction.jsObjID);
    if (action == null)
    {
        action = (match) => 
        {
            JSMgr.vCall.CallJSFunctionValue(0, objFunction.jsObjID, match);
            return (System.String)JSApi.getStringS((int)JSApi.GetType.JSFunRet);
        };
        JSMgr.addJSFunCSDelegateRel(objFunction.jsObjID, action);
    }
    return action;
}

static bool Regex_Replace__String__MatchEvaluator(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.Text.RegularExpressions.MatchEvaluator arg1 = JSDataExchangeMgr.GetJSArg<System.Text.RegularExpressions.MatchEvaluator>(()=>
        {
            if (JSApi.isFunctionS((int)JSApi.GetType.Arg))
                return Regex_Replace_GetDelegate_member16_arg1(JSApi.getFunctionS((int)JSApi.GetType.Arg));
            else
                return (System.Text.RegularExpressions.MatchEvaluator)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        });
                JSApi.setStringS((int)JSApi.SetType.Rval, ((System.Text.RegularExpressions.Regex)vc.csObj).Replace(arg0, arg1));
    }

    return true;
}

static bool Regex_Split__String__Int32__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 3) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg2 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                var arrRet = ((System.Text.RegularExpressions.Regex)vc.csObj).Split(arg0, arg1, arg2);
        for (int i = 0; arrRet != null && i < arrRet.Length; i++)
        {
            JSApi.setStringS((int)JSApi.SetType.SaveAndTempTrace, arrRet[i]);
            JSApi.moveSaveID2Arr(i);
        }
        JSApi.setArrayS((int)JSApi.SetType.Rval, (arrRet != null ? arrRet.Length : 0), true);
    }

    return true;
}

static bool Regex_Split__String__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                var arrRet = ((System.Text.RegularExpressions.Regex)vc.csObj).Split(arg0, arg1);
        for (int i = 0; arrRet != null && i < arrRet.Length; i++)
        {
            JSApi.setStringS((int)JSApi.SetType.SaveAndTempTrace, arrRet[i]);
            JSApi.moveSaveID2Arr(i);
        }
        JSApi.setArrayS((int)JSApi.SetType.Rval, (arrRet != null ? arrRet.Length : 0), true);
    }

    return true;
}

static bool Regex_Split__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
                var arrRet = ((System.Text.RegularExpressions.Regex)vc.csObj).Split(arg0);
        for (int i = 0; arrRet != null && i < arrRet.Length; i++)
        {
            JSApi.setStringS((int)JSApi.SetType.SaveAndTempTrace, arrRet[i]);
            JSApi.moveSaveID2Arr(i);
        }
        JSApi.setArrayS((int)JSApi.SetType.Rval, (arrRet != null ? arrRet.Length : 0), true);
    }

    return true;
}

static bool Regex_ToString(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
                JSApi.setStringS((int)JSApi.SetType.Rval, ((System.Text.RegularExpressions.Regex)vc.csObj).ToString());
    }

    return true;
}

static bool Regex_CompileToAssembly__RegexCompilationInfo_Array__AssemblyName__CustomAttributeBuilder_Array__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 4) 
    {
        System.Text.RegularExpressions.RegexCompilationInfo[] arg0 = JSDataExchangeMgr.GetJSArg<System.Text.RegularExpressions.RegexCompilationInfo[]>(() =>
        {
            int jsObjID = JSApi.getObject((int)JSApi.GetType.Arg);
            int length = JSApi.getArrayLength(jsObjID);
            var ret = new System.Text.RegularExpressions.RegexCompilationInfo[length];
            for (var i = 0; i < length; i++) {
                JSApi.getElement(jsObjID, i);
                ret[i] = (System.Text.RegularExpressions.RegexCompilationInfo)JSMgr.datax.getObject((int)JSApi.GetType.SaveAndRemove);
            }
            return ret;
        });
        System.Reflection.AssemblyName arg1 = (System.Reflection.AssemblyName)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        System.Reflection.Emit.CustomAttributeBuilder[] arg2 = JSDataExchangeMgr.GetJSArg<System.Reflection.Emit.CustomAttributeBuilder[]>(() =>
        {
            int jsObjID = JSApi.getObject((int)JSApi.GetType.Arg);
            int length = JSApi.getArrayLength(jsObjID);
            var ret = new System.Reflection.Emit.CustomAttributeBuilder[length];
            for (var i = 0; i < length; i++) {
                JSApi.getElement(jsObjID, i);
                ret[i] = (System.Reflection.Emit.CustomAttributeBuilder)JSMgr.datax.getObject((int)JSApi.GetType.SaveAndRemove);
            }
            return ret;
        });
        System.String arg3 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.Text.RegularExpressions.Regex.CompileToAssembly(arg0, arg1, arg2, arg3);
    }

    return true;
}

static bool Regex_CompileToAssembly__RegexCompilationInfo_Array__AssemblyName__CustomAttributeBuilder_Array(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 3) 
    {
        System.Text.RegularExpressions.RegexCompilationInfo[] arg0 = JSDataExchangeMgr.GetJSArg<System.Text.RegularExpressions.RegexCompilationInfo[]>(() =>
        {
            int jsObjID = JSApi.getObject((int)JSApi.GetType.Arg);
            int length = JSApi.getArrayLength(jsObjID);
            var ret = new System.Text.RegularExpressions.RegexCompilationInfo[length];
            for (var i = 0; i < length; i++) {
                JSApi.getElement(jsObjID, i);
                ret[i] = (System.Text.RegularExpressions.RegexCompilationInfo)JSMgr.datax.getObject((int)JSApi.GetType.SaveAndRemove);
            }
            return ret;
        });
        System.Reflection.AssemblyName arg1 = (System.Reflection.AssemblyName)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        System.Reflection.Emit.CustomAttributeBuilder[] arg2 = JSDataExchangeMgr.GetJSArg<System.Reflection.Emit.CustomAttributeBuilder[]>(() =>
        {
            int jsObjID = JSApi.getObject((int)JSApi.GetType.Arg);
            int length = JSApi.getArrayLength(jsObjID);
            var ret = new System.Reflection.Emit.CustomAttributeBuilder[length];
            for (var i = 0; i < length; i++) {
                JSApi.getElement(jsObjID, i);
                ret[i] = (System.Reflection.Emit.CustomAttributeBuilder)JSMgr.datax.getObject((int)JSApi.GetType.SaveAndRemove);
            }
            return ret;
        });
        System.Text.RegularExpressions.Regex.CompileToAssembly(arg0, arg1, arg2);
    }

    return true;
}

static bool Regex_CompileToAssembly__RegexCompilationInfo_Array__AssemblyName(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Text.RegularExpressions.RegexCompilationInfo[] arg0 = JSDataExchangeMgr.GetJSArg<System.Text.RegularExpressions.RegexCompilationInfo[]>(() =>
        {
            int jsObjID = JSApi.getObject((int)JSApi.GetType.Arg);
            int length = JSApi.getArrayLength(jsObjID);
            var ret = new System.Text.RegularExpressions.RegexCompilationInfo[length];
            for (var i = 0; i < length; i++) {
                JSApi.getElement(jsObjID, i);
                ret[i] = (System.Text.RegularExpressions.RegexCompilationInfo)JSMgr.datax.getObject((int)JSApi.GetType.SaveAndRemove);
            }
            return ret;
        });
        System.Reflection.AssemblyName arg1 = (System.Reflection.AssemblyName)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        System.Text.RegularExpressions.Regex.CompileToAssembly(arg0, arg1);
    }

    return true;
}

static bool Regex_Escape__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
                JSApi.setStringS((int)JSApi.SetType.Rval, System.Text.RegularExpressions.Regex.Escape(arg0));
    }

    return true;
}

static bool Regex_IsMatch__String__String__RegexOptions(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 3) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.String arg1 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.Text.RegularExpressions.RegexOptions arg2 = (System.Text.RegularExpressions.RegexOptions)JSApi.getEnum((int)JSApi.GetType.Arg);
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(System.Text.RegularExpressions.Regex.IsMatch(arg0, arg1, arg2)));
    }

    return true;
}

static bool Regex_IsMatch__String__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.String arg1 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(System.Text.RegularExpressions.Regex.IsMatch(arg0, arg1)));
    }

    return true;
}

static bool Regex_Match__String__String__RegexOptions(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 3) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.String arg1 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.Text.RegularExpressions.RegexOptions arg2 = (System.Text.RegularExpressions.RegexOptions)JSApi.getEnum((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.Text.RegularExpressions.Regex.Match(arg0, arg1, arg2));
    }

    return true;
}

static bool Regex_Match__String__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.String arg1 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.Text.RegularExpressions.Regex.Match(arg0, arg1));
    }

    return true;
}

static bool Regex_Matches__String__String__RegexOptions(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 3) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.String arg1 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.Text.RegularExpressions.RegexOptions arg2 = (System.Text.RegularExpressions.RegexOptions)JSApi.getEnum((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.Text.RegularExpressions.Regex.Matches(arg0, arg1, arg2));
    }

    return true;
}

static bool Regex_Matches__String__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.String arg1 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.Text.RegularExpressions.Regex.Matches(arg0, arg1));
    }

    return true;
}
public static System.Text.RegularExpressions.MatchEvaluator Regex_Replace_GetDelegate_member31_arg2(CSRepresentedObject objFunction)
{
    if (objFunction == null || objFunction.jsObjID == 0)
    {
        return null;
    }
    var action = JSMgr.getJSFunCSDelegateRel<System.Text.RegularExpressions.MatchEvaluator>(objFunction.jsObjID);
    if (action == null)
    {
        action = (match) => 
        {
            JSMgr.vCall.CallJSFunctionValue(0, objFunction.jsObjID, match);
            return (System.String)JSApi.getStringS((int)JSApi.GetType.JSFunRet);
        };
        JSMgr.addJSFunCSDelegateRel(objFunction.jsObjID, action);
    }
    return action;
}

static bool Regex_Replace__String__String__MatchEvaluator__RegexOptions(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 4) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.String arg1 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.Text.RegularExpressions.MatchEvaluator arg2 = JSDataExchangeMgr.GetJSArg<System.Text.RegularExpressions.MatchEvaluator>(()=>
        {
            if (JSApi.isFunctionS((int)JSApi.GetType.Arg))
                return Regex_Replace_GetDelegate_member31_arg2(JSApi.getFunctionS((int)JSApi.GetType.Arg));
            else
                return (System.Text.RegularExpressions.MatchEvaluator)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        });
        System.Text.RegularExpressions.RegexOptions arg3 = (System.Text.RegularExpressions.RegexOptions)JSApi.getEnum((int)JSApi.GetType.Arg);
                JSApi.setStringS((int)JSApi.SetType.Rval, System.Text.RegularExpressions.Regex.Replace(arg0, arg1, arg2, arg3));
    }

    return true;
}

static bool Regex_Replace__String__String__String__RegexOptions(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 4) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.String arg1 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.String arg2 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.Text.RegularExpressions.RegexOptions arg3 = (System.Text.RegularExpressions.RegexOptions)JSApi.getEnum((int)JSApi.GetType.Arg);
                JSApi.setStringS((int)JSApi.SetType.Rval, System.Text.RegularExpressions.Regex.Replace(arg0, arg1, arg2, arg3));
    }

    return true;
}

static bool Regex_Replace__String__String__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 3) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.String arg1 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.String arg2 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
                JSApi.setStringS((int)JSApi.SetType.Rval, System.Text.RegularExpressions.Regex.Replace(arg0, arg1, arg2));
    }

    return true;
}
public static System.Text.RegularExpressions.MatchEvaluator Regex_Replace_GetDelegate_member34_arg2(CSRepresentedObject objFunction)
{
    if (objFunction == null || objFunction.jsObjID == 0)
    {
        return null;
    }
    var action = JSMgr.getJSFunCSDelegateRel<System.Text.RegularExpressions.MatchEvaluator>(objFunction.jsObjID);
    if (action == null)
    {
        action = (match) => 
        {
            JSMgr.vCall.CallJSFunctionValue(0, objFunction.jsObjID, match);
            return (System.String)JSApi.getStringS((int)JSApi.GetType.JSFunRet);
        };
        JSMgr.addJSFunCSDelegateRel(objFunction.jsObjID, action);
    }
    return action;
}

static bool Regex_Replace__String__String__MatchEvaluator(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 3) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.String arg1 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.Text.RegularExpressions.MatchEvaluator arg2 = JSDataExchangeMgr.GetJSArg<System.Text.RegularExpressions.MatchEvaluator>(()=>
        {
            if (JSApi.isFunctionS((int)JSApi.GetType.Arg))
                return Regex_Replace_GetDelegate_member34_arg2(JSApi.getFunctionS((int)JSApi.GetType.Arg));
            else
                return (System.Text.RegularExpressions.MatchEvaluator)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        });
                JSApi.setStringS((int)JSApi.SetType.Rval, System.Text.RegularExpressions.Regex.Replace(arg0, arg1, arg2));
    }

    return true;
}

static bool Regex_Split__String__String__RegexOptions(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 3) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.String arg1 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.Text.RegularExpressions.RegexOptions arg2 = (System.Text.RegularExpressions.RegexOptions)JSApi.getEnum((int)JSApi.GetType.Arg);
                var arrRet = System.Text.RegularExpressions.Regex.Split(arg0, arg1, arg2);
        for (int i = 0; arrRet != null && i < arrRet.Length; i++)
        {
            JSApi.setStringS((int)JSApi.SetType.SaveAndTempTrace, arrRet[i]);
            JSApi.moveSaveID2Arr(i);
        }
        JSApi.setArrayS((int)JSApi.SetType.Rval, (arrRet != null ? arrRet.Length : 0), true);
    }

    return true;
}

static bool Regex_Split__String__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.String arg1 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
                var arrRet = System.Text.RegularExpressions.Regex.Split(arg0, arg1);
        for (int i = 0; arrRet != null && i < arrRet.Length; i++)
        {
            JSApi.setStringS((int)JSApi.SetType.SaveAndTempTrace, arrRet[i]);
            JSApi.moveSaveID2Arr(i);
        }
        JSApi.setArrayS((int)JSApi.SetType.Rval, (arrRet != null ? arrRet.Length : 0), true);
    }

    return true;
}

static bool Regex_Unescape__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
                JSApi.setStringS((int)JSApi.SetType.Rval, System.Text.RegularExpressions.Regex.Unescape(arg0));
    }

    return true;
}


//register

public static void __Register()
{
    JSMgr.CallbackInfo ci = new JSMgr.CallbackInfo();
    ci.type = typeof(System.Text.RegularExpressions.Regex);
    ci.fields = new JSMgr.CSCallbackField[]
    {

    };
    ci.properties = new JSMgr.CSCallbackProperty[]
    {
        Regex_CacheSize,
        Regex_Options,
        Regex_RightToLeft,

    };
    ci.constructors = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(Regex_Regex1, ".ctor"),
        new JSMgr.MethodCallBackInfo(Regex_Regex2, ".ctor"),

    };
    ci.methods = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(Regex_GetGroupNames, "GetGroupNames"),
        new JSMgr.MethodCallBackInfo(Regex_GetGroupNumbers, "GetGroupNumbers"),
        new JSMgr.MethodCallBackInfo(Regex_GroupNameFromNumber__Int32, "GroupNameFromNumber"),
        new JSMgr.MethodCallBackInfo(Regex_GroupNumberFromName__String, "GroupNumberFromName"),
        new JSMgr.MethodCallBackInfo(Regex_IsMatch__String__Int32, "IsMatch"),
        new JSMgr.MethodCallBackInfo(Regex_IsMatch__String, "IsMatch"),
        new JSMgr.MethodCallBackInfo(Regex_Match__String__Int32__Int32, "Match"),
        new JSMgr.MethodCallBackInfo(Regex_Match__String__Int32, "Match"),
        new JSMgr.MethodCallBackInfo(Regex_Match__String, "Match"),
        new JSMgr.MethodCallBackInfo(Regex_Matches__String__Int32, "Matches"),
        new JSMgr.MethodCallBackInfo(Regex_Matches__String, "Matches"),
        new JSMgr.MethodCallBackInfo(Regex_Replace__String__MatchEvaluator__Int32__Int32, "Replace"),
        new JSMgr.MethodCallBackInfo(Regex_Replace__String__String__Int32__Int32, "Replace"),
        new JSMgr.MethodCallBackInfo(Regex_Replace__String__String__Int32, "Replace"),
        new JSMgr.MethodCallBackInfo(Regex_Replace__String__MatchEvaluator__Int32, "Replace"),
        new JSMgr.MethodCallBackInfo(Regex_Replace__String__String, "Replace"),
        new JSMgr.MethodCallBackInfo(Regex_Replace__String__MatchEvaluator, "Replace"),
        new JSMgr.MethodCallBackInfo(Regex_Split__String__Int32__Int32, "Split"),
        new JSMgr.MethodCallBackInfo(Regex_Split__String__Int32, "Split"),
        new JSMgr.MethodCallBackInfo(Regex_Split__String, "Split"),
        new JSMgr.MethodCallBackInfo(Regex_ToString, "ToString"),
        new JSMgr.MethodCallBackInfo(Regex_CompileToAssembly__RegexCompilationInfo_Array__AssemblyName__CustomAttributeBuilder_Array__String, "CompileToAssembly"),
        new JSMgr.MethodCallBackInfo(Regex_CompileToAssembly__RegexCompilationInfo_Array__AssemblyName__CustomAttributeBuilder_Array, "CompileToAssembly"),
        new JSMgr.MethodCallBackInfo(Regex_CompileToAssembly__RegexCompilationInfo_Array__AssemblyName, "CompileToAssembly"),
        new JSMgr.MethodCallBackInfo(Regex_Escape__String, "Escape"),
        new JSMgr.MethodCallBackInfo(Regex_IsMatch__String__String__RegexOptions, "IsMatch"),
        new JSMgr.MethodCallBackInfo(Regex_IsMatch__String__String, "IsMatch"),
        new JSMgr.MethodCallBackInfo(Regex_Match__String__String__RegexOptions, "Match"),
        new JSMgr.MethodCallBackInfo(Regex_Match__String__String, "Match"),
        new JSMgr.MethodCallBackInfo(Regex_Matches__String__String__RegexOptions, "Matches"),
        new JSMgr.MethodCallBackInfo(Regex_Matches__String__String, "Matches"),
        new JSMgr.MethodCallBackInfo(Regex_Replace__String__String__MatchEvaluator__RegexOptions, "Replace"),
        new JSMgr.MethodCallBackInfo(Regex_Replace__String__String__String__RegexOptions, "Replace"),
        new JSMgr.MethodCallBackInfo(Regex_Replace__String__String__String, "Replace"),
        new JSMgr.MethodCallBackInfo(Regex_Replace__String__String__MatchEvaluator, "Replace"),
        new JSMgr.MethodCallBackInfo(Regex_Split__String__String__RegexOptions, "Split"),
        new JSMgr.MethodCallBackInfo(Regex_Split__String__String, "Split"),
        new JSMgr.MethodCallBackInfo(Regex_Unescape__String, "Unescape"),

    };
    JSMgr.allCallbackInfo.Add(ci);
}


}
