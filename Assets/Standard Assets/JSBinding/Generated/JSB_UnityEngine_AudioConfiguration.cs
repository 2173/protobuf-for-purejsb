
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by CSGenerator.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;

using jsval = JSApi.jsval;

public class JSB_UnityEngine_AudioConfiguration
{

////////////////////// AudioConfiguration ///////////////////////////////////////
// constructors
public static ConstructorID constructorID0 = new ConstructorID(null, null);

static bool AudioConfiguration_AudioConfiguration1(JSVCall vc, int argc)
{
    int _this = JSApi.getObject((int)JSApi.GetType.Arg);
    JSApi.attachFinalizerObject(_this);
    --argc;

    int len = argc;
    if (len == 0)
    {
        JSMgr.addJSCSRel(_this, new UnityEngine.AudioConfiguration());
    }

    return true;
}

// fields
static void AudioConfiguration_speakerMode(JSVCall vc)
{
    if (vc.bGet) {
        UnityEngine.AudioConfiguration _this = (UnityEngine.AudioConfiguration)vc.csObj;
        var result = _this.speakerMode;
                JSApi.setEnum((int)JSApi.SetType.Rval, (int)result);
    }
    else {
        UnityEngine.AudioSpeakerMode arg0 = (UnityEngine.AudioSpeakerMode)JSApi.getEnum((int)JSApi.GetType.Arg);
        UnityEngine.AudioConfiguration _this = (UnityEngine.AudioConfiguration)vc.csObj;
        _this.speakerMode = arg0;
        JSMgr.changeJSObj(vc.jsObjID, _this);
    }
}
static void AudioConfiguration_dspBufferSize(JSVCall vc)
{
    if (vc.bGet) {
        UnityEngine.AudioConfiguration _this = (UnityEngine.AudioConfiguration)vc.csObj;
        var result = _this.dspBufferSize;
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(result));
    }
    else {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        UnityEngine.AudioConfiguration _this = (UnityEngine.AudioConfiguration)vc.csObj;
        _this.dspBufferSize = arg0;
        JSMgr.changeJSObj(vc.jsObjID, _this);
    }
}
static void AudioConfiguration_sampleRate(JSVCall vc)
{
    if (vc.bGet) {
        UnityEngine.AudioConfiguration _this = (UnityEngine.AudioConfiguration)vc.csObj;
        var result = _this.sampleRate;
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(result));
    }
    else {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        UnityEngine.AudioConfiguration _this = (UnityEngine.AudioConfiguration)vc.csObj;
        _this.sampleRate = arg0;
        JSMgr.changeJSObj(vc.jsObjID, _this);
    }
}
static void AudioConfiguration_numRealVoices(JSVCall vc)
{
    if (vc.bGet) {
        UnityEngine.AudioConfiguration _this = (UnityEngine.AudioConfiguration)vc.csObj;
        var result = _this.numRealVoices;
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(result));
    }
    else {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        UnityEngine.AudioConfiguration _this = (UnityEngine.AudioConfiguration)vc.csObj;
        _this.numRealVoices = arg0;
        JSMgr.changeJSObj(vc.jsObjID, _this);
    }
}
static void AudioConfiguration_numVirtualVoices(JSVCall vc)
{
    if (vc.bGet) {
        UnityEngine.AudioConfiguration _this = (UnityEngine.AudioConfiguration)vc.csObj;
        var result = _this.numVirtualVoices;
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(result));
    }
    else {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        UnityEngine.AudioConfiguration _this = (UnityEngine.AudioConfiguration)vc.csObj;
        _this.numVirtualVoices = arg0;
        JSMgr.changeJSObj(vc.jsObjID, _this);
    }
}

// properties

// methods


//register

public static void __Register()
{
    JSMgr.CallbackInfo ci = new JSMgr.CallbackInfo();
    ci.type = typeof(UnityEngine.AudioConfiguration);
    ci.fields = new JSMgr.CSCallbackField[]
    {
        AudioConfiguration_speakerMode,
        AudioConfiguration_dspBufferSize,
        AudioConfiguration_sampleRate,
        AudioConfiguration_numRealVoices,
        AudioConfiguration_numVirtualVoices,

    };
    ci.properties = new JSMgr.CSCallbackProperty[]
    {

    };
    ci.constructors = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(AudioConfiguration_AudioConfiguration1, ".ctor"),

    };
    ci.methods = new JSMgr.MethodCallBackInfo[]
    {

    };
    JSMgr.allCallbackInfo.Add(ci);
}


}
