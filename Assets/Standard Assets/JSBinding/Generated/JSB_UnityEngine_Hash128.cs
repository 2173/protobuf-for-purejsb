
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by CSGenerator.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;

using jsval = JSApi.jsval;

public class JSB_UnityEngine_Hash128
{

////////////////////// Hash128 ///////////////////////////////////////
// constructors
public static ConstructorID constructorID0 = new ConstructorID(null, null);

static bool Hash128_Hash1281(JSVCall vc, int argc)
{
    int _this = JSApi.getObject((int)JSApi.GetType.Arg);
    JSApi.attachFinalizerObject(_this);
    --argc;

    int len = argc;
    if (len == 0)
    {
        JSMgr.addJSCSRel(_this, new UnityEngine.Hash128());
    }

    return true;
}

static bool Hash128_Hash1282(JSVCall vc, int argc)
{
    int _this = JSApi.getObject((int)JSApi.GetType.Arg);
    JSApi.attachFinalizerObject(_this);
    --argc;

    int len = argc;
    if (len == 4)
    {
        System.UInt32 arg0 = (System.UInt32)JSApi.getUInt32((int)JSApi.GetType.Arg);
        System.UInt32 arg1 = (System.UInt32)JSApi.getUInt32((int)JSApi.GetType.Arg);
        System.UInt32 arg2 = (System.UInt32)JSApi.getUInt32((int)JSApi.GetType.Arg);
        System.UInt32 arg3 = (System.UInt32)JSApi.getUInt32((int)JSApi.GetType.Arg);
        JSMgr.addJSCSRel(_this, new UnityEngine.Hash128(arg0, arg1, arg2, arg3));
    }

    return true;
}

// fields

// properties
static void Hash128_isValid(JSVCall vc)
{
        UnityEngine.Hash128 _this = (UnityEngine.Hash128)vc.csObj;
        var result = _this.isValid;
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(result));
}

// methods

static bool Hash128_Equals__Object(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Object arg0 = (System.Object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
UnityEngine.Hash128 argThis = (UnityEngine.Hash128)vc.csObj;                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(argThis.Equals(arg0)));
        JSMgr.changeJSObj(vc.jsObjID, argThis);
    }

    return true;
}

static bool Hash128_GetHashCode(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
UnityEngine.Hash128 argThis = (UnityEngine.Hash128)vc.csObj;                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(argThis.GetHashCode()));
        JSMgr.changeJSObj(vc.jsObjID, argThis);
    }

    return true;
}

static bool Hash128_ToString(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
UnityEngine.Hash128 argThis = (UnityEngine.Hash128)vc.csObj;                JSApi.setStringS((int)JSApi.SetType.Rval, argThis.ToString());
        JSMgr.changeJSObj(vc.jsObjID, argThis);
    }

    return true;
}

static bool Hash128_op_Equality__Hash128__Hash128(JSVCall vc, int argc)
{
    UnityEngine.Hash128 arg0 = (UnityEngine.Hash128)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
    UnityEngine.Hash128 arg1 = (UnityEngine.Hash128)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
            JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(arg0 == arg1));
    return true;
}

static bool Hash128_op_Inequality__Hash128__Hash128(JSVCall vc, int argc)
{
    UnityEngine.Hash128 arg0 = (UnityEngine.Hash128)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
    UnityEngine.Hash128 arg1 = (UnityEngine.Hash128)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
            JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(arg0 != arg1));
    return true;
}

static bool Hash128_Parse__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, UnityEngine.Hash128.Parse(arg0));
    }

    return true;
}


//register

public static void __Register()
{
    JSMgr.CallbackInfo ci = new JSMgr.CallbackInfo();
    ci.type = typeof(UnityEngine.Hash128);
    ci.fields = new JSMgr.CSCallbackField[]
    {

    };
    ci.properties = new JSMgr.CSCallbackProperty[]
    {
        Hash128_isValid,

    };
    ci.constructors = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(Hash128_Hash1281, ".ctor"),
        new JSMgr.MethodCallBackInfo(Hash128_Hash1282, ".ctor"),

    };
    ci.methods = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(Hash128_Equals__Object, "Equals"),
        new JSMgr.MethodCallBackInfo(Hash128_GetHashCode, "GetHashCode"),
        new JSMgr.MethodCallBackInfo(Hash128_ToString, "ToString"),
        new JSMgr.MethodCallBackInfo(Hash128_op_Equality__Hash128__Hash128, "op_Equality"),
        new JSMgr.MethodCallBackInfo(Hash128_op_Inequality__Hash128__Hash128, "op_Inequality"),
        new JSMgr.MethodCallBackInfo(Hash128_Parse__String, "Parse"),

    };
    JSMgr.allCallbackInfo.Add(ci);
}


}
