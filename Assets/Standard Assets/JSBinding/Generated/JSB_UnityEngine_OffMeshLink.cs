
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by CSGenerator.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;

using jsval = JSApi.jsval;

public class JSB_UnityEngine_OffMeshLink
{

////////////////////// OffMeshLink ///////////////////////////////////////
// constructors

static bool OffMeshLink_OffMeshLink1(JSVCall vc, int argc)
{
    int _this = JSApi.getObject((int)JSApi.GetType.Arg);
    JSApi.attachFinalizerObject(_this);
    --argc;

    int len = argc;
    if (len == 0)
    {
        JSMgr.addJSCSRel(_this, new UnityEngine.OffMeshLink());
    }

    return true;
}

// fields

// properties
static void OffMeshLink_activated(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.OffMeshLink _this = (UnityEngine.OffMeshLink)vc.csObj;
        var result = _this.activated;
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(result));
    }
    else
    { 
        System.Boolean arg0 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        UnityEngine.OffMeshLink _this = (UnityEngine.OffMeshLink)vc.csObj;
        _this.activated = arg0;
    }
}
static void OffMeshLink_occupied(JSVCall vc)
{
        UnityEngine.OffMeshLink _this = (UnityEngine.OffMeshLink)vc.csObj;
        var result = _this.occupied;
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(result));
}
static void OffMeshLink_costOverride(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.OffMeshLink _this = (UnityEngine.OffMeshLink)vc.csObj;
        var result = _this.costOverride;
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(result));
    }
    else
    { 
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.OffMeshLink _this = (UnityEngine.OffMeshLink)vc.csObj;
        _this.costOverride = arg0;
    }
}
static void OffMeshLink_biDirectional(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.OffMeshLink _this = (UnityEngine.OffMeshLink)vc.csObj;
        var result = _this.biDirectional;
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(result));
    }
    else
    { 
        System.Boolean arg0 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        UnityEngine.OffMeshLink _this = (UnityEngine.OffMeshLink)vc.csObj;
        _this.biDirectional = arg0;
    }
}
static void OffMeshLink_area(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.OffMeshLink _this = (UnityEngine.OffMeshLink)vc.csObj;
        var result = _this.area;
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(result));
    }
    else
    { 
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        UnityEngine.OffMeshLink _this = (UnityEngine.OffMeshLink)vc.csObj;
        _this.area = arg0;
    }
}
static void OffMeshLink_autoUpdatePositions(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.OffMeshLink _this = (UnityEngine.OffMeshLink)vc.csObj;
        var result = _this.autoUpdatePositions;
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(result));
    }
    else
    { 
        System.Boolean arg0 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        UnityEngine.OffMeshLink _this = (UnityEngine.OffMeshLink)vc.csObj;
        _this.autoUpdatePositions = arg0;
    }
}
static void OffMeshLink_startTransform(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.OffMeshLink _this = (UnityEngine.OffMeshLink)vc.csObj;
        var result = _this.startTransform;
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, result);
    }
    else
    { 
        UnityEngine.Transform arg0 = (UnityEngine.Transform)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        UnityEngine.OffMeshLink _this = (UnityEngine.OffMeshLink)vc.csObj;
        _this.startTransform = arg0;
    }
}
static void OffMeshLink_endTransform(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.OffMeshLink _this = (UnityEngine.OffMeshLink)vc.csObj;
        var result = _this.endTransform;
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, result);
    }
    else
    { 
        UnityEngine.Transform arg0 = (UnityEngine.Transform)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        UnityEngine.OffMeshLink _this = (UnityEngine.OffMeshLink)vc.csObj;
        _this.endTransform = arg0;
    }
}

// methods

static bool OffMeshLink_UpdatePositions(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
        ((UnityEngine.OffMeshLink)vc.csObj).UpdatePositions();
    }

    return true;
}


//register

public static void __Register()
{
    JSMgr.CallbackInfo ci = new JSMgr.CallbackInfo();
    ci.type = typeof(UnityEngine.OffMeshLink);
    ci.fields = new JSMgr.CSCallbackField[]
    {

    };
    ci.properties = new JSMgr.CSCallbackProperty[]
    {
        OffMeshLink_activated,
        OffMeshLink_occupied,
        OffMeshLink_costOverride,
        OffMeshLink_biDirectional,
        OffMeshLink_area,
        OffMeshLink_autoUpdatePositions,
        OffMeshLink_startTransform,
        OffMeshLink_endTransform,

    };
    ci.constructors = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(OffMeshLink_OffMeshLink1, ".ctor"),

    };
    ci.methods = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(OffMeshLink_UpdatePositions, "UpdatePositions"),

    };
    JSMgr.allCallbackInfo.Add(ci);
}


}
