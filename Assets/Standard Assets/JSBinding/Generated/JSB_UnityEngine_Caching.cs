
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by CSGenerator.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;

using jsval = JSApi.jsval;

public class JSB_UnityEngine_Caching
{

////////////////////// Caching ///////////////////////////////////////
// constructors

static bool Caching_Caching1(JSVCall vc, int argc)
{
    int _this = JSApi.getObject((int)JSApi.GetType.Arg);
    JSApi.attachFinalizerObject(_this);
    --argc;

    int len = argc;
    if (len == 0)
    {
        JSMgr.addJSCSRel(_this, new UnityEngine.Caching());
    }

    return true;
}

// fields

// properties
static void Caching_spaceFree(JSVCall vc)
{
        var result = UnityEngine.Caching.spaceFree;
                JSApi.setInt64((int)JSApi.SetType.Rval, (System.Int64)(result));
}
static void Caching_maximumAvailableDiskSpace(JSVCall vc)
{
    if (vc.bGet)
    { 
        var result = UnityEngine.Caching.maximumAvailableDiskSpace;
                JSApi.setInt64((int)JSApi.SetType.Rval, (System.Int64)(result));
    }
    else
    { 
        System.Int64 arg0 = (System.Int64)JSApi.getInt64((int)JSApi.GetType.Arg);
        UnityEngine.Caching.maximumAvailableDiskSpace = arg0;
    }
}
static void Caching_spaceOccupied(JSVCall vc)
{
        var result = UnityEngine.Caching.spaceOccupied;
                JSApi.setInt64((int)JSApi.SetType.Rval, (System.Int64)(result));
}
static void Caching_expirationDelay(JSVCall vc)
{
    if (vc.bGet)
    { 
        var result = UnityEngine.Caching.expirationDelay;
                JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(result));
    }
    else
    { 
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        UnityEngine.Caching.expirationDelay = arg0;
    }
}
static void Caching_enabled(JSVCall vc)
{
    if (vc.bGet)
    { 
        var result = UnityEngine.Caching.enabled;
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(result));
    }
    else
    { 
        System.Boolean arg0 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        UnityEngine.Caching.enabled = arg0;
    }
}
static void Caching_compressionEnabled(JSVCall vc)
{
    if (vc.bGet)
    { 
        var result = UnityEngine.Caching.compressionEnabled;
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(result));
    }
    else
    { 
        System.Boolean arg0 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        UnityEngine.Caching.compressionEnabled = arg0;
    }
}
static void Caching_ready(JSVCall vc)
{
        var result = UnityEngine.Caching.ready;
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(result));
}

// methods

static bool Caching_Authorize__String__String__Int64__Int32__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 5) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.String arg1 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.Int64 arg2 = (System.Int64)JSApi.getInt64((int)JSApi.GetType.Arg);
        System.Int32 arg3 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.String arg4 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(UnityEngine.Caching.Authorize(arg0, arg1, arg2, arg3, arg4)));
    }

    return true;
}

static bool Caching_Authorize__String__String__Int64__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 4) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.String arg1 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.Int64 arg2 = (System.Int64)JSApi.getInt64((int)JSApi.GetType.Arg);
        System.String arg3 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(UnityEngine.Caching.Authorize(arg0, arg1, arg2, arg3)));
    }

    return true;
}

static bool Caching_CleanCache(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(UnityEngine.Caching.CleanCache()));
    }

    return true;
}

static bool Caching_IsVersionCached__String__Hash128(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        UnityEngine.Hash128 arg1 = (UnityEngine.Hash128)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(UnityEngine.Caching.IsVersionCached(arg0, arg1)));
    }

    return true;
}

static bool Caching_IsVersionCached__String__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(UnityEngine.Caching.IsVersionCached(arg0, arg1)));
    }

    return true;
}

static bool Caching_MarkAsUsed__String__Hash128(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        UnityEngine.Hash128 arg1 = (UnityEngine.Hash128)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(UnityEngine.Caching.MarkAsUsed(arg0, arg1)));
    }

    return true;
}

static bool Caching_MarkAsUsed__String__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(UnityEngine.Caching.MarkAsUsed(arg0, arg1)));
    }

    return true;
}


//register

public static void __Register()
{
    JSMgr.CallbackInfo ci = new JSMgr.CallbackInfo();
    ci.type = typeof(UnityEngine.Caching);
    ci.fields = new JSMgr.CSCallbackField[]
    {

    };
    ci.properties = new JSMgr.CSCallbackProperty[]
    {
        Caching_spaceFree,
        Caching_maximumAvailableDiskSpace,
        Caching_spaceOccupied,
        Caching_expirationDelay,
        Caching_enabled,
        Caching_compressionEnabled,
        Caching_ready,

    };
    ci.constructors = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(Caching_Caching1, ".ctor"),

    };
    ci.methods = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(Caching_Authorize__String__String__Int64__Int32__String, "Authorize"),
        new JSMgr.MethodCallBackInfo(Caching_Authorize__String__String__Int64__String, "Authorize"),
        new JSMgr.MethodCallBackInfo(Caching_CleanCache, "CleanCache"),
        new JSMgr.MethodCallBackInfo(Caching_IsVersionCached__String__Hash128, "IsVersionCached"),
        new JSMgr.MethodCallBackInfo(Caching_IsVersionCached__String__Int32, "IsVersionCached"),
        new JSMgr.MethodCallBackInfo(Caching_MarkAsUsed__String__Hash128, "MarkAsUsed"),
        new JSMgr.MethodCallBackInfo(Caching_MarkAsUsed__String__Int32, "MarkAsUsed"),

    };
    JSMgr.allCallbackInfo.Add(ci);
}


}
