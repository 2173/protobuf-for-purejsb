
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by CSGenerator.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;

using jsval = JSApi.jsval;

public class JSB_UnityEngine_LineRenderer
{

////////////////////// LineRenderer ///////////////////////////////////////
// constructors

static bool LineRenderer_LineRenderer1(JSVCall vc, int argc)
{
    int _this = JSApi.getObject((int)JSApi.GetType.Arg);
    JSApi.attachFinalizerObject(_this);
    --argc;

    int len = argc;
    if (len == 0)
    {
        JSMgr.addJSCSRel(_this, new UnityEngine.LineRenderer());
    }

    return true;
}

// fields

// properties
static void LineRenderer_useWorldSpace(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.LineRenderer _this = (UnityEngine.LineRenderer)vc.csObj;
        var result = _this.useWorldSpace;
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(result));
    }
    else
    { 
        System.Boolean arg0 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        UnityEngine.LineRenderer _this = (UnityEngine.LineRenderer)vc.csObj;
        _this.useWorldSpace = arg0;
    }
}

// methods

static bool LineRenderer_SetColors__Color__Color(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        UnityEngine.Color arg0 = (UnityEngine.Color)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        UnityEngine.Color arg1 = (UnityEngine.Color)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        ((UnityEngine.LineRenderer)vc.csObj).SetColors(arg0, arg1);
    }

    return true;
}

static bool LineRenderer_SetPosition__Int32__Vector3(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        UnityEngine.Vector3 arg1 = (UnityEngine.Vector3)JSApi.getVector3S((int)JSApi.GetType.Arg);
        ((UnityEngine.LineRenderer)vc.csObj).SetPosition(arg0, arg1);
    }

    return true;
}

static bool LineRenderer_SetPositions__Vector3_Array(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        UnityEngine.Vector3[] arg0 = JSDataExchangeMgr.GetJSArg<UnityEngine.Vector3[]>(() =>
        {
            int jsObjID = JSApi.getObject((int)JSApi.GetType.Arg);
            int length = JSApi.getArrayLength(jsObjID);
            var ret = new UnityEngine.Vector3[length];
            for (var i = 0; i < length; i++) {
                JSApi.getElement(jsObjID, i);
                ret[i] = (UnityEngine.Vector3)JSApi.getVector3S((int)JSApi.GetType.SaveAndRemove);
            }
            return ret;
        });
        ((UnityEngine.LineRenderer)vc.csObj).SetPositions(arg0);
    }

    return true;
}

static bool LineRenderer_SetVertexCount__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        ((UnityEngine.LineRenderer)vc.csObj).SetVertexCount(arg0);
    }

    return true;
}

static bool LineRenderer_SetWidth__Single__Single(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        System.Single arg1 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        ((UnityEngine.LineRenderer)vc.csObj).SetWidth(arg0, arg1);
    }

    return true;
}


//register

public static void __Register()
{
    JSMgr.CallbackInfo ci = new JSMgr.CallbackInfo();
    ci.type = typeof(UnityEngine.LineRenderer);
    ci.fields = new JSMgr.CSCallbackField[]
    {

    };
    ci.properties = new JSMgr.CSCallbackProperty[]
    {
        LineRenderer_useWorldSpace,

    };
    ci.constructors = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(LineRenderer_LineRenderer1, ".ctor"),

    };
    ci.methods = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(LineRenderer_SetColors__Color__Color, "SetColors"),
        new JSMgr.MethodCallBackInfo(LineRenderer_SetPosition__Int32__Vector3, "SetPosition"),
        new JSMgr.MethodCallBackInfo(LineRenderer_SetPositions__Vector3_Array, "SetPositions"),
        new JSMgr.MethodCallBackInfo(LineRenderer_SetVertexCount__Int32, "SetVertexCount"),
        new JSMgr.MethodCallBackInfo(LineRenderer_SetWidth__Single__Single, "SetWidth"),

    };
    JSMgr.allCallbackInfo.Add(ci);
}


}
