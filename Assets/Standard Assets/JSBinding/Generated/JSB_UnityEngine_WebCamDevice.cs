
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by CSGenerator.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;

using jsval = JSApi.jsval;

public class JSB_UnityEngine_WebCamDevice
{

////////////////////// WebCamDevice ///////////////////////////////////////
// constructors
public static ConstructorID constructorID0 = new ConstructorID(null, null);

static bool WebCamDevice_WebCamDevice1(JSVCall vc, int argc)
{
    int _this = JSApi.getObject((int)JSApi.GetType.Arg);
    JSApi.attachFinalizerObject(_this);
    --argc;

    int len = argc;
    if (len == 0)
    {
        JSMgr.addJSCSRel(_this, new UnityEngine.WebCamDevice());
    }

    return true;
}

// fields

// properties
static void WebCamDevice_name(JSVCall vc)
{
        UnityEngine.WebCamDevice _this = (UnityEngine.WebCamDevice)vc.csObj;
        var result = _this.name;
                JSApi.setStringS((int)JSApi.SetType.Rval, result);
}
static void WebCamDevice_isFrontFacing(JSVCall vc)
{
        UnityEngine.WebCamDevice _this = (UnityEngine.WebCamDevice)vc.csObj;
        var result = _this.isFrontFacing;
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(result));
}

// methods


//register

public static void __Register()
{
    JSMgr.CallbackInfo ci = new JSMgr.CallbackInfo();
    ci.type = typeof(UnityEngine.WebCamDevice);
    ci.fields = new JSMgr.CSCallbackField[]
    {

    };
    ci.properties = new JSMgr.CSCallbackProperty[]
    {
        WebCamDevice_name,
        WebCamDevice_isFrontFacing,

    };
    ci.constructors = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(WebCamDevice_WebCamDevice1, ".ctor"),

    };
    ci.methods = new JSMgr.MethodCallBackInfo[]
    {

    };
    JSMgr.allCallbackInfo.Add(ci);
}


}
