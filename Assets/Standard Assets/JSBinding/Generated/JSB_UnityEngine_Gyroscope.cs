
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by CSGenerator.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;

using jsval = JSApi.jsval;

public class JSB_UnityEngine_Gyroscope
{

////////////////////// Gyroscope ///////////////////////////////////////
// constructors

// fields

// properties
static void Gyroscope_rotationRate(JSVCall vc)
{
        UnityEngine.Gyroscope _this = (UnityEngine.Gyroscope)vc.csObj;
        var result = _this.rotationRate;
                JSApi.setVector3S((int)JSApi.SetType.Rval, result);
}
static void Gyroscope_rotationRateUnbiased(JSVCall vc)
{
        UnityEngine.Gyroscope _this = (UnityEngine.Gyroscope)vc.csObj;
        var result = _this.rotationRateUnbiased;
                JSApi.setVector3S((int)JSApi.SetType.Rval, result);
}
static void Gyroscope_gravity(JSVCall vc)
{
        UnityEngine.Gyroscope _this = (UnityEngine.Gyroscope)vc.csObj;
        var result = _this.gravity;
                JSApi.setVector3S((int)JSApi.SetType.Rval, result);
}
static void Gyroscope_userAcceleration(JSVCall vc)
{
        UnityEngine.Gyroscope _this = (UnityEngine.Gyroscope)vc.csObj;
        var result = _this.userAcceleration;
                JSApi.setVector3S((int)JSApi.SetType.Rval, result);
}
static void Gyroscope_attitude(JSVCall vc)
{
        UnityEngine.Gyroscope _this = (UnityEngine.Gyroscope)vc.csObj;
        var result = _this.attitude;
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, result);
}
static void Gyroscope_enabled(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.Gyroscope _this = (UnityEngine.Gyroscope)vc.csObj;
        var result = _this.enabled;
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(result));
    }
    else
    { 
        System.Boolean arg0 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        UnityEngine.Gyroscope _this = (UnityEngine.Gyroscope)vc.csObj;
        _this.enabled = arg0;
    }
}
static void Gyroscope_updateInterval(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.Gyroscope _this = (UnityEngine.Gyroscope)vc.csObj;
        var result = _this.updateInterval;
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(result));
    }
    else
    { 
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.Gyroscope _this = (UnityEngine.Gyroscope)vc.csObj;
        _this.updateInterval = arg0;
    }
}

// methods


//register

public static void __Register()
{
    JSMgr.CallbackInfo ci = new JSMgr.CallbackInfo();
    ci.type = typeof(UnityEngine.Gyroscope);
    ci.fields = new JSMgr.CSCallbackField[]
    {

    };
    ci.properties = new JSMgr.CSCallbackProperty[]
    {
        Gyroscope_rotationRate,
        Gyroscope_rotationRateUnbiased,
        Gyroscope_gravity,
        Gyroscope_userAcceleration,
        Gyroscope_attitude,
        Gyroscope_enabled,
        Gyroscope_updateInterval,

    };
    ci.constructors = new JSMgr.MethodCallBackInfo[]
    {

    };
    ci.methods = new JSMgr.MethodCallBackInfo[]
    {

    };
    JSMgr.allCallbackInfo.Add(ci);
}


}
